"use strict";(self.webpackChunkfacturapi_docs=self.webpackChunkfacturapi_docs||[]).push([["3045"],{2089:function(e){e.exports=JSON.parse('{"url":"redocusaurus/api-en.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.1.0","servers":[{"url":"https://www.facturapi.io/v2"}],"info":{"title":"Facturapi","version":"2.0","contact":{"name":"Facturapi","url":"https://www.facturapi.io","email":"soporte@facturapi.io"},"x-logo":{"url":"https://www.facturapi.io/img/logo.svg","altText":"Facturapi"},"description":"<br />\\n  <br />\\n\\n  On this page, we list all the methods available in the Facturapi API, as\\n  well as the complete reference of the parameters you can send. To see the\\n  nested properties of an object or an array of objects, you can click on\\n  the field name to expand it.\\n\\n  The Facturapi API is designed with the\\n  [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) standard in\\n  mind. The API endpoints are grouped by resources, have predictable URLs,\\n  the responses are in JSON format, and we use standard HTTP response codes,\\n  authentication, and verbs.\\n\\n  During development, you can use the Facturapi API in the Test environment, and the invoices you issue will not be sent to the SAT (Mexican Tax Authority) and will not have fiscal validity.\\n  \\n  The secret key you use to authenticate will determine both the environment in which the invoice will be created (Test or Live), as well as the organization to use as the issuer of your invoice or as the owner of the resource you request to create.\\n"},"tags":[{"name":"tools","x-displayName":"Tools"},{"name":"customer","x-displayName":"Customers"},{"name":"product","x-displayName":"Products"},{"name":"invoice","x-displayName":"Invoices"},{"name":"receipt","x-displayName":"E-Receipts"},{"name":"retention","x-displayName":"Retentions"},{"name":"organization","x-displayName":"Organizations"},{"name":"webhooks","x-displayName":"Webhooks"},{"name":"events","x-displayName":"Events","description":"Events occur when Facturapi performs an operation asynchronously, outside the lifecycle of an API request.\\n\\nTo receive these events on your server, you can register a listening URL by creating a Webhook from your dashboard: https://dashboard.facturapi.io/integration/webhooks\\n"},{"name":"sat_keys","x-displayName":"Keys from SAT\'s cat\xe1logos","description":"These are the main catalogs from SAT, included here for convenience. This is by no means the full list. You can find these and more catalogs on the official SAT website: http://omawww.sat.gob.mx/tramitesyservicios/Paginas/anexo_20_version3-3.htm\\n\\n### Forma de Pago\\n\\n(Payment Form)\\n\\nKey  | Description (Spanish) | Description (English)\\n:---:|:----------------------|:---------------------\\n\\"01\\" | Efectivo | Cash\\n\\"02\\" | Cheque nominativo | Nominal check\\n\\"03\\" | Transferencia electr\xf3nica de fondos | Electronic transfer of funds\\n\\"04\\" | Tarjeta de cr\xe9dito | Credit card\\n\\"05\\" | Monedero electr\xf3nico | Electronic wallet\\n\\"06\\" | Dinero electr\xf3nico | Mobile payment\\n\\"08\\" | Vales de despensa | Food vouchers\\n\\"12\\" | Daci\xf3n en pago | Payment in kind\\n\\"13\\" | Pago por subrogaci\xf3n | Subrogation payment\\n\\"14\\" | Pago por consignaci\xf3n | Consignment payment\\n\\"15\\" | Condonaci\xf3n | Debt Forgiveness or Cancellation\\n\\"17\\" | Compensaci\xf3n | Settling Debts with Existing Credits\\n\\"23\\" | Novaci\xf3n | Novation\\n\\"24\\" | Confusi\xf3n | Confusion\\n\\"25\\" | Remisi\xf3n de deuda | Remission\\n\\"26\\" | Prescripci\xf3n o caducidad | Expiration of the term\\n\\"27\\" | A satisfacci\xf3n del acreedor | Satisfactory payment\\n\\"28\\" | Tarjeta de d\xe9bito | Debit card\\n\\"29\\" | Servicio | Service payment\\n\\"30\\" | Aplicaci\xf3n de anticipos | Application of advanced payments\\n\\"31\\" | Intermediario pagos | Payment intermediation\\n\\"99\\" | Por definir | Pending definition\\n\\n### M\xe9todo de Pago\\n\\n(Payment Method)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:--------------------|:---------------------\\n\\"PUE\\" | Pago en Una [sola] Exhibici\xf3n | Payment in a single installment\\n\\"PPD\\" | Pago en Parcialidades o Diferido | Payment in installments or deferred\\n\\n### Uso del CFDI\\n\\n(CFDI use)\\n\\nKey | Description (Spanish) | Description (English) | Allowed Fiscal Regimes\\n:-----:|:----------- |:----------- |:-----------\\n\\"G01\\" | Adquisici\xf3n de mercanc\xedas. | Purchase of goods | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"G02\\" | Devoluciones, descuentos y bonificaciones. | Returns, discounts and bonuses | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"G03\\" | Gastos en general. | General expenses | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I01\\" | Construcciones. | Constructions | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I02\\" | Mobiliario y equipo de oficina por inversiones. | Furniture and office equipment for investments | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I03\\" | Equipo de transporte. | Transportation equipment | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I04\\" | Equipo de computo y accesorios. | Computer equipment and accessories | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I05\\" | Dados, troqueles, moldes, matrices y herramental. | Dies, molds, matrices and tools | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I06\\" | Comunicaciones telef\xf3nicas. | Telephone communications | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I07\\" | Comunicaciones satelitales. | Satellite communications | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"I08\\" | Otra maquinaria y equipo. | Other machinery and equipment | 601, 603, 606, 612, 620, 621, 622, 623, 624, 625, 626\\n\\"D01\\" | Honorarios m\xe9dicos, dentales y gastos hospitalarios. | Medical, dental and hospital expenses. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D02\\" | Gastos m\xe9dicos por incapacidad o discapacidad. | Medical expenses for disability. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D03\\" | Gastos funerales. | Funeral expenses. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D04\\" | Donativos. | Donations. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D05\\" | Intereses reales efectivamente pagados por cr\xe9ditos hipotecarios (casa habitaci\xf3n). | Real interest actually paid for mortgage loans (housing). | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D06\\" | Aportaciones voluntarias al SAR. | Voluntary contributions to the SAR. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D07\\" | Primas por seguros de gastos m\xe9dicos. | Premiums for medical expenses insurance. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D08\\" | Gastos de transportaci\xf3n escolar obligatoria. | Mandatory school transportation expenses. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D09\\" | Dep\xf3sitos en cuentas para el ahorro, primas que tengan como base planes de pensiones. | Deposits in savings accounts, premiums based on pension plans. | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"D10\\" | Pagos por servicios educativos (colegiaturas). | Payments for educational services (tuition). | 605, 606, 608, 611, 612, 614, 607, 615, 625\\n\\"S01\\" | Sin efectos fiscales. | Without fiscal effects | 601, 603, 605, 606, 608, 610, 611, 612, 614, 616, 620, 621, 622, 623, 624, 607, 615, 625, 626\\n\\"CP01\\" | Pagos | Payments | 601, 603, 605, 606, 608, 610, 611, 612, 614, 616, 620, 621, 622, 623, 624, 607, 615, 625, 626\\n\\"CN01\\" | N\xf3mina | Payroll | 605\\n\\n### Relaci\xf3n entre facturas\\n\\n(Relation between invoices)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:-----------|:-----------\\n\\"01\\" | Nota de cr\xe9dito de los documentos relacionados | Credit note of the related documents\\n\\"02\\" | Nota de d\xe9bito de los documentos relacionados | Debit note of the related documents\\n\\"03\\" | Devoluci\xf3n de mercanc\xeda sobre facturas o traslados previos | Return of goods on invoices or previous transfers\\n\\"04\\" | Sustituci\xf3n de los CFDI previos | Replacement of previous CFDI\\n\\"05\\" | Traslados de mercancias facturados previamente | Transfers of goods previously invoiced\\n\\"06\\" | Factura generada por los traslados previos | Invoice generated by previous transfers\\n\\"07\\" | CFDI por aplicaci\xf3n de anticipo | CFDI by advance payment application\\n\\"08\\" | Factura generada por pagos en parcialidades | Invoice generated by payments in installments\\n\\"09\\" | Factura generada por pagos diferidos | Invoice generated by deferred payments\\n\\n### R\xe9gimen Fiscal\\n\\n(Fiscal Regimes or Tax Systems)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:-----------|:-----------\\n\\"601\\" |\\tGeneral de Ley Personas Morales |\\tGeneral Law of Legal Entities\\n\\"603\\" |\\tPersonas Morales con Fines no Lucrativos |\\tNon-profit Legal Entities\\n\\"605\\" |\\tSueldos y Salarios e Ingresos Asimilados a Salarios |\\tWages and Salaries and Assimilated Income\\n\\"606\\" |\\tArrendamiento |\\tRent\\n\\"608\\" |\\tDem\xe1s ingresos |\\tOther income\\n\\"609\\" |\\tConsolidaci\xf3n |\\tConsolidation\\n\\"610\\" |\\tResidentes en el Extranjero sin Establecimiento Permanente en M\xe9xico |\\tNon-residents with no Permanent Establishment in Mexico\\n\\"611\\" |\\tIngresos por Dividendos (socios y accionistas) |\\tDividends (partners and shareholders)\\n\\"612\\" |\\tPersonas F\xedsicas con Actividades Empresariales y Profesionales |\\tIndividuals with Business and Professional Activities\\n\\"614\\" |\\tIngresos por intereses |\\tInterest income\\n\\"616\\" |\\tSin obligaciones fiscales |\\tNo tax obligations\\n\\"620\\" |\\tSociedades Cooperativas de Producci\xf3n que optan por diferir sus ingresos |\\tProduction Cooperatives that choose to defer their income\\n\\"621\\" |\\tIncorporaci\xf3n Fiscal |\\tFiscal Incorporation\\n\\"622\\" |\\tActividades Agr\xedcolas, Ganaderas, Silv\xedcolas y Pesqueras |\\tAgricultural, Livestock, Forestry and Fishing Activities\\n\\"623\\" |\\tOpcional para Grupos de Sociedades |\\tOptional for Groups of Companies\\n\\"624\\" |\\tCoordinados |\\tCoordinated\\n\\"628\\" |\\tHidrocarburos |\\tHydrocarbons\\n\\"607\\" |\\tR\xe9gimen de Enajenaci\xf3n o Adquisici\xf3n de Bienes |\\tRegime of Alienation or Acquisition of Goods\\n\\"629\\" |\\tDe los Reg\xedmenes Fiscales Preferentes y de las Empresas Multinacionales |\\tOf Preferential Tax Regimes and Multinational Companies\\n\\"630\\" |\\tEnajenaci\xf3n de acciones en bolsa de valores |\\tSale of shares on the stock exchange\\n\\"615\\" |\\tR\xe9gimen de los ingresos por obtenci\xf3n de premios |\\tRegime of income from obtaining prizes\\n\\"625\\" |\\tR\xe9gimen de las Actividades Empresariales con ingresos a trav\xe9s de Plataformas Tecnol\xf3gicas |\\tRegime of Business Activities with income through Technological Platforms\\n\\"626\\" | R\xe9gimen Simplificado de Confianza | Simplified Trust Regime\\n\\n### Meses y bimestres\\n\\n(Months and bimesters)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:| ----------- | -----------\\n01 | Enero | January\\n02 | Febrero | February\\n03 | Marzo | March\\n04 | Abril | April\\n05 | Mayo | May\\n06 | Junio | June\\n07 | Julio | July\\n08 | Agosto | August\\n09 | Septiembre | September\\n10 | Octubre | October\\n11 | Noviembre | November\\n12 | Diciembre | December\\n13 | Enero-Febrero | January-February\\n14 | Marzo-Abril | March-April\\n15 | Mayo-Junio | May-June\\n16 | Julio-Agosto | July-August\\n17 | Septiembre-Octubre | September-October\\n18 | Noviembre-Diciembre | November-December\\n\\n### Tipo de Contrato\\n\\n(Type of Contract)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"01\\" | Contrato de trabajo por tiempo indeterminado | Indefinite term employment contract\\n\\"02\\" | Contrato de trabajo para obra determinada | Employment contract for a specific work\\n\\"03\\" | Contrato de trabajo por tiempo determinado | Employment contract for a fixed term\\n\\"04\\" | Contrato de trabajo por temporada | Seasonal employment contract\\n\\"05\\" | Contrato de trabajo sujeto a prueba | Employment contract subject to trial\\n\\"06\\" | Contrato de trabajo con capacitaci\xf3n inicial | Employment contract with initial training\\n\\"07\\" | Modalidad de contrataci\xf3n por pago de hora laborada | Modality of hiring by payment of hours worked\\n\\"08\\" | Modalidad de trabajo por comisi\xf3n laboral | Labor commission work modality\\n\\"09\\" | Modalidades de contrataci\xf3n donde no existe relaci\xf3n de trabajo | Hiring modalities where there is no employment relationship\\n\\"10\\" | Jubilaci\xf3n, pensi\xf3n, retiro. | Retirement, pension, retirement.\\n\\"99\\" | Otro contrato | Other contract\\n\\n### Tipo de Jornada\\n\\n(Type of Labor Day)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:| ----------- | -----------\\n\\"01\\" | Diurna | Daytime\\n\\"02\\" | Nocturna | Night\\n\\"03\\" | Mixta | Mixed\\n\\"04\\" | Por hora | By the hour\\n\\"05\\" | Reducida | Reduced\\n\\"06\\" | Continuada | Continued\\n\\"07\\" | Partida | Split\\n\\"08\\" | Por turnos | By shifts\\n\\"99\\" | Otra Jornada | Other day\\n\\n### Tipo de R\xe9gimen\\n\\n(Type of Regime)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"02\\" | Sueldos (Incluye ingresos se\xf1alados en la fracci\xf3n I del art\xedculo 94 de LISR) | Salaries (Includes income referred to in section I of article 94 of LISR)\\n\\"03\\" | Jubilados | Retirees\\n\\"04\\" | Pensionados | Pensioners\\n\\"05\\" | Asimilados Miembros Sociedades Cooperativas Produccion | Assimilated Members of Production Cooperatives\\n\\"06\\" | Asimilados Integrantes Sociedades Asociaciones Civiles | Assimilated Members of Civil Associations\\n\\"07\\" | Asimilados Miembros Consejos Administraci\xf3n Sociedades Mercantiles | Assimilated Members of the Boards of Directors of Commercial Companies\\n\\"08\\" | Asimilados comisionistas | Assimilated commission agents\\n\\"09\\" | Asimilados Honorarios | Assimilated Fees\\n\\"10\\" | Asimilados acciones | Assimilated shares\\n\\"11\\" | Asimilados otros | Assimilated others\\n\\"12\\" | Jubilados o Pensionados | Retirees or Pensioners\\n\\"13\\" | Indemnizaci\xf3n o Separaci\xf3n | Compensation or Separation\\n\\"99\\" | Otro Regimen | Other Regime\\n\\n### Riesgo del Puesto\\n\\n(Risk of the Position)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:| ----------- | -----------\\n\\"1\\" | Clase I | Class I\\n\\"2\\" | Clase II | Class II\\n\\"3\\" | Clase III | Class III\\n\\"4\\" | Clase IV | Class IV\\n\\"5\\" | Clase V | Class V\\n\\"99\\" | No aplica | Does not apply\\n\\n### Periodicidad del Pago\\n\\n(Payment Frequency)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:| ----------- | -----------\\n\\"01\\" | Diario | Daily\\n\\"02\\" | Semanal | Weekly\\n\\"03\\" | Catorcenal | Biweekly\\n\\"04\\" | Quincenal | Fortnightly\\n\\"05\\" | Mensual | Monthly\\n\\"06\\" | Bimestral | Bimonthly\\n\\"07\\" | Unidad obra | Work unit\\n\\"08\\" | Comisi\xf3n | Commission\\n\\"09\\" | Precio alzado | Fixed price\\n\\"10\\" | Decenal | Ten-day\\n\\"99\\" | Otra Periodicidad | Other Frequency\\n\\n### Tipo de Percepci\xf3n\\n\\n(Type of Earnings)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"001\\" | Sueldos, Salarios  Rayas y Jornales | Wages, Salaries, Stripes and Wages\\n\\"002\\" | Gratificaci\xf3n Anual (Aguinaldo) | Annual Bonus (Aguinaldo)\\n\\"003\\" | Participaci\xf3n de los Trabajadores en las Utilidades PTU | Participation of Workers in Profits PTU\\n\\"004\\" | Reembolso de Gastos M\xe9dicos Dentales y Hospitalarios | Reimbursement of Medical, Dental and Hospital Expenses\\n\\"005\\" | Fondo de Ahorro | Savings Fund\\n\\"006\\" | Caja de ahorro | Savings box\\n\\"009\\" | Contribuciones a Cargo del Trabajador Pagadas por el Patr\xf3n | Contributions to be paid by the Worker Paid by the Employer\\n\\"010\\" | Premios por puntualidad | Punctuality Awards\\n\\"011\\" | Prima de Seguro de vida | Life Insurance Premium\\n\\"012\\" | Seguro de Gastos M\xe9dicos Mayores | Major Medical Expenses Insurance\\n\\"013\\" | Cuotas Sindicales Pagadas por el Patr\xf3n | Union Dues Paid by the Employer\\n\\"014\\" | Subsidios por incapacidad | Disability Subsidies\\n\\"015\\" | Becas para trabajadores y/o hijos | Scholarships for workers and / or children\\n\\"019\\" | Horas extra | Extra hours\\n\\"020\\" | Prima dominical | Sunday premium\\n\\"021\\" | Prima vacacional | Vacation premium\\n\\"022\\" | Prima por antig\xfcedad | Seniority premium\\n\\"023\\" | Pagos por separaci\xf3n | Separation payments\\n\\"024\\" | Seguro de retiro | Retirement insurance\\n\\"025\\" | Indemnizaciones | Indemnities\\n\\"026\\" | Reembolso por funeral | Funeral refund\\n\\"027\\" | Cuotas de seguridad social pagadas por el patr\xf3n | Social security fees paid by the employer\\n\\"028\\" | Comisiones | Commissions\\n\\"029\\" | Vales de despensa | Food vouchers\\n\\"030\\" | Vales de restaurante | Restaurant vouchers\\n\\"031\\" | Vales de gasolina | Gasoline vouchers\\n\\"032\\" | Vales de ropa | Clothing vouchers\\n\\"033\\" | Ayuda para renta | Help for rent\\n\\"034\\" | Ayuda para art\xedculos escolares | Help for school supplies\\n\\"035\\" | Ayuda para anteojos | Help for glasses\\n\\"036\\" | Ayuda para transporte | Transportation help\\n\\"037\\" | Ayuda para gastos de funeral | Help for funeral expenses\\n\\"038\\" | Otros ingresos por salarios | Other income from salaries\\n\\"039\\" | Jubilaciones, pensiones o haberes de retiro en una sola exhibici\xf3n | Retirement, pensions or retirement benefits in a single exhibition\\n\\"044\\" | Jubilaciones, pensiones o haberes de retiro en parcialidades | Retirement, pensions or retirement benefits in installments\\n\\"045\\" | Ingresos en acciones o t\xedtulos valor que representan bienes | Income in shares or securities representing goods\\n\\"046\\" | Ingresos asimilados a salarios | Income assimilated to salaries\\n\\"047\\" | Alimentaci\xf3n diferentes a los establecidos en el Art 94 \xfaltimo p\xe1rrafo LISR | Food other than those established in Art 94 last paragraph LISR\\n\\"048\\" | Habitaci\xf3n | Room\\n\\"049\\" | Premios por asistencia | Attendance awards\\n\\"050\\" | Vi\xe1ticos | Travel allowances\\n\\"051\\" | Pagos por gratificaciones, primas, compensaciones, recompensas u otros en parcialidades | Payments for bonuses, bonuses, compensations, rewards or others in installments\\n\\"052\\" | Pagos por jubilaci\xf3n en parcialidades derivados de una resoluci\xf3n judicial | Retirement payments in installments derived from a judicial resolution\\n\\"053\\" | Pagos por jubilaci\xf3n en una sola exhibici\xf3n derivados de la ejecuci\xf3n de una resoluci\xf3n judicial | Retirement payments in a single exhibition derived from the execution of a judicial resolution\\n\\n### Tipo de Horas\\n\\n(Type of Hours)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:| ----------- | -----------\\n\\"01\\" | Dobles | Doubles\\n\\"02\\" | Triples | Triples\\n\\"03\\" | Simples | Singles\\n\\n### Tipo de Deducci\xf3n\\n\\n(Type of Deduction)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"001\\" | Seguridad social | Social security\\n\\"002\\" | ISR | ISR (Income Tax)\\n\\"003\\" | Aportaciones a retiro, cesant\xeda en edad avanzada y vejez. | Contributions to retirement, old age and old age.\\n\\"004\\" | Otros | Others\\n\\"005\\" | Aportaciones a Fondo de vivienda | Contributions to Housing Fund\\n\\"006\\" | Descuento por incapacidad | Disability discount\\n\\"007\\" | Pensi\xf3n alimenticia | Alimony\\n\\"008\\" | Renta | Rent\\n\\"009\\" | Pr\xe9stamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores | Loans from the National Housing Fund for Workers\\n\\"010\\" | Pago por cr\xe9dito de vivienda | Payment for housing credit\\n\\"011\\" | Pago de abonos INFONACOT | Payment of INFONACOT installments\\n\\"012\\" | Anticipo de salarios | Salary advance\\n\\"013\\" | Pagos hechos con exceso al trabajador | Payments made in excess to the worker\\n\\"014\\" | Errores | Errors\\n\\"015\\" | P\xe9rdidas | Losses\\n\\"016\\" | Aver\xedas | Breakdowns\\n\\"017\\" | Adquisici\xf3n de art\xedculos producidos por la empresa o establecimiento | Acquisition of items produced by the company or establishment\\n\\"018\\" | Cuotas para la constituci\xf3n y fomento de sociedades cooperativas y de cajas de ahorro | Fees for the constitution and promotion of cooperative societies and savings banks\\n\\"019\\" | Cuotas sindicales | Union fees\\n\\"020\\" | Ausencia (Ausentismo) | Absence (Absenteeism)\\n\\"021\\" | Cuotas obrero patronales | Worker-employer fees\\n\\"022\\" | Impuestos Locales | Local Taxes\\n\\"023\\" | Aportaciones voluntarias al SAR | Voluntary contributions to the SAR\\n\\"024\\" | Ajuste en Gratificaci\xf3n Anual (Aguinaldo) Exento | Adjustment in Annual Bonus (Aguinaldo) Exempt\\n\\"025\\" | Ajuste en Gratificaci\xf3n Anual (Aguinaldo) Gravado | Adjustment in Annual Bonus (Aguinaldo) Taxed\\n\\"026\\" | Ajuste en Participaci\xf3n de los Trabajadores en las Utilidades PTU Exento | Adjustment in Workers\' Participation in Profits PTU Exempt\\n\\"027\\" | Ajuste en Participaci\xf3n de los Trabajadores en las Utilidades PTU Gravado | Adjustment in Workers\' Participation in Profits PTU Taxed\\n\\"028\\" | Ajuste en Reembolso de Gastos M\xe9dicos Dentales y Hospitalarios Exento | Adjustment in Reimbursement of Medical, Dental and Hospital Expenses Exempt\\n\\"029\\" | Ajuste en Fondo de ahorro Exento | Adjustment in Savings Fund Exempt\\n\\"030\\" | Ajuste en Caja de ahorro Exento | Adjustment in Savings Box Exempt\\n\\"031\\" | Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patr\xf3n Exento | Adjustment in Contributions to be paid by the Worker Paid by the Employer Exempt\\n\\"032\\" | Ajuste en Premios por puntualidad Gravado | Adjustment in Punctuality Awards Taxed\\n\\"033\\" | Ajuste en Prima de Seguro de vida Exento | Adjustment in Life Insurance Premium Exempt\\n\\"034\\" | Ajuste en Seguro de Gastos M\xe9dicos Mayores Exento | Adjustment in Major Medical Expenses Insurance Exempt\\n\\"035\\" | Ajuste en Cuotas Sindicales Pagadas por el Patr\xf3n Exento | Adjustment in Union Dues Paid by the Employer Exempt\\n\\"036\\" | Ajuste en Subsidios por incapacidad Exento | Adjustment in Disability Subsidies Exempt\\n\\"037\\" | Ajuste en Becas para trabajadores y/o hijos Exento | Adjustment in Scholarships for workers and / or children Exempt\\n\\"038\\" | Ajuste en Horas extra Exento | Adjustment in Extra hours Exempt\\n\\"039\\" | Ajuste en Horas extra Gravado | Adjustment in Extra hours Taxed\\n\\"040\\" | Ajuste en Prima dominical Exento | Adjustment in Sunday premium Exempt\\n\\"041\\" | Ajuste en Prima dominical Gravado | Adjustment in Sunday premium Taxed\\n\\"042\\" | Ajuste en Prima vacacional Exento | Adjustment in Vacation premium Exempt\\n\\"043\\" | Ajuste en Prima vacacional Gravado | Adjustment in Vacation premium Taxed\\n\\"044\\" | Ajuste en Prima por antig\xfcedad Exento | Adjustment in Seniority premium Exempt\\n\\"045\\" | Ajuste en Prima por antig\xfcedad Gravado | Adjustment in Seniority premium Taxed\\n\\"046\\" | Ajuste en Pagos por separaci\xf3n Exento | Adjustment in Separation payments Exempt\\n\\"047\\" | Ajuste en Pagos por separaci\xf3n Gravado | Adjustment in Separation payments Taxed\\n\\"048\\" | Ajuste en Seguro de retiro Exento | Adjustment in Retirement insurance Exempt\\n\\"049\\" | Ajuste en Indemnizaciones Exento | Adjustment in Indemnities Exempt\\n\\"050\\" | Ajuste en Indemnizaciones Gravado | Adjustment in Indemnities Taxed\\n\\"051\\" | Ajuste en Reembolso por funeral Exento | Adjustment in Funeral refund Exempt\\n\\"052\\" | Ajuste en Cuotas de seguridad social pagadas por el patr\xf3n Exento | Adjustment in Social security fees paid by the employer Exempt\\n\\"053\\" | Ajuste en Comisiones Gravado | Adjustment in Commissions Taxed\\n\\"054\\" | Ajuste en Vales de despensa Exento | Adjustment in Food vouchers Exempt\\n\\"055\\" | Ajuste en Vales de restaurante Exento | Adjustment in Restaurant vouchers Exempt\\n\\"056\\" | Ajuste en Vales de gasolina Exento | Adjustment in Gasoline vouchers Exempt\\n\\"057\\" | Ajuste en Vales de ropa Exento | Adjustment in Clothing vouchers Exempt\\n\\"058\\" | Ajuste en Ayuda para renta Exento | Adjustment in Help for rent Exempt\\n\\"059\\" | Ajuste en Ayuda para art\xedculos escolares Exento | Adjustment in Help for school supplies Exempt\\n\\"060\\" | Ajuste en Ayuda para anteojos Exento | Adjustment in Help for glasses Exempt\\n\\"061\\" | Ajuste en Ayuda para transporte Exento | Adjustment in Transportation help Exempt\\n\\"062\\" | Ajuste en Ayuda para gastos de funeral Exento | Adjustment in Help for funeral expenses Exempt\\n\\"063\\" | Ajuste en Otros ingresos por salarios Exento | Adjustment in Other income from salaries Exempt\\n\\"064\\" | Ajuste en Otros ingresos por salarios Gravado | Adjustment in Other income from salaries Taxed\\n\\"065\\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibici\xf3n Exento | Adjustment in Retirement, pensions or retirement benefits in a single exhibition Exempt\\n\\"066\\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibici\xf3n Gravado | Adjustment in Retirement, pensions or retirement benefits in a single exhibition Taxed\\n\\"067\\" | Ajuste en Pagos por separaci\xf3n Acumulable | Adjustment in Separation payments Accumulable\\n\\"068\\" | Ajuste en Pagos por separaci\xf3n No acumulable | Adjustment in Separation payments Non-accumulable\\n\\"069\\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Exento | Adjustment in Retirement, pensions or retirement benefits in installments Exempt\\n\\"070\\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Gravado | Adjustment in Retirement, pensions or retirement benefits in installments Taxed\\n\\"071\\" | Ajuste en Subsidio para el empleo (efectivamente entregado al trabajador) | Adjustment in Employment subsidy (effectively delivered to the worker)\\n\\"072\\" | Ajuste en Ingresos en acciones o t\xedtulos valor que representan bienes Exento | Adjustment in Income in shares or securities representing goods Exempt\\n\\"073\\" | Ajuste en Ingresos en acciones o t\xedtulos valor que representan bienes Gravado | Adjustment in Income in shares or securities representing goods Taxed\\n\\"074\\" | Ajuste en Alimentaci\xf3n Exento | Adjustment in Food Exempt\\n\\"075\\" | Ajuste en Alimentaci\xf3n Gravado | Adjustment in Food Taxed\\n\\"076\\" | Ajuste en Habitaci\xf3n Exento | Adjustment in Room Exempt\\n\\"077\\" | Ajuste en Habitaci\xf3n Gravado | Adjustment in Room Taxed\\n\\"078\\" | Ajuste en Premios por asistencia Exento | Adjustment in Attendance awards Exempt\\n\\"079\\" | Ajuste en Pagos distintos a los listados Exento | Adjustment in Payments other than those listed Exempt\\n\\"080\\" | Ajuste en Vi\xe1ticos gravados | Adjustment in Taxable travel expenses\\n\\"081\\" | Ajuste en Vi\xe1ticos (entregados al trabajador) | Adjustment in Travel expenses (delivered to the worker)\\n\\"082\\" | Ajuste en Fondo de ahorro Gravado | Adjustment in Savings Fund Taxed\\n\\"083\\" | Ajuste en Caja de ahorro Gravado | Adjustment in Savings Box Taxed\\n\\"084\\" | Ajuste en Prima de Seguro de vida Gravado | Adjustment in Life Insurance Premium Taxed\\n\\"085\\" | Ajuste en Seguro de Gastos M\xe9dicos Mayores Gravado | Adjustment in Major Medical Expenses Insurance Taxed\\n\\"086\\" | Ajuste en Subsidios por incapacidad Gravado | Adjustment in Disability Subsidies Taxed\\n\\"087\\" | Ajuste en Becas para trabajadores y/o hijos Gravado | Adjustment in Scholarships for workers and / or children Taxed\\n\\"088\\" | Ajuste en Seguro de retiro Gravado | Adjustment in Retirement insurance Taxed\\n\\"089\\" | Ajuste en Vales de despensa Gravado | Adjustment in Food vouchers Taxed\\n\\"090\\" | Ajuste en Vales de restaurante Gravado | Adjustment in Restaurant vouchers Taxed\\n\\"091\\" | Ajuste en Vales de gasolina Gravado | Adjustment in Gasoline vouchers Taxed\\n\\"092\\" | Ajuste en Vales de ropa Gravado | Adjustment in Clothing vouchers Taxed\\n\\"093\\" | Ajuste en Ayuda para renta Gravado | Adjustment in Help for rent Taxed\\n\\"094\\" | Ajuste en Ayuda para art\xedculos escolares Gravado | Adjustment in Help for school supplies Taxed\\n\\"095\\" | Ajuste en Ayuda para anteojos Gravado | Adjustment in Help for glasses Taxed\\n\\"096\\" | Ajuste en Ayuda para transporte Gravado | Adjustment in Transportation help Taxed\\n\\"097\\" | Ajuste en Ayuda para gastos de funeral Gravado | Adjustment in Help for funeral expenses Taxed\\n\\"098\\" | Ajuste a ingresos asimilados a salarios gravados | Adjustment to income assimilated to taxed salaries\\n\\"099\\" | Ajuste a ingresos por sueldos y salarios gravados | Adjustment to income for taxed wages and salaries\\n\\"100\\" | Ajuste en Vi\xe1ticos exentos | Adjustment in Exempt travel expenses\\n\\"101\\" | ISR Retenido de ejercicio anterior | ISR Retained from previous exercise\\n\\"102\\" | Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros gravados | Adjustment to payments for bonuses, bonuses, compensations, rewards or others taxed\\n\\"103\\" | Ajuste a pagos en parcialidades derivados de una resoluci\xf3n judicial gravados | Adjustment to payments in installments derived from a judicial resolution taxed\\n\\"104\\" | Ajuste a pagos en parcialidades derivados de una resoluci\xf3n judicial exentos | Adjustment to payments in installments derived from a judicial resolution exempt\\n\\"105\\" | Ajuste a pagos en una sola exhibici\xf3n derivados de una resoluci\xf3n judicial gravados | Adjustment to payments in a single exhibition derived from a judicial resolution taxed\\n\\"106\\" | Ajuste a pagos en una sola exhibici\xf3n derivados de una resoluci\xf3n judicial exentos | Adjustment to payments in a single exhibition derived from a judicial resolution exempt\\n\\"107\\" | Ajuste al Subsidio Causado | Adjustment to Accrued Subsidy\\n\\n### Tipo de Otro Pago\\n\\n(Type of Other Payment)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"001\\" | Reintegro de ISR pagado en exceso. | Refund of ISR paid in excess.\\n\\"002\\" | Subsidio para el empleo (efectivamente entregado al trabajador). | Employment subsidy (effectively delivered to the worker).\\n\\"003\\" | Vi\xe1ticos (entregados al trabajador). | Travel expenses (delivered to the worker).\\n\\"004\\" | Aplicaci\xf3n de saldo a favor por compensaci\xf3n anual. | Application of balance in favor by annual compensation.\\n\\"005\\" | Reintegro de ISR retenido en exceso de ejercicio anterior | Refund of ISR retained in excess of previous exercise\\n\\"006\\" | Alimentos en bienes (Servicios de comedor y comida). | Food in goods (Dining and food services).\\n\\"007\\" | ISR ajustado por subsidio. | ISR adjusted by subsidy.\\n\\"008\\" | Subsidio efectivamente entregado que no correspond\xeda. | Subsidy effectively delivered that did not correspond.\\n\\"009\\" | Reembolso de descuentos efectuados para el cr\xe9dito de vivienda. | Refund of discounts made for housing credit.\\n\\"999\\" | Pagos distintos a los listados. | Payments other than those listed.\\n\\n### Tipo de Incapacidad\\n\\n(Type of Disability)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"01\\" | Riesgo de trabajo. | Work risk.\\n\\"02\\" | Enfermedad en general. | General illness.\\n\\"03\\" | Maternidad. | Maternity.\\n\\"04\\" | Licencia por cuidados m\xe9dicos de hijos diagnosticados con c\xe1ncer. | License for medical care of children diagnosed with cancer.\\n\\n### Clave de retenci\xf3n\\n\\n(Retention Key)\\n\\nKey | Description (Spanish) | Description (English)\\n:-----:|:----------- |:-----------\\n\\"01\\" | Servicios profesionales. | Professional services.\\n\\"02\\" | Regal\xedas por derechos de autor. | Royalties for copyright.\\n\\"03\\" | Autotransporte terrestre de carga. | Land cargo transportation.\\n\\"04\\" | Servicios prestados por comisionistas. | Services provided by commission agents.\\n\\"05\\" | Arrendamiento. | Lease.\\n\\"06\\" | Enajenaci\xf3n de acciones. | Sale of shares.\\n\\"07\\" | Enajenaci\xf3n de bienes objeto de la LIEPS, a trav\xe9s de mediadores, agentes, representantes, corredores, consignatarios o distribuidores. | Sale of goods subject to LIEPS, through mediators, agents, representatives, brokers, consignees or distributors.\\n\\"08\\" | Enajenaci\xf3n de bienes inmuebles consignada en escritura p\xfablica. | Sale of real estate consigned in a public deed.\\n\\"09\\" | Enajenaci\xf3n de otros bienes, no consignada en escritura p\xfablica. | Sale of other goods, not consigned in a public deed.\\n\\"10\\" | Adquisici\xf3n de desperdicios industriales. | Acquisition of industrial waste.\\n\\"11\\" | Adquisici\xf3n de bienes consignada en escritura p\xfablica. | Acquisition of goods consigned in a public deed.\\n\\"12\\" | Adquisici\xf3n de otros bienes, no consignada en escritura p\xfablica. | Acquisition of other goods, not consigned in a public deed.\\n\\"13\\" | Otros retiros de AFORE. | Other withdrawals from AFORE.\\n\\"14\\" | Dividendos o utilidades distribuidas. | Dividends or distributed profits.\\n\\"15\\" | Remanente distribuible. | Distributable remnant.\\n\\"16\\" | Intereses. | Interests.\\n\\"17\\" | Arrendamiento en fideicomiso. | Lease in trust.\\n\\"18\\" | Pagos realizados a favor de residentes en el extranjero. | Payments made in favor of residents abroad.\\n\\"19\\" | Enajenaci\xf3n de acciones u operaciones en bolsa de valores. | Sale of shares or operations on the stock exchange.\\n\\"20\\" | Obtenci\xf3n de premios. | Obtaining prizes.\\n\\"21\\" | Fideicomisos que no realizan actividades empresariales. | Trusts that do not carry out business activities.\\n\\"22\\" | Planes personales de retiro. | Personal retirement plans.\\n\\"23\\" | Intereses reales deducibles por cr\xe9ditos hipotecarios. | Real interests deductible for mortgage loans.\\n\\"24\\" | Operaciones Financieras Derivadas de Capital. | Capital Derivative Financial Operations.\\n\\"25\\" | Otro tipo de retenciones. | Other types of retentions.\\n\\"26\\" | Servicios mediante Plataformas Tecnol\xf3gicas | Services through Technological Platforms\\n\\n### Validez de obligaciones\\n\\n(Validity of obligations)\\n\\n| Validity | Exempt IVA | Rate 0% | Rate 8% Noth Border | Rate 8% South Border | Rate 16%\\n|:-------:|:----------:|:-------:|:------------------------:|:----------------------:|:--------\\n| \\"0\\" <td colspan=\\"5\\">The taxpayer is not authorized to issue invoices</td>\\n| \\"1\\" | Yes | Yes | No | No | Yes\\n| \\"2\\" | Yes | Yes | Yes | No | Yes\\n| \\"3\\" | Yes | Yes | No | Yes | Yes\\n| \\"4\\" | Yes | Yes | Yes | Yes | Yes\\n\\n#### Situaci\xf3n del contribuyente\\n\\n(Taxpayer situation)\\n\\n| Value | Description\\n|:-----:|:-----------|:-----------\\n| \\"Previsto\\" (Announced) | The taxpayer receives a letter via tax mailbox or notifications by means of a notice board, in which his situation is established and he is asked to demonstrate the materiality of the invoiced operations.\\n| \\"Presunto\\" (Pressumed) | The notified taxpayer is considered presumed when, on its website, the authority issues its data within the list of EFOS, that is, in the SAT\'s blacklists.\\n| \\"Desvirtuado\\" (Disproved) | In this case, the taxpayer accused of non-existent operations has already provided the authority with the documentation and information necessary to refute the facts that led to the notification.\\n| \\"Definitivo\\" (Definitive) | In this case, the EFO did not respond to the authority\'s call within 15 days, from the last notification; or could not refute the imputed facts.\\n| \\"Sentencia favorable\\" (Favorable sentence) | Taxpayers EFOS \\"definitive\\" who are dissatisfied and file some means of defense, which concludes in their favor, are classified in the list of \\"favorable judgment\\".\\n| \\"EFOS de informaci\xf3n suprimida\\" (Redacted information EFOS) | In this category, the EFOS \\"presumed\\" and \\"definitive\\" are found that presented some means of defense (amparo, nullity trial) and, therefore, a judge ordered to suppress their data from the list, without being eliminated.\\n"},{"name":"customer_model","x-displayName":"Customer object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Customer\\" />\\n"},{"name":"product_model","x-displayName":"Product object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Product\\" />\\n"},{"name":"invoice_model","x-displayName":"Invoice object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Invoice\\" />\\n"},{"name":"receipt_model","x-displayName":"Receipt object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Receipt\\" />\\n"},{"name":"retention_model","x-displayName":"Retention object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Retention\\" />\\n"},{"name":"organization_model","x-displayName":"Organization object","description":"<SchemaDefinition schemaRef=\\"#/components/schemas/Organization\\" />\\n"}],"x-tagGroups":[{"name":"Resources","tags":["customer","product","invoice","receipt","retention","organization"]},{"name":"Tools","tags":["tools","sat_keys"]},{"name":"Webhooks","tags":["events","webhooks"]},{"name":"Models","tags":["customer_model","product_model","invoice_model","receipt_model","retention_model","organization_model"]}],"paths":{"/customers":{"post":{"operationId":"createCustomer","tags":["customer"],"summary":"Create Customer","description":"Register a new customer in Facturapi.\\n\\n  This call validates that the fiscal data matches\\n  the records of the SAT for that RFC, otherwise the call\\n  will return an error indicating the issue.\\n\\n  Once the customer is created and a response object is obtained,\\n  we recommend saving the ID in your database along with the customer information.\\n  Later, you can call the Create Invoice endpoint by passing the customer ID instead of repeating the information.\\n  \\n  Finally, keep in mind that the customers you create in the Test environment **are not shared**\\n  with the Live environment.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"legal_name\\": \\"Dunder Mifflin\\",\\n        \\"email\\": \\"email@example.com\\",\\n        \\"tax_id\\": \\"ABC101010111\\",\\n        \\"tax_system\\": \\"601\\",\\n        \\"address\\": {\\n          \\"zip\\": \\"01234\\"\\n        }\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.customers.create({\\n  legal_name: \'Dunder Mifflin\',\\n  email: \'email@example.com\',\\n  tax_id: \'ABC101010111\',\\n  tax_system: \'601\',\\n  address: {\\n    zip: \'01234\'\\n  }\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Customer.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"legal_name\\"] = \\"Dunder Mifflin\\",\\n  [\\"email\\"] = \\"email@example.com\\",\\n  [\\"tax_id\\"] = \\"ABC101010111\\",\\n  [\\"tax_system\\"] = \\"601\\",\\n  [\\"address\\"] = new Dictionary<string, object>\\n  {\\n    [\\"zip\\"] = \\"01234\\"\\n  }\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Customers->create([\\n  \\"email\\" => \\"email@example.com\\",\\n  \\"legal_name\\" => \\"Dunder Mifflin\\",\\n  \\"tax_id\\" => \\"ABC101010111\\",\\n  \\"tax_system\\" => \\"601\\",\\n  \\"address\\" => [\\n    \\"zip\\" => \\"01234\\"\\n  ]\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/CustomerCreate"},"parameters":[{"in":"query","name":"createEditLink","schema":{"type":"boolean"},"required":false,"description":"If set to `true`, the response will include a link you can share with the customer to\\nallow them to edit their information. This link will be available from the `edit_link` field,\\nwill be valid for 7 days and can only be used once.\\nAdditionally, setting this parameter to `true` will skip the validation of the customer\'s fiscal data,\\nallowing you to create customers with incomplete information.\\n"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"A previously-registered `Customer` object with the same information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"201":{"description":"New `Customer` object just created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listCustomers","tags":["customer"],"summary":"List customers","description":"Returns a paginated list of all customers in an organization or performs a search according to parameters.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -G \\\\\\n  -d \'q=Dunder\' \\\\\\n  -d \'date[gt]=2021-07-14T06:00:00.000Z\' \\\\\\n  -d \'date[lt]=2021-08-14T06:00:00.000Z\' \\\\\\n  -d \'page=1\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst searchResult = await facturapi.customers.list({\\n  q: \'Dunder\',\\n  date: {\\n    gt: new Date(\'2021-07-14T06:00:00.000Z\'),\\n    lt: new Date(\'2021-08-14T06:00:00.000Z\')\\n  },\\n  page: 1\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar searchResult = await facturapi.Customer.ListAsync(new Dictionary<string, object>\\n{\\n  [\\"q\\"] = \\"Dunder\\",\\n  [\\"date\\"] = new Dictionary<string, object>\\n    {\\n      [\\"gt\\"] = new DateTime(\\"2021-07-14T06:00:00.000Z\\"),\\n      [\\"lt\\"] = new DateTime(\\"2021-08-14T06:00:00.000Z\\")\\n    },\\n  [\\"page\\"] = 1\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$searchResult = $facturapi->Customers->all([\\n  \\"q\\" => \\"Dunder\\",\\n  \\"date\\" => [\\n    \\"gt\\" => new DateTime(\\"2021-07-14T06:00:00.000Z\\"),\\n    \\"lt\\" => new DateTime(\\"2021-08-14T06:00:00.000Z\\")\\n  ],\\n  \\"page\\" => 1\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Free text field. Search word matches with `legal_name` or `tax_id` fields."},{"$ref":"#/components/parameters/SearchDate"},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/customers/{customer_id}":{"get":{"operationId":"getCustomer","tags":["customer"],"summary":"Retrieve customer by ID","description":"Returns the \'Customer\' object with the specified ID. If the customer does not exist, a 404 error will be returned.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers/590ce6c56d04f840aa8438af \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.customers.retrieve(\'590ce6c56d04f840aa8438af\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Customer.RetrieveAsync(\\"590ce6c56d04f840aa8438af\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Customers->retrieve( \\"5a3ee743f508333611ad6b3c\\" );\\n"}],"parameters":[{"in":"path","name":"customer_id","schema":{"type":"string"},"required":true,"description":"Customer ID"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Customer` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"editCustomer","tags":["customer"],"summary":"Edit Customer","description":"Updates the information of an existing customer, setting only the values for the paramenters that are sent. Undefined values will not be modified.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers/590ce6c56d04f840aa8438af \\\\\\n  -X PUT\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"email\\": \\"jdoe@example.com\\",\\n        \\"address\\": {\\n          \\"street\\": \\"Santa Monica Ave.\\"\\n        }\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.customers.update(\\n  \'590ce6c56d04f840aa8438af\',\\n  {\\n    email: \'jdoe@example.com\',\\n    address: {\\n      street: \'Santa Monica Ave.\'\\n    }\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Customer.UpdateAsync(\\n  \\"590ce6c56d04f840aa8438af\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = \\"jdoe@example.com\\",\\n    [\\"address\\"] = new Dictionary<string, object>\\n    {\\n      [\\"street\\"] = \\"Santa Monica Ave.\\"\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Customers->update(\\"590ce6c56d04f840aa8438af\\", [\\n  \\"email\\" => \\"jdoe@example.com\\",\\n  \\"legal_name\\" => \\"Dunder Mifflin\\",\\n  \\"address\\" => [\\n    \\"street\\" => \\"Santa Monica Ave.\\"\\n  ]\\n]);\\n"}],"parameters":[{"in":"path","name":"customer_id","schema":{"type":"string"},"required":true,"description":"ID of the object to edit"},{"in":"query","name":"createEditLink","schema":{"type":"boolean"},"required":false,"description":"If set to `true`, the response will include a link you can share with the customer to\\nallow them to edit their information. This link will be available from the `edit_link` field,\\nwill be valid for 7 days and can only be used once.\\nSetting this parameter to `true` while editing a customer will **not** skip the validation\\nof the customer\'s fiscal data.\\n"}],"requestBody":{"$ref":"#/components/requestBodies/CustomerEdit"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Customer` object edited successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteCustomer","tags":["customer"],"summary":"Delete Customer","description":"Deletes a customer. The invoices linked to the customer will **not** be deleted.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers/590ce6c56d04f840aa8438af \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst removedCustomer = await facturapi.customers.del(\'590ce6c56d04f840aa8438af\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Customer.DeleteAsync(\\"590ce6c56d04f840aa8438af\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$facturapi->Customers->delete( \\"5a3fefd9f508333611ad6b43\\" );\\n"}],"parameters":[{"in":"path","name":"customer_id","schema":{"type":"string"},"required":true,"description":"ID of the object to delete"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Customer` object deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/customers/{customer_id}/tax-info-validation":{"get":{"operationId":"validateCustomerTaxInfo","tags":["customer"],"summary":"Validate Customer Tax Info","description":"Validates that the customer\'s fiscal information matches the SAT records.\\n\\nIts main function is to validate that the registered customer data continues to meet the SAT validation.\\n\\n> **Note:**\\n> The operations of creating a customer, editing a customer, and creating an invoice already perform a\\n> validation of the customer\'s information, so it is **not** necessary to call this endpoint\\n> before performing these operations.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/customers/590ce6c56d04f840aa8438af/tax-info-validation \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.customers.validateTaxInfo(\'590ce6c56d04f840aa8438af\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Customer.ValidateTaxInfoAsync(\\"590ce6c56d04f840aa8438af\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Customers->validateTaxInfo( \\"5a3ee743f508333611ad6b3c\\" );\\n"}],"parameters":[{"in":"path","name":"customer_id","schema":{"type":"string"},"required":true,"description":"ID of the customer"}],"security":[{"SecretLiveKey":[]}],"responses":{"200":{"description":"Validation result","content":{"application/json":{"schema":{"type":"object","properties":{"is_valid":{"type":"boolean","description":"Indicates if the customer\'s fiscal information matches the SAT records","example":true},"errors":{"type":"array","description":"List of errors found in the validation","items":{"type":"object","properties":{"path":{"type":"string","description":"Path to the field with the error","example":"tax_system"},"message":{"type":"string","description":"Error message","example":"El R\xe9gimenFiscal no coincide con el registrado para el RFC en la lista de contribuyentes obligados del SAT."}}}}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/products":{"post":{"operationId":"createProduct","tags":["product"],"summary":"Create Product","description":"Register a new product or service in your Facturapi catalog.\\n\\nYou can use the product ID to create invoices without having to send all the product data each time.\\n\\nKeep in mind that the products you create in the Test environment **are not shared**\\nwith the Live environment.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/products \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"description\\": \\"Ukelele\\",\\n        \\"product_key\\": \\"60131324\\",\\n        \\"price\\": 345.60,\\n        \\"sku\\": \\"ABC1234\\"\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst product = await facturapi.products.create({\\n  description: \'Ukelele\',\\n  product_key: \'60131324\',\\n  price: 345.60,\\n  sku: \'ABC1234\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar product = await facturapi.Product.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"description\\"] = \\"Ukelele\\",\\n  [\\"product_key\\"] = \\"60131324\\",\\n  [\\"price\\"] = 345.60,\\n  [\\"sku\\"] = \\"ABC1234\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$product = $facturapi->Products->create([\\n  \\"description\\" => \\"Ukelele\\",\\n  \\"product_key\\" => \\"60131324\\",\\n  \\"price\\" => 345.60,\\n  \\"sku\\" => \\"ABC1234\\"\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/ProductCreate"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"New `Product` object just created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listProducts","tags":["product"],"summary":"List products","description":"Returns a paginated list of all products in an organization or performs a search according to parameters.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/products \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -G \\\\\\n  -d \'q=ukelele\' \\\\\\n  -d \'page=1\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst searchResult = await facturapi.products.list({\\n  q: \'ukelele\',\\n  page: 1\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar searchResult = await facturapi.Product.ListAsync(new Dictionary<string, object>\\n{\\n  [\\"q\\"] = \\"ukelele\\",\\n  [\\"date\\"] = new Dictionary<string, object>\\n    {\\n      [\\"gt\\"] = new DateTime(\\"2021-07-14T06:00:00.000Z\\"),\\n      [\\"lt\\"] = new DateTime(\\"2021-08-14T06:00:00.000Z\\")\\n    },\\n  [\\"page\\"] = 1\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$searchResult = $facturapi->Products->all([\\n  \\"q\\" => \\"ukelele\\",\\n  \\"page\\" => 1\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Free text field. Search word matches with `description` or `sku` fields."},{"in":"query","name":"sku","schema":{"type":"string"},"description":"Search word matches specifically with `sku` field."},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/products/{product_id}":{"get":{"operationId":"getProduct","tags":["product"],"summary":"Retrieve product by ID","description":"Returns the `Product` object with the specified ID. If the product does not exist, a 404 error will be returned.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/products/590e22c26d04f840aa8438b2 \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst product = await facturapi.products.retrieve(\'590e22c26d04f840aa8438b2\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar product = await facturapi.Product.RetrieveAsync(\\"590e22c26d04f840aa8438b2\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$product = $facturapi->Product->retrieve( \\"590e22c26d04f840aa8438b2\\" );\\n"}],"parameters":[{"in":"path","name":"product_id","schema":{"type":"string"},"required":true,"description":"Product ID"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Product` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"editProduct","tags":["product"],"summary":"Edit product","description":"Updates the information of an existing product, setting only the values for the paramenters that are sent. Undefined values will not be modified.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/products/590e22c26d04f840aa8438b2 \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"price\\": 456.70\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst product = await facturapi.products.update(\\n  \'590e22c26d04f840aa8438b2\',\\n  {\\n    email: \'jdoe@example.com\',\\n    address: {\\n      street: \'Santa Monica Ave.\'\\n    }\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar product = await facturapi.Product.UpdateAsync(\\n  \\"590e22c26d04f840aa8438b2\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"price\\"] = 456.70\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$product = $facturapi->Products->update(\\"590e22c26d04f840aa8438b2\\", [\\n  \\"price\\" => 456.70\\n]);\\n"}],"parameters":[{"in":"path","name":"product_id","schema":{"type":"string"},"required":true,"description":"Product ID"}],"requestBody":{"$ref":"#/components/requestBodies/ProductEdit"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Product` object edited successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteProduct","tags":["product"],"summary":"Delete Product","description":"Deletes the product from your organization. The invoices linked with the product **will not** be deleted.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/products/590e22c26d04f840aa8438b2 \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst removedProduct = await facturapi.products.del(\'590e22c26d04f840aa8438b2\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar product = await facturapi.Product.DeleteAsync(\\"590e22c26d04f840aa8438b2\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$facturapi->Products->delete( \\"590e22c26d04f840aa8438b2\\" );\\n"}],"parameters":[{"in":"path","name":"product_id","schema":{"type":"string"},"required":true,"description":"Product ID to delete"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Product` object deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices":{"post":{"operationId":"createInvoice","tags":["invoice"],"summary":"Create invoice (CFDI 4.0)","description":"Creates a new Invoice. If the invoice is created in the Live environment, it will be **stamped and sent to the SAT**.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n    \\"customer\\": {\\n      \\"legal_name\\": \\"Dunder Mifflin\\",\\n      \\"email\\": \\"email@example.com\\",\\n      \\"tax_id\\": \\"ABC101010111\\",\\n      \\"tax_system\\": \\"601\\",\\n      \\"address\\": {\\n        \\"zip\\": \\"85900\\"\\n      }\\n    },\\n    \\"items\\": [{\\n      \\"quantity\\": 2,\\n      \\"product\\": {\\n        \\"description\\": \\"Ukelele\\",\\n        \\"product_key\\": \\"60131324\\",\\n        \\"price\\": 345.60\\n      }\\n    }],\\n    \\"payment_form\\": \\"06\\",\\n    \\"folio_number\\": 914,\\n    \\"series\\": \\"F\\"\\n  }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.create({\\n  customer: {\\n    legal_name: \'Dunder Mifflin\',\\n    email: \'email@example.com\',\\n    tax_id: \'ABC101010111\',\\n    tax_system: \'601\',\\n    address: {\\n      zip: \'85900\'\\n    }\\n  },\\n  items: [{\\n    quantity: 2,\\n    product: {\\n      description: \'Ukelele\',\\n      product_key: \'60131324\',\\n      price: 345.60\\n    }\\n  }],\\n  payment_form: Facturapi.PaymentForm.DINERO_ELECTRONICO,\\n  folio_number: 914,\\n  series: \'F\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"customer\\"] = new Dictionary<string, object>\\n  {\\n    [\\"legal_name\\"] = \\"Dunder Mifflin\\",\\n    [\\"email\\"] = \\"email@example.com\\",\\n    [\\"tax_id\\"] = \\"ABC101010111\\",\\n    [\\"tax_system\\"] = \\"601\\",\\n    [\\"address\\"] = new Dictionary<string, object>\\n    {\\n      [\\"zip\\"] = \\"85900\\"\\n    }\\n  },\\n  [\\"items\\"] = new Dictionary<string, object>[]\\n  {\\n    new Dictionary<string, object>\\n    {\\n      [\\"product\\"] = new Dictionary<string, object>\\n      {\\n        [\\"description\\"] = \\"Ukelele\\",\\n        [\\"product_key\\"] = \\"60131324\\",\\n        [\\"price\\"] = 345.60\\n      }\\n    }\\n  },\\n  [\\"payment_form\\"] = Facturapi.PaymentForm.DINERO_ELECTRONICO,\\n  [\\"folio_number\\"] = 914,\\n  [\\"series\\"] = \\"F\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$invoice = $facturapi->Invoices->create([\\n  \\"customer\\" => [\\n    \\"legal_name\\" => \\"Dunder Mifflin\\",\\n    \\"email\\" => \\"email@example.com\\",\\n    \\"tax_id\\" => \\"ABC101010111\\",\\n    \\"tax_system\\" => \\"601\\",\\n    \\"address\\" => [\\n      \\"zip\\" => \\"85900\\"\\n    ]\\n  ],\\n  \\"items\\" => [\\n    [\\n      \\"quantity\\" => 2,\\n      \\"product\\" => [\\n        \\"description\\" => \\"Ukelele\\",\\n        \\"product_key\\" => \\"60131324\\",\\n        \\"price\\" => 420.69,\\n        \\"sku\\" => \\"ABC4567\\"\\n      ]\\n    ] // Add as many products as you want to include in your invoice\\n  ],\\n  \\"payment_form\\" => \\\\Facturapi\\\\PaymentForm::EFECTIVO,\\n  \\"folio_number\\" => 581,\\n  \\"series\\" => \\"F\\"\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/InvoiceCreate"},"parameters":[{"in":"query","name":"async","schema":{"type":"boolean"},"required":false,"description":"Useful for large invoices. If sent `false` or not sent, the call will wait for the SAT to respond by stamping the invoice.\\nIf sent `true`, the call will return immediately with the `invoice` object in status `pending`, and its status can be checked\\nfor a change to `valid` at a later time.\\n"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object","content":{"application/json":{"schema":{"type":"object","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/Invoice","draft":"#/components/schemas/InvoiceDraft"}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listInvoices","tags":["invoice"],"summary":"List invoices","description":"Returns a paginated list of all invoices in an organization or performs a search according to parameters.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# All invoices from the organization\\ncurl \\"https://www.facturapi.io/v2/invoices\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n# All invoices issued to a certain customer\\ncurl \\"https://www.facturapi.io/v2/invoices\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -d \\"customer=58e93bd8e86eb318b0197456\\"\\n\\n# Page 3 of the search results for free text\\n# of invoices issued to a certain customer between 2017 and 2019\\ncurl \\"https://www.facturapi.io/v2/invoices\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -d \\"q=Aspiradora+Robot&customer=58e93bd8e86eb318b0197456&date[gte]=2017-01-01T00:00:00.000Z&date[lt]=2020-01-01T00:00:00.000Z&page=3&limit=10\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// All invoices from the organization\\nconst invoiceSearch = await facturapi.invoices.list();\\n\\n// All invoices issued to a certain customer\\nconst invoiceSearch = await facturapi.invoices.list({\\n  customer: \'590ce6c56d04f840aa8438af\'\\n});\\n\\n// Page 3 of the search results for free text\\n// of invoices issued to a certain customer between 2017 and 2019\\nconst invoiceSearch = await facturapi.invoices.list({\\n  q: \'Aspiradora Robot\',\\n  customer: \'590ce6c56d04f840aa8438af\',\\n  date: {\\n    gte: new Date(\'2017-01-01T00:00:00.000Z\'),\\n    lt: new Date(\'2020-01-01T00:00:00.000Z\')\\n  },\\n  page: 3,\\n  limit: 10,\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\n// All invoices from the organization\\nvar searchResult = await facturapi.Invoice.ListAsync();\\n\\n// Todas las facturas emitidas para cierto cliente\\nvar searchResult = await facturapi.Invoice.ListAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"customer\\"] = \\"590ce6c56d04f840aa8438af\\"\\n  }\\n);\\n\\n// P\xe1gina 3 de los resultados de b\xfasqueda de texto libre\\n// de facturas emitidas por cierto cliente entre 2017 y 2019\\nvar searchResult = await facturapi.Invoice.ListAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"q\\"] = \\"Aspiradora Robot\\",\\n    [\\"customer\\"] = \\"590ce6c56d04f840aa8438af\\",  \\n    [\\"date\\"] = new Dictionary<string, object>\\n      {\\n        [\\"gte\\"] = new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n        [\\"lt\\"] = new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n      },\\n    [\\"page\\"] = 3,\\n    [\\"limit\\"] = 10,\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// All invoices from the organization\\n$invoices = $facturapi->Invoices->all();\\n\\n// All invoices issued to a certain customer\\n$invoices = $facturapi->Invoices->all([\\n  customer => \\"590ce6c56d04f840aa8438af\\"\\n]);\\n\\n// Page 3 of the search results for free text\\n// of invoices issued to a certain customer between 2017 and 2019\\n$invoices = $facturapi->Invoices->all([\\n  q => \\"Aspiradora Robot\\",\\n  customer => \\"590ce6c56d04f840aa8438af\\"\\n  date => [\\n    gte => new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n    lt => new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n  ],\\n  page => 3,\\n  limit => 10,\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Text to search in the invoice.\\n\\nThe search will be performed by **partial** matches in the fields:\\n\\n- `items[].product.description`\\n- `customer.legal_name`\\n\\nAnd by **exact** matches in the fields:\\n\\n- `id`\\n- `uuid`\\n- `customer.tax_id`\\n- `folio_number`\\n- `total`\\n"},{"in":"query","name":"customer","schema":{"type":"string"},"description":"Filter by customer ID. Exact match."},{"in":"query","name":"type","schema":{"type":"string","enum":["I","E","P","N","T"]},"description":"Filter by invoice type. Exact match."},{"in":"query","name":"payment_method","schema":{"type":"string","enum":["PUE","PPD"]},"description":"Payment method. Exact match."},{"$ref":"#/components/parameters/SearchDate"},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvoiceSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}":{"get":{"operationId":"getInvoice","tags":["invoice"],"summary":"Retrieve invoice by ID","description":"Returns the `Invoice` object with the specified ID. If the invoice does not exist, a 404 error will be returned.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.retrieve(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Invoice.RetrieveAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$invoice = $facturapi->Invoices->retrieve( \\"58e93bd8e86eb318b019743d\\" );\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"updateDraftInvoice","tags":["invoice"],"summary":"Edit draft invoice","description":"Updates the information of a draft invoice, setting only the values for\\nthe paramenters that are sent. Undefined values will not be modified.\\n\\nIn the `Invoice` response object, Facturapi will automatically assign the\\n`is_ready_to_stamp` field with the value `true` if the invoice passes the\\nminimum validation required to be stamped; otherwise, the\\n`is_ready_to_stamp` field will be `false`.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"payment_form\\": \\"06\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.updateDraft(\\n  \'58e93bd8e86eb318b019743d\',\\n  {\\n    payment_form: Facturapi.PaymentForm.DINERO_ELECTRONICO\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new Facturapi(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Invoice.UpdateDraftAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"payment_form\\"] = Facturapi.PaymentForm.DINERO_ELECTRONICO\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$invoice = $facturapi->Invoices->update_draft(\\"58e93bd8e86eb318b019743d\\", [\\n  \\"payment_form\\" => \\\\Facturapi\\\\PaymentForm::EFECTIVO\\n]);\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to edit"}],"requestBody":{"$ref":"#/components/requestBodies/InvoiceEdit"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object edited successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvoiceDraft"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"cancelInvoice","tags":["invoice"],"summary":"Cancel invoice","description":"Creates a cancellation request to the SAT for the specified invoice.\\n\\nWhen using this method, 3 possible results can occur:\\n\\n- The call returns an error with the explanation of why the cancellation could not be completed.\\n- The call is successful and returns an `invoice` object with the property `status: \\"canceled\\"`.\\n- The call is successful, but the cancellation requires confirmation from your client, in which case the response will be the `invoice` object with the properties `status: \\"valid\\"` and `cancellation_status: \\"pending\\"`.\\n\\nIn the third scenario, the value of `cancellation_status` will be automatically updated by Facturapi when your client accepts, rejects, or lets the request expire, so that when you query an invoice (using [Get Invoice](#tag/invoice/operation/getInvoice)), the `cancellation_status` property will reflect the most recent status of the request.\\n\\nCheck the possible values of `cancellation_status` below.\\n\\nAfter the cancellation, the invoice will no longer be valid, the object will change its `status` to `\\"canceled\\"` and will still be available for future queries.\\n\\nIf the status of the invoice is `draft`, this method will delete it from the database.\\n\\nIf the status of the invoice is `canceled`, this method will return an error.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d?motive=02 \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X DELETE\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.cancel(\\n  \'58e93bd8e86eb318b019743d\',\\n  { motive: \'02\' }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Invoice.CancelAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"motive\\"] = \\"02\\"\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$canceled_invoice = $facturapi->Invoices->cancel(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  [\\n    \\"motive\\" => \\"02\\"\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to cancel"},{"in":"query","name":"motive","required":true,"schema":{"type":"string","enum":["01","02","03","04"]},"description":"Key representing the motive for the cancellation of the invoice.\\n\\nPossible values:\\n\\n- `01`: **Invoice issued with errors with relation**. When the invoice contains any errors in quantities, keys, or any other data and the replacement invoice has already been issued, which should be indicated through the `substitution` attribute.\\n- `02`: **Invoice issued with errors without relation**. When the invoice contains any errors in quantities, keys, or any other data and it is not required to be related to another invoice.\\n- `03`: **Operation not carried out**. When the sale or transaction was not completed.\\n- `04`: **Nominative operation related to the global invoice**. When it is necessary to cancel an invoice to the general public because the customer requests their invoice.\\n"},{"in":"query","name":"substitution","required":false,"schema":{"type":"string"},"description":"ID of the invoice that replaces the invoice being canceled.\\n\\nYou can use either the ID assigned by Facturapi or the fiscal folio (UUID).\\n"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object after cancellation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"409":{"$ref":"#/components/responses/Conflict"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/copy":{"post":{"operationId":"copyToDraftInvoice","tags":["invoice"],"summary":"Copy to draft","description":"Creates a new draft invoice with the same information as the specified invoice.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/copy \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.copyToDraft(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Invoice.CopyToDraftAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$invoice = $facturapi->Invoices->copy_to_draft(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to copy"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` draft object created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvoiceDraft"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/stamp":{"post":{"operationId":"stampDraftInvoice","tags":["invoice"],"summary":"Stamp draft invoice","description":"Stamps a draft invoice and sends it to the SAT for validation.\\n\\nWhen using this method, the value of the `is_ready_to_stamp` field (assigned by Facturapi)\\nmust be `true`. Otherwise, the call will return an error. To get the value of `is_ready_to_stamp`,\\nuse the [Get Invoice](#tag/invoice/operation/getInvoice) method.\\n\\nThis method does not allow editing the invoice, only stamping it. If you need to edit\\ninformation in the invoice before stamping it, use the [Edit Draft Invoice](#tag/invoice/operation/editDraftInvoice) method.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/stamp \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst stampedInvoice = await facturapi.invoices.stampDraft(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar stampedInvoice = await facturapi.Invoice.StampDraftAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$stamped_invoice = $facturapi->Invoices->stamp_draft(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to stamp"},{"in":"query","name":"async","schema":{"type":"boolean"},"required":false,"description":"Useful for large invoices. If sent `false` or not sent, the call will wait for the SAT to respond by stamping the invoice.\\nIf sent `true`, the call will return immediately with the `invoice` object in status `pending`, and its status can be checked\\nfor a change to `valid` at a later time.\\n"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object stamped successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"409":{"$ref":"#/components/responses/Conflict"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/cancellation_receipt/{format}":{"get":{"operationId":"downloadCancellationReceiptXml","tags":["invoice"],"summary":"Cancellation receipt","description":"Download the cancellation receipt of a canceled invoice in an xml or pdf file.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# Cancellation receipt xml\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/cancellation_receipt/xml \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X GET\\n\\n# Cancellation receipt pdf\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/cancellation_receipt/pdf \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X GET\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Cancellation receipt xml\\nawait facturapi.invoices.downloadCancellationReceiptXml(\'58e93bd8e86eb318b019743d\');\\n\\n// Cancellation receipt pdf\\nawait facturapi.invoices.downloadCancellationReceiptPdf(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"// Cancellation receipt xml\\nawait facturapi.Invoice.DownloadCancellationReceiptXmlAsync(\\"58e93bd8e86eb318b019743d\\");\\n// Cancellation receipt pdf\\nawait facturapi.Invoice.DownloadCancellationReceiptPdfAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// Cancellation receipt xml\\n$facturapi->Invoices->download_cancellation_receipt_xml(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Cancellation receipt pdf\\n$facturapi->Invoices->download_cancellation_receipt_pdf(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to download the cancellation receipt"},{"in":"path","name":"format","schema":{"type":"string","enum":["xml","pdf"]},"required":true,"description":"Format of the file to download"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Cancellation receipt file","content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/{format}":{"get":{"operationId":"downloadInvoice","tags":["invoice"],"summary":"Download invoice","description":"Download your invoice in PDF, XML, or both in a ZIP file.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"## Download PDF and XML compressed in a ZIP file\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/zip \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n## Download only the PDF\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/pdf \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n## Download only the XML\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/xml \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const fs = require(\'fs\');\\nconst Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Download PDF and XML compressed in a ZIP file\\nconst zipStream = await facturapi.invoices.downloadZip(\'58e93bd8e86eb318b019743d\');\\nconst zipFile = fs.createWriteStream(\'./factura.zip\');\\nzipStream.pipe(zipFile);\\n\\n// Download only the PDF\\nconst pdfStream = await facturapi.invoices.downloadPdf(\'58e93bd8e86eb318b019743d\');\\nconst pdfFile = fs.createWriteStream(\'./factura.pdf\');\\npdfStream.pipe(pdfFile);\\n\\n// Download only the XML\\nconst xmlStream = await facturapi.invoices.downloadXml(\'58e93bd8e86eb318b019743d\');\\nconst xmlFile = fs.createWriteStream(\'./factura.xml\');\\nxmlStream.pipe(xmlFile);\\n"},{"lang":"csharp","label":"C#","source":"// Download PDF and XML compressed in a ZIP file\\nvar zipStream = await facturapi.Invoice.DownloadZipAsync(\\"58e93bd8e86eb318b019743d\\");\\n// Download only the XML\\nvar xmlStream = await facturapi.Invoice.DownloadXmlAsync(\\"58e93bd8e86eb318b019743d\\");\\n// Download only the PDF\\nvar pdfStream = await facturapi.Invoice.DownloadPdfAsync(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Save the streams to a file\\nvar file = new System.IO.FileStream(\\"C:\\\\\\\\route\\\\\\\\to\\\\\\\\save\\\\\\\\invoice.zip\\", FileMode.Create);\\nzipStream.CopyTo(file);\\nfile.Close();\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// Stream containing the ZIP file with the PDF and XML files\\n$zip = $facturapi->Invoices->download_zip(\\"58e93bd8e86eb318b019743d\\");\\n// Stream containing the PDF file\\n$pdf = $facturapi->Invoices->download_pdf(\\"58e93bd8e86eb318b019743d\\"); \\n// Stream containing the XML file\\n$xml = $facturapi->Invoices->download_xml(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to download"},{"in":"path","name":"format","schema":{"type":"string","enum":["xml","pdf","zip"]},"required":true,"description":"Format of the file to download"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Official CFDI file in the specified format","content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/email":{"post":{"operationId":"sendInvoiceByEmail","tags":["invoice"],"summary":"Send invoice by email","description":"Sends an email to the address of your client with the XML and PDF files attached to the message.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# Send to the email registered by the client\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/email \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST\\n\\n# Send to a different email\\ncurl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/email \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"email\\": \\"another_email@example.com\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Send to the email registered by the client\\nawait facturapi.invoices.sendByEmail(\'58e93bd8e86eb318b019743d\');\\n\\n// Send to a different email\\nawait facturapi.invoices.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { email: \'another@email.com\' }\\n);\\n\\n// Send to more than one email (max 10)\\nawait facturapi.invoices.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { \\n    email: [\\n      \'first@email.com\',\\n      \'second@example.com\'\\n    ]\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"// Send to the email registered by the client\\nawait facturapi.Invoice.SendByEmailAsync(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Send to a different email\\nawait facturapi.Invoice.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = \\"another@email.com\\"\\n  }\\n);\\n\\n// Send to more than one email (max 10)\\nawait facturapi.Invoice.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = new String[]\\n    {\\n      \\"first@email.com\\",\\n      \\"second@email.com\\"\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// Send to the email registered by the client\\n$facturapi->Invoices->send_by_email(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Send to a different email\\n$facturapi->Invoices->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  \\"another@email.com\\"\\n);\\n\\n// Send to more than one email (max 10)\\n$facturapi->Invoices->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  [\\n    \\"first@email.com\\",\\n    \\"second@email.com\\"\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to send"}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"description":"Email address to send the invoice. If not sent, the email registered by the customer will be used.\\n","oneOf":[{"type":"string","format":"email","description":"Email address to send the invoice.","example":"another@email.com"},{"type":"array","example":["first@email.com","second@email.com"],"description":"Array of email addresses to send the invoice. The maximum number of emails is 10.\\n","maxLength":10,"items":{"type":"string","format":"email"}}]}}}}}},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Email sent successfully","content":{"application/json":{"schema":{"type":"object","required":["ok"],"properties":{"ok":{"type":"boolean","description":"`true` if the email was sent successfully, `false` otherwise.\\n"}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/invoices/{invoice_id}/status":{"put":{"operationId":"updateInvoiceStatus","tags":["invoice"],"summary":"Update invoice status\\n","description":"Consults the status of a stamped invoice at the SAT and updates the invoice object with the most recent information.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/invoices/58e93bd8e86eb318b019743d/status \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X PUT\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst invoice = await facturapi.invoices.updateStatus(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new Facturapi\\nvar invoice = await facturapi.Invoice.UpdateStatusAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$invoice = $facturapi->Invoices->update_status(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"invoice_id","schema":{"type":"string"},"required":true,"description":"ID of the invoice to update"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Invoice` object updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts":{"post":{"operationId":"createReceipt","tags":["receipt"],"summary":"Create e-receipt","description":"Creates a new e-Receipt, which acts as a sales note.\\n\\nEvery receipt will have an auto-generated URL that the client can visit to fill in their fiscal data in a microsite with the organization\'s branding.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"folio_number\\": 1234,\\n        \\"payment_form\\": \\"03\\",\\n        \\"items\\": [{\\n          \\"quantity\\": 1,\\n          \\"product\\": {\\n            \\"description\\": \\"Ukelele\\",\\n            \\"product_key\\": \\"60131324\\",\\n            \\"price\\": 345.60,\\n            \\"sku\\": \\"ABC1234\\"\\n          }\\n        }]\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst receipt = await facturapi.receipts.create({\\n  folio_number: 1234,\\n  payment_form: Facturapi.PaymentForm.DINERO_ELECTRONICO,\\n  items: [{\\n    quantity: 1,\\n    product: {\\n      description: \'Ukelele\',\\n      product_key: \'60131324\',\\n      price: 345.60,\\n      sku: \'ABC1234\'\\n    }\\n  }]\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar receipt = await facturapi.Receipt.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"folio_number\\"] = 1234,\\n  [\\"payment_form\\"] = Facturapi.PaymentForm.DINERO_ELECTRONICO,\\n  [\\"items\\"] = new Dictionary<string, object>[]\\n  {\\n    new Dictionary<string, object> {\\n      [\\"description\\"] = \\"Ukelele\\",\\n      [\\"product_key\\"] = \\"60131324\\",\\n      [\\"price\\"] = 345.60,\\n      [\\"sku\\"] = \\"ABC1234\\"\\n    }\\n  }\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$receipt = $facturapi->Receipts->create([\\n  \\"folio_number\\" => 1234,\\n  \\"payment_form\\" => \\"03\\",\\n  \\"items\\" => [\\n    [\\n      \\"product\\" => [\\n        \\"description\\" => \\"Ukelele\\",\\n        \\"product_key\\" => \\"60131324\\",\\n        \\"price\\" => 345.60,\\n        \\"sku\\" => \\"ABC1234\\"\\n      ]\\n    ]\\n  ]\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/ReceiptCreate"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"New `Receipt` object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Receipt"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listReceipts","tags":["receipt"],"summary":"List e-recipts","description":"Returns a paginated list of all the receipts of an organization or performs a search according to parameters.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# All receipts of the organization\\ncurl \\"https://www.facturapi.io/v2/receipts\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n# Page 3 of search results for free text search\\n# of receipts created between 2017 and 2019\\ncurl \\"https://www.facturapi.io/v2/receipts\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -d \\"q=Aspiradora+Robot&date[gte]=2017-01-01T00:00:00.000Z&date[lt]=2020-01-01T00:00:00.000Z&page=3&limit=10\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// All receipts of the organization\\nconst receiptSearch = await facturapi.receipts.list();\\n\\n// Page 3 of search results for free text search\\n// of receipts created between 2017 and 2019\\nconst receiptSearch = await facturapi.receipts.list({\\n  q: \'Aspiradora Robot\',\\n  date: {\\n    gte: new Date(\'2017-01-01T00:00:00.000Z\'),\\n    lt: new Date(\'2020-01-01T00:00:00.000Z\')\\n  },\\n  page: 3,\\n  limit: 10,\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\n// All receipts of the organization\\nvar searchResult = await facturapi.Receipt.ListAsync();\\n\\n// Page 3 of search results for free text search\\n// of receipts created between 2017 and 2019\\nvar searchResult = await facturapi.Receipt.ListAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"q\\"] = \\"Aspiradora Robot\\",\\n    [\\"date\\"] = new Dictionary<string, object>\\n      {\\n        [\\"gte\\"] = new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n        [\\"lt\\"] = new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n      },\\n    [\\"page\\"] = 3,\\n    [\\"limit\\"] = 10,\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// All receipts of the organization\\n$searchResult = $facturapi->Receipts->all();\\n\\n// Page 3 of search results for free text search\\n// of receipts created between 2017 and 2019\\n$searchResult = $facturapi->Receipts->all([\\n  q => \\"Aspiradora Robot\\",\\n  date => [\\n    gte => new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n    lt => new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n  ],\\n  page => 3,\\n  limit => 10,\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Search. Text to search in the description of the receipt\'s items or the SKU.\\n"},{"in":"query","name":"payment_form","schema":{"type":"string","minLength":2,"maxLength":2},"example":"02","description":"Code representing the payment form, according to the [SAT catalog](#forma-de-pago). If included, the receipts will be grouped and listed according to the payment form.\\n"},{"$ref":"#/components/parameters/SearchDate"},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReceiptSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts/{receipt_id}":{"get":{"operationId":"getReceipt","tags":["receipt"],"summary":"Retrieve e-receipt by ID","description":"Retrieves an e-Receipt by its ID.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts/58e93bd8e86eb318b019743d \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst receipt = await facturapi.receipts.retrieve(\'58e93bd8e86eb318b019743d\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar receipt = await facturapi.Receipt.RetrieveAsync(\\"58e93bd8e86eb318b019743d\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$receipt = $facturapi->Receipts->retrieve( \\"58e93bd8e86eb318b019743d\\" );\\n"}],"parameters":[{"in":"path","name":"receipt_id","schema":{"type":"string"},"required":true,"description":"ID of the receipt to retrieve"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Objeto `Receipt`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Receipt"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"cancelReceipt","tags":["receipt"],"summary":"Cancel e-receipt","description":"Cancel a receipt by changing its `status` property to `\\"canceled\\"`.\\n\\nOnce canceled, the receipt cannot be invoiced.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts/5ebd8e56f5687a013ca0df46 \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst receipt = await facturapi.receipts.cancel(\'5ebd8e56f5687a013ca0df46\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar receipt = await facturapi.Receipt.CancelAsync(\\"5ebd8e56f5687a013ca0df46\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$facturapi->Receipts->cancel(\\"5ebd8e56f5687a013ca0df46\\");\\n"}],"parameters":[{"in":"path","name":"receipt_id","schema":{"type":"string"},"required":true,"description":"ID of the receipt to cancel"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Receipt object canceled successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Receipt"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts/{receipt_id}/pdf":{"get":{"operationId":"downloadReceiptPdf","tags":["receipt"],"summary":"Download PDF","description":"Download the electronic receipt in PDF format.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts/58e93bd8e86eb318b019743d/pdf \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const fs = require(\'fs\');\\nconst Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Download the electronic receipt in PDF format\\nconst pdfStream = await facturapi.receipts.downloadPdf(\'58e93bd8e86eb318b019743d\');\\nconst pdfFile = fs.createWriteStream(\'./recibo.pdf\');\\npdfStream.pipe(pdfFile);\\n"},{"lang":"csharp","label":"C#","source":"// Download the electronic receipt in PDF format\\nvar pdfStream = await facturapi.Receipt.DownloadPdfAsync(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Save the stream to a file\\nvar file = new System.IO.FileStream(\\"C:\\\\\\\\route\\\\\\\\to\\\\\\\\save\\\\\\\\receipt.pdf\\", FileMode.Create);\\npdfStream.CopyTo(file);\\nfile.Close();\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// stream containing the PDF file\\n$pdf = $facturapi->Receipts->download_pdf(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"receipt_id","schema":{"type":"string"},"required":true,"description":"ID of the receipt to download"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"E-receipt in PDF format","content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts/{receipt_id}/email":{"post":{"operationId":"sendReceiptByEmail","tags":["receipt"],"summary":"Send e-receipt by email","description":"Send the e-receipt by email to the customer.\\n\\nThe email sent will be customized with the logo and colors of the organization that created it,\\nand will include a button to invoice the receipt, as well as the receipt attached as a PDF to the message.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# Send to a different email than the one registered by the customer\\ncurl https://www.facturapi.io/v2/receipts/58e93bd8e86eb318b019743d/email \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"email\\": \\"another_email@example.com\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n# Send to a different email than the one registered by the customer\\nawait facturapi.receipts.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { email: \'ejemplo@correo.com\' }\\n);\\n\\n# Send to multiple emails (max 10)\\nawait facturapi.receipts.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { \\n    email: [\\n      \'primer@correo.com\',\\n      \'segundo@correo.com\'\\n    ]\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"// Send to a different email than the one registered by the customer\\nawait facturapi.Receipt.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = \\"ejemplo@correo.com\\"\\n  }\\n);\\n\\n// Send to multiple emails (max 10)\\nawait facturapi.Receipt.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = new String[]\\n    {\\n      \\"primer@correo.com\\",\\n      \\"segundo@correo.com\\"\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// Send to a different email than the one registered by the customer\\n$facturapi->Receipts->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  \\"ejemplo@correo.com\\"\\n);\\n\\n// Send to multiple emails (max 10)\\n$facturapi->Receipts->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  [\\n    \\"primer@correo.com\\",\\n    \\"segundo@correo.com\\"\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"receipt_id","schema":{"type":"string"},"required":true,"description":"ID of the e-receipt to send"}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object","required":["email"],"properties":{"email":{"description":"Email address to send the e-receipt. If not sent, the email registered by the customer will be used.\\n","oneOf":[{"type":"string","format":"email","description":"Email address to send the e-receipt.","example":"other@email.com"},{"type":"array","example":["first@email.com","second@email.com"],"description":"Array of email addresses to send the e-receipt. The maximum number of emails is 10.\\n","maxLength":10,"items":{"type":"string","format":"email"}}]}}}}}},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Generic response object","content":{"application/json":{"schema":{"type":"object","required":["ok"],"properties":{"ok":{"type":"boolean","description":"Indicates if the email was sent successfully"}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts/{receipt_id}/invoice":{"post":{"operationId":"invoiceReceipt","tags":["receipt"],"summary":"Convert e-receipt to invoice","description":"Creates a new invoice from a receipt. Once invoiced, the receipt\'s `status` will change to `\\"invoiced_to_customer\\"`.\\n\\nOnly open receipts (`status = \\"open\\"`) can be invoiced.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts/5ebd8e56f5687a013ca0df46/invoice \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"customer\\": \\"58e93bd8e86eb318b0197456\\",\\n        \\"folio_number\\": 914,\\n        \\"series\\": \\"F\\"\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst invoice = await facturapi.receipts.invoice(\'5ebd8e56f5687a013ca0df46\', {\\n  customer: \'58e93bd8e86eb318b0197456\',\\n  folio_number: 914,\\n  series: \'F\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Receipt.InvoiceAsync(\\"5ebd8e56f5687a013ca0df46\\", new Dictionary<string, object>\\n{\\n  [\\"customer\\"] = \\"58e93bd8e86eb318b0197456\\",\\n  [\\"folio_number\\"] = 914,\\n  [\\"series\\"] = \\"F\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_test_API_KEY\\");\\n\\n$invoice = $facturapi->Receipts->invoice(\\"5a3f3e35f508333611ad6b3e\\", [\\n  \\"customer\\" => \\"58e93bd8e86eb318b0197456\\",\\n  \\"folio_number\\" => 914,\\n  \\"series\\" => \\"F\\"\\n]);\\n"}],"parameters":[{"in":"path","name":"receipt_id","schema":{"type":"string"},"required":true,"description":"ID of the receipt to invoice"}],"requestBody":{"$ref":"#/components/requestBodies/ReceiptInvoice"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Nuevo `Invoice` object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/receipts/global-invoice":{"post":{"operationId":"createGlobalInvoice","tags":["receipt"],"summary":"Create global invoice","description":"Creates a global invoice that will include all receipts with `status = \\"open\\"` from a certain period.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/receipts/global-invoice \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"from\\": \\"2021-01-01T05:00:00.000Z\\",\\n        \\"to\\": \\"2021-01-31T04:59:59.999Z\\",\\n        \\"periodicity\\": \\"month\\",\\n        \\"months\\": \\"01\\",\\n        \\"year\\": 2021,\\n        \\"folio_number\\": 1234,\\n        \\"series\\": \\"G\\"\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst invoice = await facturapi.receipts.createGlobalInvoice({\\n  from: \'2020-12-01T05:00:00.000Z\',\\n  to: \'2020-12-31T04:59:59.999Z\',\\n  periodicity: \'month\',\\n  months: \'01\',\\n  year: 2021\\n  folio_number: 1234,\\n  series: \'G\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar invoice = await facturapi.Receipt.CreateGlobalInvoiceAsync(new Dictionary<string, object>\\n{\\n  [\\"from\\"] = \\"2020-12-01T05:00:00.000Z\\",\\n  [\\"to\\"] = \\"2020-12-31T04:59:59.999Z\\",\\n  [\\"periodicity\\"] = \\"month\\",\\n  [\\"months\\"] = \\"01\\",\\n  [\\"year\\"] = 2021,\\n  [\\"folio_number\\"] = 1234,\\n  [\\"series\\"] = \\"G\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_test_API_KEY\\");\\n\\n$invoice = $facturapi->Receipts->createGlobalInvoice([\\n  \\"from\\" => \\"2020-12-01T05:00:00.000Z\\",\\n  \\"to\\" => \\"2020-12-31T04:59:59.999Z\\",\\n  \\"periodicity\\" => \\"month\\",\\n  \\"months\\" => \\"01\\",\\n  \\"year\\" => 2021,\\n  \\"folio_number\\" => 1234,\\n  \\"series\\" => \\"G\\"\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/ReceiptCreateGlobalInvoice"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"New `Invoice` object creaded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/retentions":{"post":{"operationId":"createRetention","tags":["retention"],"summary":"Create retention","description":"Create a new Retention. If the invoice is created in Live environment, it will be **stamped and sent to SAT**.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/retentions \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"customer\\": \\"58e93bd8e86eb318b0197456\\",\\n        \\"cve_retenc\\": \\"26\\",\\n        \\"periodo\\": {\\n          \\"mes_ini\\": 1,\\n          \\"mes_fin\\": 12,\\n          \\"ejerc\\": 2020\\n        },\\n        \\"totales\\": {\\n          \\"monto_tot_operacion\\": 244.654321,\\n          \\"monto_tot_exent\\": 145.123456,\\n          \\"imp_retenidos\\": [\\n            {\\n              \\"monto_ret\\": 40,\\n              \\"base_ret\\": 250\\n            }\\n          ]\\n        }\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst retention = await facturapi.retentions.create({\\n  customer: \'58e93bd8e86eb318b0197456\',\\n  cve_retenc: \'26\',\\n  periodo: {\\n    mes_ini: 1,\\n    mes_fin: 12,\\n    ejerc: 2020\\n  },\\n  totales: {\\n    monto_tot_operacion: 244.654321,\\n    monto_tot_exent: 145.123456,\\n    imp_retenidos: [\\n      {\\n        monto_ret: 40,\\n        base_ret: 250\\n      }\\n    ]\\n  }\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar retention = await facturapi.Retention.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"customer\\"] = \\"58e93bd8e86eb318b0197456\\",\\n  [\\"cve_retenc\\"] = \\"26\\",\\n  [\\"periodo\\"] = new Dictionary<string, object>\\n  {\\n    [\\"mes_ini\\"] = 1,\\n    [\\"mes_fin\\"] = 12,\\n    [\\"ejerc\\"] = 2020\\n  },\\n  [\\"totales\\"] = new Dictionary<string, object>\\n  {\\n    [\\"monto_tot_operacion\\"] = 244.654321,\\n    [\\"monto_tot_exent\\"] = 145.123456,\\n    [\\"imp_retenidos\\"] = new Dictionary<string, object>[]\\n    {\\n      new Dictionary<string, object>\\n      {\\n        [\\"]\\n        [\\"monto_ret\\"] = 40,\\n        [\\"base_ret\\"] = 250\\n      }\\n    }\\n  }\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$retention = $facturapi->Retentions->create([\\n  \\"customer\\" => \\"58e93bd8e86eb318b0197456\\",\\n  \\"cve_retenc\\" => \\"26\\",\\n  \\"periodo\\" => [\\n    \\"mes_ini\\" => 1,\\n    \\"mes_fin\\" => 12,\\n    \\"ejerc\\" => 2020\\n  ],\\n  \\"totales\\" => [\\n    \\"monto_tot_operacion\\" => 244.654321,\\n    \\"monto_tot_exent\\" => 145.123456,\\n    \\"imp_retenidos\\" => [\\n      [\\n        \\"impuesto\\" => \\"ISR\\",\\n        \\"monto_ret\\" => 40,\\n        \\"base_ret\\" => 250\\n      ]\\n    ]\\n  ]\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/RetentionCreate"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"New `Retention` object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Retention"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listRetentions","tags":["retention"],"summary":"List retentions","description":"Returns a paginated list of all the retentions of an organization or performs a search according to parameters.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# All retentions of the organization\\ncurl https://www.facturapi.io/v2/retentions \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n# All retentions issued for a certain customer\\ncurl \\"https://www.facturapi.io/v2/retentions\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -d \\"customer=58e93bd8e86eb318b0197456\\"\\n\\n# Page 3 of search results for free text search\\n# of retentions issued between 2017 and 2019\\ncurl \\"https://www.facturapi.io/v2/retentions\\" \\\\\\n  -G \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -d \\"q=John+Doe6&date[gte]=2017-01-01T00:00:00.000Z&date[lt]=2020-01-01T00:00:00.000Z&page=3&limit=10\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// All retentions of the organization\\nconst retentionSearch = await facturapi.retentions.list();\\n\\n// All retentions issued for a certain customer\\nconst retentionSearch = await facturapi.retentions.list({\\n  customer: \'590ce6c56d04f840aa8438af\'\\n});\\n\\n// Page 3 of search results for free text search\\n// of retentions issued between 2017 and 2019\\nconst retentionSearch = await facturapi.retentions.list({\\n  q: \'John Doe\',\\n  date: {\\n    gte: new Date(\'2017-01-01T00:00:00.000Z\'),\\n    lt: new Date(\'2020-01-01T00:00:00.000Z\')\\n  },\\n  page: 3,\\n  limit: 10,\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\n// All retentions of the organization\\nvar searchResult = await facturapi.Retention.ListAsync();\\n\\n// All retentions issued for a certain customer\\nvar searchResult = await facturapi.Retention.ListAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"customer\\"] = \\"590ce6c56d04f840aa8438af\\"\\n  }\\n);\\n\\n// Page 3 of search results for free text search\\n// of retentions issued between 2017 and 2019\\nvar searchResult = await facturapi.Retention.ListAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"q\\"] = \\"John Doe\\",\\n    [\\"date\\"] = new Dictionary<string, object>\\n      {\\n        [\\"gte\\"] = new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n        [\\"lt\\"] = new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n      },\\n    [\\"page\\"] = 3,\\n    [\\"limit\\"] = 10,\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// All retentions of the organization\\n$retentions = $facturapi->Retentions->all();\\n\\n// All retentions issued for a certain customer\\n$retentions = $facturapi->Retentions->all([\\n  customer => \\"590ce6c56d04f840aa8438af\\"\\n]);\\n\\n// Page 3 of search results for free text search\\n// of retentions issued between 2017 and 2019\\n$retentions = $facturapi->Retentions->all([\\n  q => \\"John Doe\\",\\n  date => [\\n    gte => new DateTime(\\"2017-01-01T00:00:00.000Z\\"),\\n    lt => new DateTime(\\"2020-01-01T00:00:00.000Z\\")\\n  ],\\n  page => 3,\\n  limit => 10,\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Text search. Finds retentions with the specified text in the customer\'s `legal_name` or `tax_id`."},{"in":"query","name":"customer","schema":{"type":"string"},"description":"ID of the customer to filter by. Only retentions issued to this customer will be returned."},{"$ref":"#/components/parameters/SearchDate"},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RetentionSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/retentions/{retention_id}":{"get":{"operationId":"getRetention","tags":["retention"],"summary":"Retrieve retention by ID","description":"Retrieves a retention by its ID.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/retentions/6062d9fb226600001cd22f71 \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst retention = await facturapi.retentions.retrieve(\'6062d9fb226600001cd22f71\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar retention = await facturapi.Retention.RetrieveAsync(\\"6062d9fb226600001cd22f71\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$retention = $facturapi->Retentions->retrieve( \\"6062d9fb226600001cd22f71\\" );\\n"}],"parameters":[{"in":"path","name":"retention_id","schema":{"type":"string"},"required":true,"description":"ID of the retention to retrieve"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Retention` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Retention"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"cancelRetention","tags":["retention"],"summary":"Cancel retention","description":"Request a cancellation of a retention from the SAT.\\n\\nUnlike regular invoices, retention cancellations are immediate and do not require authorization from the recipient.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/retentions/6062d9fb226600001cd22f71 \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X DELETE\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst canceledRetention = await facturapi.retentions.cancel(\'6062d9fb226600001cd22f71\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar canceledRetention = await facturapi.Retention.CancelAsync(\\"6062d9fb226600001cd22f71\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$canceledRetention = $facturapi->Retentions->cancel(\\"6062d9fb226600001cd22f71\\");\\n"}],"parameters":[{"in":"path","name":"retention_id","schema":{"type":"string"},"required":true,"description":"ID of the retention to cancel"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Retention` object canceled successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Retention"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/retentions/{retention_id}/{format}":{"get":{"operationId":"downloadRetention","tags":["retention"],"summary":"Download retention","description":"Download a retention in PDF, XML or both in a ZIP file.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"## Download PDF and XML compressed in a ZIP file\\ncurl https://www.facturapi.io/v2/retentions/58e93bd8e86eb318b019743d/zip \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n## Download only the PDF\\ncurl https://www.facturapi.io/v2/retentions/58e93bd8e86eb318b019743d/pdf \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n\\n## Download only the XML\\ncurl https://www.facturapi.io/v2/retentions/58e93bd8e86eb318b019743d/xml \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const fs = require(\'fs\');\\nconst Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Download PDF and XML compressed in a ZIP file\\nconst zipStream = await facturapi.retentions.downloadZip(\'58e93bd8e86eb318b019743d\');\\nconst zipFile = fs.createWriteStream(\'./retencion.zip\');\\nzipStream.pipe(zipFile);\\n\\n// Download only the PDF\\nconst pdfStream = await facturapi.retentions.downloadPdf(\'58e93bd8e86eb318b019743d\');\\nconst pdfFile = fs.createWriteStream(\'./retencion.pdf\');\\npdfStream.pipe(pdfFile);\\n\\n// Download only the XML\\nconst xmlStream = await facturapi.retentions.downloadXml(\'58e93bd8e86eb318b019743d\');\\nconst xmlFile = fs.createWriteStream(\'./retencion.xml\');\\nxmlStream.pipe(xmlFile);\\n"},{"lang":"csharp","label":"C#","source":"// Download PDF and XML compressed in a ZIP file\\nvar zipStream = await facturapi.Retention.DownloadZipAsync(\\"58e93bd8e86eb318b019743d\\");\\n// Download only the XML\\nvar xmlStream = await facturapi.Retention.DownloadXmlAsync(\\"58e93bd8e86eb318b019743d\\");\\n// Download only the PDF\\nvar pdfStream = await facturapi.Retention.DownloadPdfAsync(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Para guardar la descarga en un archivo\\nvar file = new System.IO.FileStream(\\"C:\\\\\\\\route\\\\\\\\to\\\\\\\\save\\\\\\\\retention.zip\\", FileMode.Create);\\nzipStream.CopyTo(file);\\nfile.Close();\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// stream containing the PDF and XML as a ZIP file\\n$zip = $facturapi->Retentions->download_zip(\\"58e93bd8e86eb318b019743d\\");\\n// stream containing the PDF file\\n$pdf = $facturapi->Retentions->download_pdf(\\"58e93bd8e86eb318b019743d\\"); \\n// stream containing the XML file\\n$xml = $facturapi->Retentions->download_xml(\\"58e93bd8e86eb318b019743d\\");\\n"}],"parameters":[{"in":"path","name":"retention_id","schema":{"type":"string"},"required":true,"description":"ID of the retention to download"},{"in":"path","name":"format","schema":{"type":"string","enum":["xml","pdf","zip"]},"required":true,"description":"Format to download"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Official retention CFDI document in the requested format","content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/retentions/{retention_id}/email":{"post":{"operationId":"sendRetentionByEmail","tags":["retention"],"summary":"Send retention by email","description":"Send an email to the customer\'s address with the XML and PDF files attached to the message.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"# Send to the customer\'s email\\ncurl https://www.facturapi.io/v2/retentions/58e93bd8e86eb318b019743d/email \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST\\n\\n# Send to another email address\\ncurl https://www.facturapi.io/v2/retentions/58e93bd8e86eb318b019743d/email \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -X POST \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"email\\": \\"another_email@example.com\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\n// Send to the customer\'s email\\nawait facturapi.retentions.sendByEmail(\'58e93bd8e86eb318b019743d\');\\n\\n// Send to another email address\\nawait facturapi.retentions.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { email: \'otro@correo.com\' }\\n);\\n\\n// Send to more than one email (max 10)\\nawait facturapi.retentions.sendByEmail(\\n  \'58e93bd8e86eb318b019743d\',\\n  { \\n    email: [\\n      \'primer@correo.com\',\\n      \'segundo@correo.com\'\\n    ]\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"// Send to the customer\'s email\\nawait facturapi.Retention.SendByEmailAsync(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Send to another email\\nawait facturapi.Retention.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = \\"otro@correo.com\\"\\n  }\\n);\\n\\n// Send to more than one email (max 10)\\nawait facturapi.Retention.SendByEmailAsync(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"email\\"] = new String[]\\n    {\\n      \\"primer@correo.com\\",\\n      \\"segundo@correo.com\\"\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n// Send to the customer\'s email\\n$facturapi->Retentions->send_by_email(\\"58e93bd8e86eb318b019743d\\");\\n\\n// Send to another email\\n$facturapi->Retentions->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  \\"otro@correo.com\\"\\n);\\n\\n// Send to more than one email (max 10)\\n$facturapi->Retentions->send_by_email(\\n  \\"58e93bd8e86eb318b019743d\\",\\n  [\\n    \\"primer@correo.com\\",\\n    \\"segundo@correo.com\\"\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"retention_id","schema":{"type":"string"},"required":true,"description":"ID of the retention to send"}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"description":"Email address to send the retention. If this parameter is not sent, the retention will be sent to the email that the customer has registered.","oneOf":[{"type":"string","format":"email","description":"Email address to send the retention.","example":"another@email.com"},{"type":"array","example":["first@correo.com","second@correo.com"],"description":"Array of email addresses to send the retention. The maximum number of emails that can be sent is 10.\\n","maxLength":10,"items":{"type":"string","format":"email"}}]}}}}}},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Generic response indicating if the email was sent successfully","content":{"application/json":{"schema":{"type":"object","required":["ok"],"properties":{"ok":{"type":"boolean","description":"Indicates if the email was sent successfully"}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations":{"post":{"operationId":"createOrganization","tags":["organization"],"summary":"Create organization","description":"Create a new Organization that will belong to your user account.\\n\\nAfter creating the organization and before being able to issue invoices\\nwith the organization, you will need to finish setting it up by calling\\nthe [Update legal data](#tag/organization/operation/editOrganizationLegal) and\\n[Upload certificates (CSD)](#tag/organization/operation/uploadOrganizationCertificate) methods.\\n\\nRemember that the stamps of your subscription can be consumed by any of\\nthe organizations registered under your account.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n      \\"name\\": \\"Skynet\\"\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\nconst organization = await facturapi.organizations.create({\\n  name: \'Skynet\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"name\\"] = \\"Skynet\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n$organization = $facturapi->Organizations->create([\\n  \\"name\\" => \\"Skynet\\"\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationCreate"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"New `Organization` object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listOrganizations","tags":["organization"],"summary":"List organizations","description":"Returns a paginated list of all the organizations registered under your account, or performs a search according to parameters.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst organizationResults = await facturapi.organizations.list();\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\nvar searchResult = await facturapi.Organization.ListAsync();\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$organizations = $facturapi->Organizations->all()\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Free text search. Text to search in `name` (commercial name) or `legal_name` (fiscal name) or `tax_id` (RFC)."},{"$ref":"#/components/parameters/SearchDate"},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/me":{"get":{"operationId":"meOrganization","tags":["organization"],"summary":"Organization detail","description":"Returns the detail of a organization registered under your account.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/me \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst organizationResults = await facturapi.organizations.me();\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\nvar searchResult = await facturapi.Organization.MeAsync();\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$organizations = $facturapi->Organizations->me()\\n"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"The `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/legal":{"put":{"operationId":"editOrganizationLegal","tags":["organization"],"summary":"Edit legal data","description":"Update the legal information of the organization.\\n\\nIf you are looking for how to edit the RFC, remember that the `tax_id`\\nproperty is automatically assigned when uploading the user\'s certificates\\n(Certificado de Sello Digital or CSD).\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/legal \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"name\\": \\"Skynet\\",\\n        \\"legal_name\\": \\"Skynet\\",\\n        \\"tax_system\\": \\"601\\",\\n        \\"website\\": \\"www.sky.net\\",\\n        \\"phone\\": \\"555-555-5555\\",\\n        \\"address\\": {\\n          \\"exterior\\": \\"1414\\",\\n          \\"interior\\": \\"12\\",\\n          \\"zip\\": \\"44940\\",\\n          \\"neighborhood\\": \\"Villa Toscana\\",\\n          \\"city\\": \\"Guadalajara\\",\\n          \\"municipality\\": \\"Guadalajara\\",\\n          \\"state\\": \\"Jalisco\\",\\n          \\"country\\": \\"M\xe9xico\\"\\n        }\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\nconst organization = await facturapi.organizations.updateLegal(\\n  \'5a2a307be93a2f00129ea035\',\\n  {\\n    name: \'Skynet\',\\n    legal_name: \'Skynet\',\\n    tax_system: Facturapi.TaxSystem.GENERAL_LEY_DE_PERSONAS_MORALES,\\n    website: \'www.sky.net\',\\n    phone: \'555-555-5555\',\\n    address: {\\n      exterior: \'1414\',\\n      interior: \'12\',\\n      zip: \'44940\',\\n      neighborhood: \'Villa Toscana\',\\n      city: \'Guadalajara\',\\n      municipality: \'Guadalajara\',\\n      state: \'Jalisco\',\\n      country: \'M\xe9xico\'\\n    }\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.UpdateLegalAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"name\\"] = \\"Skynet\\",\\n    [\\"legal_name\\"] = \\"Skynet\\",\\n    [\\"tax_system\\"] = \\"601\\",\\n    [\\"website\\"] = \\"www.sky.net\\",\\n    [\\"phone\\"] = \\"555-555-5555\\",\\n    [\\"address\\"] = new Dictionary<string, object>\\n    {\\n      [\\"exterior\\"] = \\"1414\\",\\n      [\\"interior\\"] = \\"12\\",\\n      [\\"zip\\"] = \\"44940\\",\\n      [\\"neighborhood\\"] = \\"Villa Toscana\\",\\n      [\\"city\\"] = \\"Guadalajara\\",\\n      [\\"municipality\\"] = \\"Guadalajara\\",\\n      [\\"state\\"] = \\"Jalisco\\",\\n      [\\"country\\"] = \\"M\xe9xico\\"\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n$organization = $facturapi->Organizations->updateLegal(\\n  \\"5a2a307be93a2f00129ea035\\", [\\n    \\"name\\" => \\"Skynet\\",\\n    \\"legal_name\\" => \\"Skynet\\",\\n    \\"tax_system\\" => \\"601\\",\\n    \\"website\\" => \\"www.sky.net\\",\\n    \\"phone\\" => \\"555-555-5555\\",\\n    \\"address\\" => [\\n      \\"exterior\\" => \\"1414\\",\\n      \\"interior\\" => \\"12\\",\\n      \\"zip\\" => \\"44940\\",\\n      \\"neighborhood\\" => \\"Villa Toscana\\",\\n      \\"city\\" => \\"Guadalajara\\",\\n      \\"municipality\\" => \\"Guadalajara\\",\\n      \\"state\\" => \\"Jalisco\\",\\n      \\"country\\" => \\"M\xe9xico\\"\\n    )\\n  ]\\n];\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization to edit"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationEditLegal"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/certificate":{"put":{"operationId":"uploadOrganizationCertificate","tags":["organization"],"summary":"Upload certificates (CSD)","description":"Upload the files of the Digital Seal Certificate (Certificado de Sello Digital or CSD) provided by the SAT.\\n\\nThis call should also be used to replace existing certificates in case new ones are requested.\\n\\nWhen updating your certificates, the RFC will be read and automatically assigned to `legal.tax_id`.\\n\\n> **Don\'t use this endpoint to upload the FIEL certificate.**\\n> The CSD is different from the FIEL certificate (Firma Electr\xf3nica). Please ask your accountant for the CSD.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/certificate \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: multipart/form-data\\" \\\\\\n  -F \'cer=@/path/to/your/CSD.cer\' \\\\\\n  -F \'key=@/path/to/your/CSD.key\' \\\\\\n  -F \'password=CONTRASE\xd1A_DEL_CERTIFICADO\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const fs = require(\'fs\');\\nconst Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst cerFileStream = fs.createReadStream(\'/path/to/your/CSD.cer\');\\nconst keyFileStream = fs.createReadStream(\'/path/to/your/CSD.key\');\\n\\nconst organization = await facturapi.organizations.uploadCertificate(\\n  \'5a2a307be93a2f00129ea035\',\\n  cerFileStream,\\n  keyFileStream,\\n  \'CONTRASE\xd1A_DEL_CERTIFICADO\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\n\\nvar cerFileStream = File.OpenRead(@\\"C:\\\\path\\\\to\\\\your\\\\CSD.cer\\");\\nvar keyFileStream = File.OpenRead(@\\"C:\\\\path\\\\to\\\\your\\\\CSD.key\\");\\n\\nvar organization = await facturapi.Organization.UploadCertificateAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  cerFileStream,\\n  keyFileStream,\\n  \\"CONTRASE\xd1A_DEL_CERTIFICADO\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->uploadCertificate(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  [\\n    \\"cerFile\\" => \\"/path/to/CSD.cer\\",\\n    \\"keyFile\\" => \\"/path/to/CSD.key\\",\\n    \\"password\\" => \\"mYp455w0rD1553cUr3!\\"\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization to upload certificates"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationUploadCerts"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteOrganizationCertificate","tags":["organization"],"summary":"Delete certificates (CSD)","description":"Removes the certificates (CSD) from your organization.\\n\\nDeleting the certificates will not affect the invoices already issued, but you will not be able to issue new invoices until you upload new certificates.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/certificate \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst organization = await facturapi.organizations.deleteCertificate(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.DeleteCertificateAsync(\\"5a2a307be93a2f00129ea035\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->deleteCertificate(\\"5a2a307be93a2f00129ea035\\");\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization to delete certificates"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationDeleteCerts"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/logo":{"put":{"operationId":"uploadOrganizationLogo","tags":["organization"],"summary":"Upload logo","description":"Upload the organization\'s logo. The logo will be displayed on the PDFs and emails sent to your customers.\\n\\nThe file must be an image in JPG or PNG format and have a size not greater than 500 KB. The recommended dimensions are 800 \xd7 500px.\\n\\nIf the organization already has a logo, this call replaces the previous logo.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/logo \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: multipart/form-data\\" \\\\\\n  -F \'file=@/path/to/your/logo.jpg\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const fs = require(\'fs\');\\nconst Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst fileStream = fs.createReadStream(\'/path/to/your/logo.jpg\');\\nconst organization = await facturapi.organizations.uploadLogo(\\n  \'5a2a307be93a2f00129ea035\',\\n  fileStream\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\n\\nvar fileStream = File.OpenRead(@\\"C:\\\\path\\\\to\\\\your\\\\logo.jpg\\");\\n\\nvar organization = await facturapi.Organization.UploadLogoAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  fileStream\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->uploadLogo(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  \\"/path/to/logo.jpg\\"\\n));\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationUploadLogo"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/customization":{"put":{"operationId":"editOrganizationCustomization","tags":["organization"],"summary":"Edit customization","description":"Update the information related to the organization\'s identity or branding.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/customization \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"color\\": \\"#BADA55\\",\\n        \\"pdf_extra\\": {\\n          \\"codes\\": false,\\n          \\"product_key\\": true\\n        }\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst organization = await facturapi.organizations.updateCustomization(\\n  \'5a2a307be93a2f00129ea035\',\\n  {\\n    color: \'#BADA55\',\\n    pdf_extra: {\\n      codes: false,\\n      product_key: true\\n    }\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\n\\nvar organization = await facturapi.Organization.UpdateCustomizationAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"color\\"] = \\"#BADA55\\",\\n    [\\"pdf_extra\\"] = new Dictionary<string, object>\\n    {\\n      [\\"codes\\"] = false,\\n      [\\"product_key\\"] = true\\n    }\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->updateCustomization(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  array(\\n    \\"color\\" => \\"#BADA55\\",\\n    \\"pdf_extra\\" => array(\\n      \\"codes\\" => false,\\n      \\"product_key\\" => true\\n    )\\n  )\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationEditCustomization"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/receipts":{"put":{"operationId":"editOrganizationReceiptsSettings","tags":["organization"],"summary":"Edit receipts settings","description":"Update the organization\'s receipts settings.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/receipts \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"invoicing_period\\": \\"month\\",\\n        \\"duration_days\\": 14,\\n        \\"next_folio_number\\": 100\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst organization = await facturapi.organizations.updateReceiptSettings(\\n  \'5a2a307be93a2f00129ea035\',\\n  {\\n    invoicing_period: \\"month\\",\\n    duration_days: 14,\\n    next_folio_number: 100\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\n\\nvar organization = await facturapi.Organization.UpdateReceiptSettingsAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"invoicing_period\\"] = \\"month\\",\\n    [\\"duration_days\\"] = 14,\\n    [\\"next_folio_number\\"] = 100\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->updateReceiptSettings(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  [\\n    \\"invoicing_period\\" => \\"month\\",\\n    \\"duration_days\\" => 14,\\n    \\"next_folio_number\\" => 100\\n  ]\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationEditReceiptsSettings"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/domain-check":{"get":{"operationId":"checkDomainAvailability","tags":["organization"],"summary":"Check domain availability","description":"Check if an identifier is available to choose as a domain for the autofactura portal.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/domain-check?domain=empresa-demo \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst organization = await facturapi.organizations.checkDomainIsAvailable({\\n  domain: \'empresa-demo\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.CheckDomainIsAvailableAsync(\\n  new Dictionary<string, object>\\n  {\\n    [\\"domain\\"] = \\"empresa-demo\\"\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$organization = $facturapi->Organizations->checkDomainIsAvailable(\\n  [\\"domain\\" => \\"empresa-demo\\"]\\n);\\n"}],"parameters":[{"in":"query","name":"domain","required":true,"schema":{"$ref":"#/components/schemas/DomainField"}}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Response indicating if the domain is available.\\n","content":{"application/json":{"schema":{"type":"object","required":["available"],"properties":{"available":{"type":"boolean","example":true,"description":"Indicates if the domain is available"}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/domain":{"put":{"operationId":"editOrganizationDomain","tags":["organization"],"summary":"Choose self-invoice domain","description":"Choose the domain that this organization will use in its self-invoice microsite.\\nOnce you choose the domain, you must contact us if you need to change it.\\n\\nThe domain you choose will be the one that appears in the `self_invoice_url`\\nfield when creating a new receipt, as follows:\\n\\n`https://factura.space/{DOMAIN}/{RECEIPT_KEY}`\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/domain \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"domain\\": \\"empresa-demo\\"\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst organization = await facturapi.organizations.updateDomain(\\n  \'5a2a307be93a2f00129ea035\',\\n  { domain: \'empresa-demo\' }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\n\\nvar organization = await facturapi.Organization.UpdateDomainAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"domain\\"] = \\"empresa-demo\\"\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi(\\"sk_user_API_KEY\\");\\n\\n$organization = $facturapi->Organizations->updateDomain(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  array( \\"domain\\" => \\"empresa-demo\\" )\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationEditDomain"},"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Modified `Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}":{"get":{"operationId":"getOrganization","tags":["organization"],"summary":"Retrieve organization by ID","description":"Retrieve the organization by its ID.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035 \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\nconst organization = await facturapi.organizations.retrieve(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.RetrieveAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$organization = $facturapi->Organizations->retrieve(\\"5a2a307be93a2f00129ea035\\");\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"`Organization` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteOrganization","tags":["organization"],"summary":"Delete organization","description":"Delete the organization from your Facturapi account. Once deleted, you\\nwill not be able to access its resources, such as clients, products,\\ninvoices, receipts, or retentions.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035 \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\nconst organization = await facturapi.organizations.del(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar organization = await facturapi.Organization.DeleteAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$organization = $facturapi->Organizations->delete(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"`Organization` object deleted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/apikeys/test":{"get":{"operationId":"getTestApiKey","tags":["organization"],"summary":"Retrieve Test API Key","description":"Retrieve API Key for the Test environment of the organization.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/apikeys/test \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst apiKeys = await facturapi.organizations.getTestApiKey(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar apiKeys = await facturapi.Organization.GetTestApiKeyAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$organization = $facturapi->Organizations->getTestApiKey(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Test API Key","content":{"application/json":{"schema":{"type":"string","example":"sk_test_API_KEY"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"renewTestApiKey","tags":["organization"],"summary":"Renew Test API Key","description":"Renew the Test environment secret key of the organization and immediately invalidate the previous one.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/apikeys/test \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst newTestApiKey = await facturapi.organizations.renewTestApiKey(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar newTestApiKey = await facturapi.Organization.RenewTestApiKeyAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$new_test_api_key = $facturapi->Organizations->renewTestApiKey(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Test API Key","content":{"application/json":{"schema":{"type":"string","example":"sk_test_API_KEY"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/apikeys/live":{"get":{"operationId":"listLiveApiKeys","tags":["organization"],"summary":"List Live API Keys","description":"List secret keys of the organization\'s Live environment.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/apikeys/live \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst listLiveApiKeys = await facturapi.organizations.listLiveApiKeys(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar listLiveApiKeys = await facturapi.Organization.ListLiveApiKeysAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$list_live_api_key = $facturapi->Organizations->listLiveApiKeys(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"Organization ID"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Live API Key","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"first_12":{"type":"string","description":"First 12 characters of the secret key"},"created_at":{"type":"string","format":"date-time","description":"Creation date of the secret key"},"id":{"type":"string","description":"ID of the secret key"}}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"renewLiveApiKey","tags":["organization"],"summary":"Renew Live API Key","description":"Generate a new Live environment secret key for the organization.\\nThis operation does not invalidate previously generated keys.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/apikeys/live \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst newLiveApiKey = await facturapi.organizations.renewLiveApiKey(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar newLiveApiKey = await facturapi.Organization.RenewLiveApiKeyAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$new_live_api_key = $facturapi->Organizations->renewLiveApiKey(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID of the organization"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Live API Key","content":{"application/json":{"schema":{"type":"string","example":"sk_live_API_KEY"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/apikeys/live/{id}":{"delete":{"operationId":"deleteLiveApiKey","tags":["organization"],"summary":"Revoke Live API Key","description":"Revoke the Live API Key of your organization.as\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/apikeys/live/66f2ec798ca5a9b80c97db71 \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\nconst hasDeleted = await facturapi.organizations.deleteLiveApiKey(\\n  \'5a2a307be93a2f00129ea035\',\\n  \'66f2ec798ca5a9b80c97db71\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar hasDeleted = await facturapi.Organization.DeleteLiveApiKeyAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  \\"66f2ec798ca5a9b80c97db71\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$has_deleted = $facturapi->Organizations->deleteLiveApiKey(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  \\"66f2ec798ca5a9b80c97db71\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"Organization ID"},{"in":"path","name":"id","schema":{"type":"string"},"required":true,"description":"ID of the Live API Key"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Live API Key revoked","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"first_12":{"type":"string","description":"First 12 characters of the secret key"},"created_at":{"type":"string","format":"date-time","description":"Creation date of the secret key"},"id":{"type":"string","description":"ID of the secret key"}}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/series-group":{"get":{"operationId":"getSeriesGroup","tags":["organization"],"summary":"Listado de series","description":"Listado de series creadas para la personalizaci\xf3n de organizaci\xf3n. La cual lleva control de foliaje para cada tipo de factura si est\xe1 asignada en las personalizaci\xf3n de organizaci\xf3n.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/series-group \\\\\\n  -X GET \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst seriesList = await facturapi.organizations.getSeries(\\n  \'5a2a307be93a2f00129ea035\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar seriesList = await facturapi.Organization.ListSeriesAsync(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$seriesList = $facturapi->Organizations->getSeries(\\n  \\"5a2a307be93a2f00129ea035\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID de la organizaci\xf3n"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Listado de objetos `Series` creadas previamente","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/OrganizationSeriesGroup"}}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"post":{"operationId":"createSeriesGroup","tags":["organization"],"summary":"Create Series","description":"Create a new folio series for the organization.\\nSeries are useful for keeping track of the forms issued for each type of invoice\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/series-group \\\\\\n  -X POST \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"series\\": \\"New\\",\\n        \\"next_folio\\": 1,\\n        \\"next_folio_test\\": 1\\n      }\'\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst newSeries = await facturapi.organizations.createSeries(\\n  \'5a2a307be93a2f00129ea035\',\\n  {\\n    series: \'New\',\\n    next_folio: 1,\\n    next_folio_test: 1\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar newSeries = await facturapi.Organization.CreateSeriesAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  {\\n        \\"series\\": \\"New\\",\\n        \\"next_folio\\": 1,\\n        \\"next_folio_test\\": 1\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$newSeries = $facturapi->Organizations->createSeries(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  {\\n        \\"series\\": \\"New\\",\\n        \\"next_folio\\": 1,\\n        \\"next_folio_test\\": 1\\n  }\\n);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationSeriesCreate"},"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID de la organizaci\xf3n"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"New created object `s`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSeriesGroup"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/organizations/{organization_id}/series-group/{series_name}":{"put":{"operationId":"updateSeriesGroup","tags":["organization"],"summary":"Update Series","description":"Edit the folio number of the series in the Test and Live environments of the organization.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/series-group/New \\\\\\n  -X PUT \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n      \\"next_folio\\": 1,\\n      \\"next_folio_test\\": 1\\n    }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst updatedSeries = await facturapi.organizations.updateSeries(\\n  \'5a2a307be93a2f00129ea035\',\\n  \'New\',\\n  {\\n    \\"next_folio\\": 1,\\n    \\"next_folio_test\\": 1\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar updatedSeries = await facturapi.Organization.UpdateSeriesAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  \\"New\\",\\n  {\\n    \\"next_folio\\": 1,\\n    \\"next_folio_test\\": 1\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$updatedSeries = $facturapi->Organizations->updateSeries(\\n\\"5a2a307be93a2f00129ea035\\",\\n  \\"New\\",\\n  {\\n    \\"next_folio\\": 1,\\n    \\"next_folio_test\\": 1\\n  }\\n);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/OrganizationSeriesUpdate"},"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"ID de la organizaci\xf3n"},{"in":"path","name":"series_name","schema":{"type":"string"},"required":true,"description":"Series name"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Updated Objet `Series`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSeriesGroup"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteSeriesGroup","tags":["organization"],"summary":"Delete serie","description":"Delete the series\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/organizations/5a2a307be93a2f00129ea035/series-group/New \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_user_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_user_API_KEY\');\\n\\nconst deletedSeries = await facturapi.organizations.deleteSeries(\\n  \'5a2a307be93a2f00129ea035\',\\n  \'New\'\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_user_API_KEY\\");\\nvar deletedSeries = await facturapi.Organization.DeleteSeriesAsync(\\n  \\"5a2a307be93a2f00129ea035\\",\\n  \\"New\\"\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_user_API_KEY\\" );\\n$deletedSeries = $facturapi->Organizations->deleteSeries(\\n\\"5a2a307be93a2f00129ea035\\",\\n\\"New\\"\\n);\\n"}],"parameters":[{"in":"path","name":"organization_id","schema":{"type":"string"},"required":true,"description":"Organization Id"},{"in":"path","name":"series_name","schema":{"type":"string"},"required":true,"description":"Series Name"}],"security":[{"SecretUsertKey":[]}],"responses":{"200":{"description":"Deleted Objet `Series`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSeriesGroup"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/webhooks":{"post":{"operationId":"createWebhook","tags":["webhooks"],"summary":"Create webhook","description":"Register a new webhook in your Facturapi organization.\\n\\nUse this call to receive notifications of asynchronous events to the API.\\n\\nTest and live environment webhooks are independent.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"enabled_events\\": [\\"receipt.self_invoice_complete\\"],\\n        \\"url\\": \\"http://webhook_api.com\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.webhooks.create({\\n        \\"enabled_events\\": [\\"receipt.self_invoice_complete\\"],\\n        \\"url\\": \\"http://webhook_api.com\\"\\n      });\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Webhook.CreateAsync(new Dictionary<string, object>\\n{\\n  [\\"enabled_events\\"] = new Dictionary<string, object>[\\"receipt.self_invoice_complete\\"],\\n  [\\"url\\"] = \\"http://webhook_api.com\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Webhooks->create([\\n  \\"enabled_events\\" => [\\"receipt.self_invoice_complete\\"],\\n  \\"url\\" => \\"http://webhook_api.com\\"\\n]);\\n"}],"requestBody":{"$ref":"#/components/requestBodies/WebhookCreate"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"An existing `Webhook` object with the same URL was found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}},"201":{"description":"New `Webhook` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"get":{"operationId":"listWebhooks","tags":["webhooks"],"summary":"List webhooks","description":"Returns a list of webhooks created previously for the organization.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -G \\\\\\n  -d \'page=1\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst searchResult = await facturapi.webhooks.list({\\n  limit: 0,\\n  page: 1\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar searchResult = await facturapi.Webhooks.ListAsync(new Dictionary<string, object>\\n{\\n  [\\"page\\"] = 1\\n  [\\"limit\\"] = 0,\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$searchResult = $facturapi->Webhooks->all([\\n  \\"page\\" => 1\\n]);\\n"}],"parameters":[{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/webhooks/{webhook_id}":{"get":{"operationId":"getWebhook","tags":["webhooks"],"summary":"Retrieve webhook by ID","description":"Retrieve the webhook subscription by its ID.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks/590ce6c56d04f840aa8438af \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.Webhooks.retrieve(\'590ce6c56d04f840aa8438af\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Webhooks.RetrieveAsync(\\"590ce6c56d04f840aa8438af\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Webhooks->retrieve( \\"5a3ee743f508333611ad6b3c\\" );\\n"}],"parameters":[{"in":"path","name":"webhook_id","schema":{"type":"string"},"required":true,"description":"ID of the webhook"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Webhook` object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"put":{"operationId":"editWebhook","tags":["webhooks"],"summary":"Edit webhook","description":"Update the information of an existing webhook with the parameters you send in the request.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks/590ce6c56d04f840aa8438af \\\\\\n  -X PUT\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"status\\": \\"disabled\\",\\n        \\"enabled_events\\": [\\"receipt.self_invoice_complete\\"]\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.webhooks.update(\\n  \'590ce6c56d04f840aa8438af\',\\n  {\\n    \\"status\\": \\"disabled\\",\\n    \\"enabled_events\\": [\\"receipt.self_invoice_complete\\"]\\n  }\\n);\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Webhooks.UpdateAsync(\\n  \\"590ce6c56d04f840aa8438af\\",\\n  new Dictionary<string, object>\\n  {\\n    [\\"status\\"] = \\"disabled\\",\\n    [\\"address\\"] = new Dictionary<string>[\\"receipt.self_invoice_complete\\"]\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Webhooks->update(\\"590ce6c56d04f840aa8438af\\", [\\n    \\"status\\" => \\"disabled\\",\\n    \\"address\\" => [\\"receipt.self_invoice_complete\\"]\\n  ]\\n]);\\n"}],"parameters":[{"in":"path","name":"webhook_id","schema":{"type":"string"},"required":true,"description":"ID of the webhook"}],"requestBody":{"$ref":"#/components/requestBodies/WebhookEdit"},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Webhook` object edited successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}},"delete":{"operationId":"deleteWebhook","tags":["webhooks"],"summary":"Delete Webhook","description":"Deletes the webhook subscription from the organization.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks/590ce6c56d04f840aa8438af \\\\\\n  -X DELETE \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst removedCustomer = await facturapi.webhooks.del(\'590ce6c56d04f840aa8438af\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Webhooks.DeleteAsync(\\"590ce6c56d04f840aa8438af\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$facturapi->Webhooks->delete( \\"5a3fefd9f508333611ad6b43\\" );\\n"}],"parameters":[{"in":"path","name":"webhook_id","schema":{"type":"string"},"required":true,"description":"ID of the webhook"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"`Webhook` object deleted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/webhooks/validate-signature":{"post":{"operationId":"validateWebhookSignature","tags":["webhooks"],"summary":"Validate Webhook Signature","description":"Validate the signature of an event object received through a Webhook.\\nUse this operation to verify the authenticity and integrity of the event\\nreceived, comparing the received signature with the one generated by Facturapi.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/webhooks/validate-signature \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n        \\"secret\\": \\"wh_sec...\\",\\n        \\"payload\\": \\"Object Response\\",\\n        \\"signature\\": \\"Signature_FROM_HEADER\\"\\n      }\'\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\nconst customer = await facturapi.webhooks.validateSignature({\\n        secret: \\"wh_sec...\\",\\n        payload: \\"Object Response\\",\\n        signature: \\"Signature_FROM_HEADER\\"\\n      });\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\nvar customer = await facturapi.Webhook.ValidateSignatureAsync(new Dictionary<string, object>\\n{\\n  [\\"secret\\"] = \\"wh_sec...\\",\\n  [\\"payload\\"] = new Dictionary<string>[\\"Object Response\\"],\\n  [\\"signature\\"] = \\"Signature_FROM_HEADER\\"\\n});\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n$customer = $facturapi->Webhooks->validateSignature([\\n  \\"secret\\" => \\"wh_sec...\\",\\n  \\"payload\\" => \\"Object Response\\",\\n  \\"signature\\" => \\"Signature_FROM_HEADER\\"\\n]);\\n"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret":{"type":"string","description":"Secret key of the webhook, found in the webhook settings or upon creation."},"payload":{"type":"object","description":"Event object received through a webhook."},"signature":{"type":"string","description":"Signature from the header \\"Facturapi-Signature\\"."}}}}}},"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Event object successfully validated","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","example":"invoice.status_updated","enum":["invoice.status_updated"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object affected by the event","enum":["invoice"]},"object":{"$ref":"#/components/schemas/Invoice"}}}}}]}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/check":{"get":{"tags":["tools"],"summary":"Health check","description":"Check the health of the Facturapi API.\\n","security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"API is operational","content":{"application/json":{"schema":{"type":"object","properties":{"ok":{"type":"boolean","example":true}}}}}},"401":{"description":"Error de autenticaci\xf3n. Aseg\xfarate de estar usando tu llave secreta."},"502":{"description":"Servicio temporalmente no disponible."}}}},"/tools/tax_id_validation":{"get":{"tags":["tools"],"summary":"Validate RFC (tax_id)","description":"Check the status of an RFC in the list of **EFOS** (Empresas que\\nFacturan Operaciones Simuladas). When appearing in this list, the RFC is\\nor was suspected of engaging in simulated fiscal operations (factureras).\\n\\nThe response (detailed below) includes the results of this validation.\\nIt includes the boolean property `is_valid`, which Facturapi resolves by\\ninterpreting the response. A value of `true` for this property indicates\\nthat the RFC has no issues to resolve and is free of problems; and the\\nopposite for `false`.\\n\\nAdditionally, you can check the `data` property to see the raw values of\\nthe query to the SAT.\\n","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/tools/tax_id_validation?tax_id=BBA830831LJ2 \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\"\\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst validation = await facturapi.tools.validateTaxId(\'BBA830831LJ2\');\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\nvar customer = await facturapi.Tools.ValidateTaxIdAsync(\\"BBA830831LJ2\\");\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$customer = $facturapi->Tools->validateTaxId(\\"BBA830831LJ2\\");\\n"}],"parameters":[{"in":"query","name":"tax_id","required":true,"schema":{"type":"string","description":"RFC a validar","example":"BBA830831LJ2"}}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Validation result","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxIdValidationResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/catalogs/products":{"get":{"tags":["sat_keys"],"summary":"Product/Service Key","description":"Search in the SAT Product/Service catalog, which contains the key to include in the invoice.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/catalogs/products?q=ukelele \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst searchResult = await facturapi.catalogs.searchProducts({\\n  q: \'ukelele\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\nvar searchResult = await facturapi.Catalog.SearchProducts(\\n  new Dictionary<string, object>\\n  {\\n    [\\"q\\"] = \\"ukelele\\"\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$result = $facturapi->Catalogs->searchProducts([\\n  \\"q\\" => \\"ukelele\\"\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Text search. Text to search in the product/service classification description."},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductCatalogSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}},"/catalogs/units":{"get":{"tags":["sat_keys"],"summary":"Units of Measure","description":"Search in the SAT Units of Measure catalog.","x-codeSamples":[{"lang":"Bash","label":"cURL","source":"curl https://www.facturapi.io/v2/catalogs/units?q=pulgada \\\\\\n  -H \\"Authorization: Bearer sk_test_API_KEY\\" \\n"},{"lang":"JavaScript","label":"Node.js","source":"const Facturapi = require(\'facturapi\');\\nconst facturapi = new Facturapi(\'sk_test_API_KEY\');\\n\\nconst searchResult = await facturapi.catalogs.searchUnits({\\n  q: \'pulgada\'\\n});\\n"},{"lang":"csharp","label":"C#","source":"var facturapi = new FacturapiClient(\\"sk_test_API_KEY\\");\\n\\nvar searchResult = await facturapi.Catalog.SearchUnits(\\n  new Dictionary<string, object>\\n  {\\n    [\\"q\\"] = \\"pulgada\\"\\n  }\\n);\\n"},{"lang":"PHP","source":"$facturapi = new Facturapi( \\"sk_test_API_KEY\\" );\\n\\n$result = $facturapi->Catalogs->searchUnits([\\n  \\"q\\" => \\"pulgada\\"\\n]);\\n"}],"parameters":[{"in":"query","name":"q","schema":{"type":"string"},"description":"Query. Text to search in the description of the unit of measure."},{"$ref":"#/components/parameters/SearchPage"},{"$ref":"#/components/parameters/SearchLimit"}],"security":[{"SecretLiveKey":[]},{"SecretTestKey":[]}],"responses":{"200":{"description":"Search results","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnitCatalogSearchResult"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthenticated"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/UnexpectedError"}}}}},"x-webhooks":{"Global invoice created":{"post":{"summary":"Global invoice created","description":"Notifies about the creation of a global invoice from e-Receipts.\\n","tags":["events"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","example":"invoice.global_invoice_created","enum":["invoice.global_invoice_created"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["invoice"]},"object":{"$ref":"#/components/schemas/Invoice"}}}}}]}}}}}},"Invoice status updated":{"post":{"summary":"Invoice status updated","description":"Notifies about changes in the `status` field of an invoice.\\n\\nUsed in the case of having created the invoice asynchronously (`async` param).\\n","tags":["events"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","example":"invoice.status_updated","enum":["invoice.status_updated"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["invoice"]},"object":{"$ref":"#/components/schemas/Invoice"}}}}}]}}}}}},"Invoice created from dashboard":{"post":{"summary":"Invoice created from dashboard","description":"Notifies when an invoice was created from Facturapi Dashboard.\\n","tags":["events"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","example":"invoice.created_from_dashboard","enum":["invoice.created_from_dashboard"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["invoice"]},"object":{"$ref":"#/components/schemas/Invoice"}}}}}]}}}}}},"Cancellation status updated":{"post":{"tags":["events"],"summary":"Cancellation status updated","description":"Notifies about changes in the `cancellation_status` field of an invoice.\\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","enum":["invoice.cancellation_status_updated"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["invoice"]},"object":{"$ref":"#/components/schemas/Invoice"}}}}}]}}}}}},"Self-invoice completed":{"post":{"tags":["events"],"summary":"Self-invoice completed","description":"Notifies about the completion of a self-invoice.\\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","example":"receipt.self_invoice_complete","enum":["receipt.self_invoice_complete"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["receipt"]},"object":{"$ref":"#/components/schemas/Receipt"}}}}}]}}}}}},"Receipt status updated":{"post":{"tags":["events"],"summary":"Receipt status updated","description":"Notifies about changes in the `status` field of a receipt.\\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/EventBase"},{"type":"object","properties":{"type":{"type":"string","description":"Type of event","enum":["receipt.status_updated"]},"data":{"type":"object","properties":{"type":{"type":"string","description":"Type of object associated with the event","enum":["receipt"]},"object":{"$ref":"#/components/schemas/Receipt"}}}}}]}}}}}}},"components":{"responses":{"BadRequest":{"description":"Error in some of the request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"}}}},"Unauthenticated":{"description":"Authentication error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"}}}},"Conflict":{"description":"Conflict in the request. The operation that is being attempted cannot be completed due to conflicts in the current state of the resource.\\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"}}}},"NotFound":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"}}}},"UnexpectedError":{"description":"Unexpected error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericError"}}}}},"requestBodies":{"CustomerCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreateInput"}}}},"CustomerEdit":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CustomerProperties"}]}}}},"ProductCreate":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ProductProperties"}]}}}},"ProductEdit":{"required":true,"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ProductProperties"}]}}}},"InvoiceCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvoiceCreateInput"}}}},"InvoiceCreatePending":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/InvoiceIngresoInput"},{"$ref":"#/components/schemas/InvoiceEgresoInput"},{"$ref":"#/components/schemas/InvoicePagoInput"},{"$ref":"#/components/schemas/InvoiceNominaInput"},{"$ref":"#/components/schemas/InvoiceTrasladoInput"}]}}}},"InvoiceEdit":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/InvoiceIngresoEditInput"},{"$ref":"#/components/schemas/InvoiceEgresoEditInput"},{"$ref":"#/components/schemas/InvoicePagoEditInput"},{"$ref":"#/components/schemas/InvoiceNominaEditInput"},{"$ref":"#/components/schemas/InvoiceTrasladoEditInput"}]}}}},"ReceiptCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReceiptInput"}}}},"ReceiptInvoice":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvoiceReceiptInput"}}}},"ReceiptCreateGlobalInvoice":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GlobalInvoiceInput"}}}},"RetentionCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RetentionInput"}}}},"OrganizationCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationCreateInput"}}}},"OrganizationEditLegal":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationLegalInput"}}}},"OrganizationUploadCerts":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/OrganizationCertsInput"}}}},"OrganizationUploadLogo":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/OrganizationLogoInput"}}}},"OrganizationEditCustomization":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationCustomizationInput"}}}},"OrganizationEditReceiptsSettings":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationReceiptsInput"}}}},"OrganizationEditDomain":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationDomainInput"}}}},"OrganizationSeriesCreate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSeriesCreateInput"}}}},"OrganizationSeriesUpdate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationSeriesUpdateInput"}}}},"WebhookCreate":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookCreateInput"}}}},"WebhookEdit":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookCreateEdit"}}}}},"parameters":{"SearchDate":{"in":"query","name":"date","style":"deepObject","schema":{"$ref":"#/components/schemas/DateRange"},"description":"Object with requested date range."},"SearchPage":{"in":"query","name":"page","schema":{"type":"integer","minimum":1},"description":"Page of results to return, starting from page 1."},"SearchLimit":{"in":"query","name":"limit","schema":{"type":"integer","minimum":1,"default":50,"maximum":100},"description":"Number from 1 to 100 representing the maximum amount of results to return for pagination purposes."}},"schemas":{"EventBase":{"type":"object","properties":{"id":{"type":"string","description":"ID of the event","example":"61f81a81bd4661b11b9b404e"},"created_at":{"type":"string","format":"date-time","description":"Creation date and time of the event","example":"2022-03-30T00:00:00Z"},"livemode":{"type":"boolean","description":"Indicates if the event was generated in Test mode (false) or Live mode (true).","example":false},"organization":{"type":"string","description":"ID of the organization this event is related to","example":"61f81a7fbd4661b11b9b3f27"}}},"DateRange":{"type":"object","properties":{"gt":{"type":"string","format":"date-time","title":"Greater than","description":"Lower exclusive limit of the date range to request."},"gte":{"type":"string","format":"date-time","title":"Greater than or equals","description":"Lower inclusive limit of the date range to request."},"lt":{"type":"string","format":"date-time","title":"Lesser than","description":"Upper exclusive limit of the date range to request."},"lte":{"type":"string","format":"date-time","title":"Lesser than or equals","description":"Upper inclusive limit of the date range to request."}}},"GenericError":{"type":"object","properties":{"message":{"type":"string","title":"Error description","description":"Indicates what went wrong and may include a suggestion on how to fix the error."}}},"SearchResult":{"type":"object","properties":{"page":{"type":"integer","example":1,"title":"P\xe1gina","description":"The current page number within the search results"},"total_pages":{"type":"integer","example":1,"title":"Total pages","description":"The total number of pages available in the search results"},"total_results":{"type":"integer","example":1,"title":"Total results","description":"The total number of results available in the search"}}},"ResourceAutoGeneratedProps":{"type":"object","required":["id","created_at","livemode"],"properties":{"id":{"type":"string","description":"ID of the object","example":"590ce6c56d04f840aa8438af"},"created_at":{"type":"string","format":"date-time","description":"Creation date and time","example":"2017-05-05T20:55:33.468Z"},"livemode":{"type":"boolean","description":"Indicates if the object was created in Live mode (true) or Test mode (false).","example":false}}},"TaxIdValidationResult":{"type":"object","properties":{"efos":{"type":"object","description":"Result of the validation in the list of Companies that\\nIssue Simulated Operations (factureras or EFOS) of the SAT.\\n","properties":{"is_valid":{"type":"boolean","example":true,"description":"Indicates if the RFC has any issues related to this list.\\n`true`: The RFC is not in the EFOS list or its situation was\\nappealed and resulted in a favorable outcome. `false`: The RFC\\nis registered as \\"Presumed\\" or \\"Definitive\\" in the EFOS list.\\n"},"data":{"type":"object","description":"Object with the result of the search at the SAT.\\nAll the information contained in this object comes from the SAT.\\n","properties":{"mensaje":{"type":"string","description":"Available only when the RFC was not found in the list,\\nwhich is good.\\n"},"fechaLista":{"type":"string","example":"Information updated on September 17, 2023","description":"Text indicating the date of the list update."},"detalles":{"type":"array","description":"Array with the details of the search in the EFOS list.","items":{"type":"object","properties":{"rfc":{"type":"string","example":"NOR170627727","description":"The RFC consulted, as a confirmation."},"razonSocial":{"type":"string","example":"NORMANDIA FERRE,","description":"Taxpayer\'s fiscal name."},"situacionContribuyente":{"type":"string","example":"Definitivo","description":"Text indicating the current situation. Check\\n[this table](#situaci\xf3n-del-contribuyente) for details on the possible values.\\n"},"numFechaPresuncion":{"type":"string","example":"500-05-2020-23758 de fecha 03 de noviembre de 2020","description":"Text with identifier and date of the presumption report."},"pubFechaSatPresuntos":{"type":"string","format":"DD/MM/YYYY","example":"03/11/2020","description":"Date of publication of the presumption."},"numGlobalPresuncion":{"type":"string","example":"500-05-2020-23758 de fecha 03 de noviembre de 2020","description":"Text with identifier and date of publication in the global presumption list."},"pubFechaDofPresuntos":{"type":"string","format":"DD/MM/YYYY","example":"18/11/2020","description":"Date of publication in the Official Gazette of the Federation (DOF)."},"pubSatDefinitivos":{"type":"string","example":"500-05-2021-151","description":"Text with identifier of the publication of the \\"Definitive\\" status."},"pubDofDefinitivos":{"type":"string","format":"DD/MM/YYYY","example":"25/05/2021","description":"Date of publication of the \\"Definitive\\" status in the DOF."},"numFechaSentFav":{"type":"string","example":"500-05-2021-15156 de fecha 25 de mayo de 2021","description":"Text with identifier and date of favorable sentence."},"pubSatSentFav":{"type":"string","example":"08/06/2021","format":"DD/MM/YYYY","description":"Date of favorable sentence."}}}}}}}}}},"ProductCatalogResult":{"type":"object","properties":{"key":{"type":"string","description":"Key from the SAT catalog","example":60131324},"description":{"type":"string","description":"Description","example":"Ukelele"},"score":{"type":"number","description":"Number from 0 to 1 representing the level of match of the\\nresult with respect to the search query.\\n","example":0.8}}},"UnitCatalogResult":{"type":"object","properties":{"key":{"type":"string","description":"Key from the SAT catalog","example":"INH"},"description":{"type":"string","description":"Description","example":"Pulgada"},"score":{"type":"number","description":"Number from 0 to 1 representing the level of match of the\\nresult with respect to the search query.\\n","example":0.9}}},"ProductCatalogSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/ProductCatalogResult"}}}}]},"UnitCatalogSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/UnitCatalogResult"}}}}]},"LocalTax":{"type":"object","required":["rate","type"],"properties":{"rate":{"type":"number","example":0.1,"description":"Tax rate in decimal format."},"base":{"type":"number","default":"100% of subtotal","description":"Tax base amount."},"type":{"type":"string","description":"Tax name. Free text."},"withholding":{"type":"boolean","default":false,"description":"Indicates if it is a withholding tax (`true`) or a transferred tax (`false`)."}}},"BaseTax":{"title":"Tax","type":"object","required":["rate"],"discriminator":{"propertyName":"type","mapping":{"IVA":"#/components/schemas/BaseTax","ISR":"#/components/schemas/BaseTax","IEPS":"#/components/schemas/IepsTax"}},"properties":{"rate":{"type":"number","example":0.16,"description":"Tax rate in decimal format."},"base":{"type":"number","default":"100% of subtotal","description":"Tax base amount."},"type":{"type":"string","default":"IVA","description":"Type of tax","enum":["IVA","ISR","IEPS"]},"factor":{"type":"string","default":"Tasa","enum":["Tasa","Cuota","Exento"],"description":"Factor type. Tasa (rate), Cuota (amount), or Exento (exempt)."},"withholding":{"type":"boolean","default":false,"description":"Indicates if it is a withholding tax (`true`) or a transferred tax (`false`)."}}},"IepsTax":{"type":"object","allOf":[{"$ref":"#/components/schemas/BaseTax"},{"type":"object","properties":{"ieps_mode":{"type":"string","default":"sum_before_taxes","enum":["sum_before_taxes","break_down","unit","subtract_before_break_down"],"description":"Indicates in which way the tax is calculated.\\n\\n`\\"sum_before_taxes\\"`: Apply the IEPS to the subtotal first and use the result as the base for the rest of the taxes in the product.\\n\\n`\\"break_down\\"`: Charge and break down the IEPS at the same level as the rest of the taxes in the product.\\n\\n`\\"unit\\"`: Apply the IEPS before the unit price, and use the original unit price as the base for the rest of the taxes.\\n\\n`\\"subtract_before_break_down\\"`: Apply the IEPS only to calculate taxes like IVA de traslado and retentions, and use the original unit price as the base for the rest of the taxes.\\n\\nConsult with your accountant which case applies to your company and product.\\n"}}}]},"Stamp":{"type":"object","description":"Information about the digital stamp added by the PAC.","properties":{"signature":{"type":"string","description":"Digital signature of the fiscal document."},"date":{"type":"string","format":"date-time","description":"Stamp date in ISO8601 format (UTC String)."},"sat_cert_number":{"type":"string","description":"SAT certificate serial number used for stamping."},"sat_signature":{"type":"string","description":"Digital stamp of the fiscal document."}}},"LineItem":{"type":"object","properties":{"quantity":{"type":"number","description":"Quantity of units included in the same concept.","example":1},"discount":{"type":"number","description":"Total discount amount applied to this concept.","example":0},"product":{"$ref":"#/components/schemas/LineItemProduct","description":"Object with information about the product or service invoiced.\\n"},"parts":{"$ref":"#/components/schemas/Parts","description":"Object with information about the parts conforming this item or product."}}},"ThirdParty":{"type":"object","description":"Object with information about the third-party contributor, on behalf of whom the operation is carried out.\\n\\nCorresponds to the \\"ACuentaTerceros\\" field in the CFDI.\\n","properties":{"legal_name":{"type":"string","description":"Name or business name of the third party.","example":"The Michael Scott Paper Company"},"tax_id":{"type":"string","description":"RFC of the third party.","example":"MIC920101HN7"},"tax_system":{"type":"string","maxLength":3,"minLength":3,"description":"Fiscal regime of the third party.","example":"601"},"zip":{"type":"string","description":"Postal code of the third party.","example":"01234"}}},"LineItemInput":{"title":"LineItem","required":["product"],"type":"object","description":"Concepts included in the document","properties":{"quantity":{"type":"number","default":1,"description":"Quantity of units included in the same concept.","example":1},"discount":{"type":"number","description":"Total discount amount applied to this concept.","default":0,"example":0},"product":{"description":"Object with information about the product or service invoiced.","oneOf":[{"$ref":"#/components/schemas/LineItemProductInput"},{"type":"string","title":"product_id","description":"ID of a product previously registered in Facturapi"}]},"parts":{"type":"array","items":{"$ref":"#/components/schemas/PartInput"}},"customs_keys":{"type":"array","items":{"type":"string"},"description":"Customs entry numbers (pedimento) associated with this concept."},"complement":{"type":"string","format":"xml","description":"XML code of your complement."},"third_party":{"allOf":[{"type":"object","required":["legal_name","tax_id","tax_system","zip"]},{"$ref":"#/components/schemas/ThirdParty"}]},"property_tax_account":{"type":"string","description":"Bank account number for property tax.","example":"0102030405"}}},"LineItemEgresoInput":{"title":"LineItem","required":["product"],"type":"object","description":"Concepts included in the document","properties":{"quantity":{"type":"number","default":1,"description":"Quantity of units included in the same concept.","example":1},"discount":{"type":"number","description":"Total discount amount applied to this concept.","default":0,"example":0},"product":{"description":"Object with information about the product or service invoiced.","oneOf":[{"$ref":"#/components/schemas/LineItemProductEgresoInput"},{"type":"string","title":"product_id","description":"ID of a product previously registered in Facturapi"}]},"parts":{"type":"array","items":{"$ref":"#/components/schemas/PartInput"}},"customs_keys":{"type":"array","items":{"type":"string"},"description":"Customs entry numbers (pedimento) associated with this concept."},"complement":{"type":"string","format":"xml","description":"XML code of your complement."},"third_party":{"allOf":[{"type":"object","required":["legal_name","tax_id","tax_system","zip"]},{"$ref":"#/components/schemas/ThirdParty"}]}}},"LineItemTrasladoInput":{"title":"LineItem","required":["product"],"type":"object","description":"Concepts included in the document","properties":{"quantity":{"type":"number","default":1,"description":"Quantity of units included in the same concept.","example":1},"product":{"description":"Object with information about the product or service invoiced.","oneOf":[{"$ref":"#/components/schemas/LineItemTrasladoProductInput"},{"type":"string","title":"product_id","description":"ID of a product previously registered in Facturapi"}]},"customs_keys":{"type":"array","items":{"type":"string"},"description":"Customs entry numbers (pedimento) associated with this concept."},"complement":{"type":"string","format":"xml","description":"XML code of your complement."},"parts":{"type":"array","items":{"$ref":"#/components/schemas/PartInput"}},"third_party":{"type":"object","required":["legal_name","tax_id","tax_system","zip"],"properties":{"legal_name":{"type":"string","description":"Name or business name of the third party.","example":"The Michael Scott Paper Company"},"tax_id":{"type":"string","description":"RFC of the third party.","example":"STA920101HN7"},"tax_system":{"type":"string","maxLength":3,"minLength":3,"description":"Fiscal regime of the third party.","example":"601"},"zip":{"type":"string","description":"Postal code of the third party.","example":"01234"}}}}},"CustomComplementData":{"title":"string","type":"string","format":"xml","description":"XML code of your complement as you want it to be inserted in the XML. It must contain only one root XML node."},"CustomComplementProperties":{"title":"CustomComplement","type":"object","properties":{"type":{"type":"string","enum":["custom"],"description":"Type of complement."},"data":{"$ref":"#/components/schemas/CustomComplementData"}}},"CustomComplementInput":{"title":"CustomComplement","allOf":[{"type":"object","required":["type","data"]},{"$ref":"#/components/schemas/CustomComplementProperties"}]},"NominaComplementDataInput":{"title":"NominaComplementData","description":"Object with the information of the payroll complement.\\n","allOf":[{"type":"object","required":["fecha_inicial_pago","fecha_final_pago","num_dias_pagados","receptor","percepciones"]},{"$ref":"#/components/schemas/NominaComplementDataDirectProperties"},{"$ref":"#/components/schemas/NominaComplementDataNestedInput"}]},"NominaComplementDataProperties":{"description":"Payroll (n\xf3mina) complement","allOf":[{"$ref":"#/components/schemas/NominaComplementDataDirectProperties"},{"$ref":"#/components/schemas/NominaComplementDataNestedProperties"}]},"NominaComplementDataDirectProperties":{"type":"object","properties":{"tipo_nomina":{"type":"string","default":"O","enum":["O","E"],"description":"Type of payroll.\\n- `\\"O\\"` (Ordinary): For payments made in a regular manner, such as salaries.\\n- `\\"E\\"` (Extraordinary): For payments outside the ordinary, such as settlements, bonuses, or Christmas bonuses.\\n"},"fecha_pago":{"type":"string","format":"date","default":"now","description":"Payment date of the payroll to the worker."},"fecha_inicial_pago":{"type":"string","format":"date","description":"Initial date of the payment period."},"fecha_final_pago":{"type":"string","format":"date","description":"Final date of the payment period."},"num_dias_pagados":{"type":"number","exclusiveMinimum":0,"description":"Number of days paid. It can be an integer or a fraction."}}},"NominaComplementDataNestedInput":{"type":"object","properties":{"emisor":{"$ref":"#/components/schemas/NominaEmisorProperties"},"receptor":{"$ref":"#/components/schemas/NominaReceptorInput"},"percepciones":{"$ref":"#/components/schemas/NominaPercepcionesInput"},"deducciones":{"type":"array","description":"Array of objects where applicable deductions are detailed.","items":{"$ref":"#/components/schemas/NominaDeduccionInput"}},"otros_pagos":{"type":"array","description":"Array of objects where other applicable payments are detailed.","items":{"title":"OtroPago","allOf":[{"$ref":"#/components/schemas/NominaOtroPagoInput"},{"type":"object","properties":{"compensacion_saldos_a_favor":{"$ref":"#/components/schemas/NominaCompensacionInput"}}}]}},"incapacidades":{"type":"array","description":"Array of objects with information about paid incapacities.","items":{"$ref":"#/components/schemas/NominaIncapacidadInput"}}}},"NominaComplementDataNestedProperties":{"type":"object","properties":{"emisor":{"$ref":"#/components/schemas/NominaEmisorProperties"},"receptor":{"$ref":"#/components/schemas/NominaReceptorProperties"},"percepciones":{"$ref":"#/components/schemas/NominaPercepcionesProperties"},"deducciones":{"type":"array","description":"Array of objects where applicable deductions are detailed.","items":{"$ref":"#/components/schemas/NominaDeduccionProperties"}},"otros_pagos":{"type":"array","description":"Array of objects where other applicable payments are detailed.","items":{"allOf":[{"$ref":"#/components/schemas/NominaOtroPagoDirectProperties"},{"type":"object","properties":{"compensacion_saldos_a_favor":{"$ref":"#/components/schemas/NominaCompensacionProperties"}}}]}},"incapacidades":{"type":"array","description":"Array of objects with information about paid incapacities.","items":{"$ref":"#/components/schemas/NominaIncapacidadProperties"}}}},"NominaIncapacidadInput":{"title":"Incapacidad","allOf":[{"type":"object","required":["dias_incapacidad","tipo_incapacidad"]},{"$ref":"#/components/schemas/NominaIncapacidadProperties"}]},"NominaIncapacidadProperties":{"type":"object","properties":{"dias_incapacidad":{"type":"integer","description":"Number of days the worker was incapacitated in the period."},"tipo_incapacidad":{"type":"string","description":"Key from the catalog [Type of incapacity](#tipo-de-incapacidad)."},"importe_monetario":{"type":"number","description":"Monetary amount of the paid incapacity."}}},"NominaOtroPagoInput":{"title":"OtroPago","allOf":[{"type":"object","required":["tipo_otro_pago","clave","importe"]},{"$ref":"#/components/schemas/NominaOtroPagoDirectProperties"},{"type":"object","properties":{"compensacion_saldos_a_favor":{"$ref":"#/components/schemas/NominaCompensacionInput"}}}]},"NominaOtroPagoDirectProperties":{"type":"object","properties":{"tipo_otro_pago":{"type":"string","description":"Key from the catalog [Type of Other Payment](#tipo-de-otro-pago)."},"clave":{"type":"string","minLength":3,"maxLength":15,"description":"Key of another payroll payment, specific to each employer\'s accounting."},"concepto":{"type":"string","description":"Alternative description corresponding to the key used."},"importe":{"type":"number","description":"Amount for another payment concept."},"subsidio_causado":{"type":"number","description":"Caused subsidy according to the subsidy table for employment\\npublished in Annex 8 of the current Fiscal Miscellaneous Resolution.\\n\\nThis value will be inserted within the `SubsidioAlEmpleo` node, and is\\nrequired when the value of `tipo_otro_pago` is `\\"002\\"`.\\n"}}},"NominaCompensacionInput":{"allOf":[{"type":"object","required":["saldo_a_favor","ano","remanente_sal_fav"]},{"$ref":"#/components/schemas/NominaCompensacionProperties"}]},"NominaCompensacionProperties":{"type":"object","description":"Object with information about the compensation of balances in favor of a worker.","properties":{"saldo_a_favor":{"type":"number","description":"Amount for a balance in favor determined by the employer to the worker in previous periods or exercises."},"ano":{"type":"integer","description":"Year in which the balance in favor of the worker was determined."},"remanente_sal_fav":{"type":"number","description":"Remaining balance in favor of the worker."}}},"NominaDeduccionInput":{"title":"Deduccion","allOf":[{"type":"object","required":["tipo_deduccion","clave","importe"]},{"$ref":"#/components/schemas/NominaDeduccionProperties"}]},"NominaDeduccionProperties":{"type":"object","properties":{"tipo_deduccion":{"type":"string","description":"Key from the catalog [Type of deduction](#tipo-de-deducci\xf3n)."},"concepto":{"type":"string","description":"Deduction concept. If not sent, the description of the deduction type catalog will be used."},"clave":{"type":"string","minLength":3,"maxLength":15,"description":"Internal control key assigned by the employer to each deduction (discount) of payroll specific to its accounting."},"importe":{"type":"number","description":"Amount of the deduction."}}},"NominaPercepcionesInput":{"type":"object","title":"Percepciones","description":"Object to indicate the applicable earnings.","required":["percepcion"],"properties":{"percepcion":{"type":"array","description":"Object with detailed information of each earning.","items":{"$ref":"#/components/schemas/NominaPercepcionInput"}},"jubilacion_pension_retiro":{"$ref":"#/components/schemas/NominaJubilacionInput"},"separacion_indemnizacion":{"$ref":"#/components/schemas/NominaSeparacionInput"}}},"NominaPercepcionesProperties":{"type":"object","title":"Percepciones","description":"Object to indicate the applicable earnings.","properties":{"percepcion":{"type":"array","description":"Object with detailed information of each earning.","items":{"$ref":"#/components/schemas/NominaPercepcionProperties"}},"jubilacion_pension_retiro":{"$ref":"#/components/schemas/NominaJubilacionProperties"},"separacion_indemnizacion":{"$ref":"#/components/schemas/NominaSeparacionProperties"}}},"NominaSeparacionInput":{"title":"Separacion","allOf":[{"type":"object","required":["total_pagado","num_anos_servicio","ultimo_sueldo_mens_ord","ingreso_acumulable","ingreso_no_acumulable"]},{"$ref":"#/components/schemas/NominaSeparacionProperties"}]},"NominaSeparacionProperties":{"type":"object","title":"Jubilacion","description":"Object with detailed information of payments for separation (dismissal) or compensation.","properties":{"total_pagado":{"type":"number","description":"Total amount paid for separation or compensation."},"num_anos_servicio":{"type":"integer","description":"Number of years of service worked by the worker, rounded up to the nearest whole number."},"ultimo_sueldo_mens_ord":{"type":"number","description":"Last ordinary monthly salary received by the worker."},"ingreso_acumulable":{"type":"number","description":"Amount for accumulable income."},"ingreso_no_acumulable":{"type":"number","description":"Amount for non-accumulable income."}}},"NominaJubilacionInput":{"title":"Jubilacion","allOf":[{"type":"object","required":["ingreso_acumulable","ingreso_no_acumulable"]},{"$ref":"#/components/schemas/NominaJubilacionProperties"}]},"NominaJubilacionProperties":{"type":"object","description":"Object with detailed information of payments for retirement, pensions, or retirement benefits.","properties":{"total_una_exhibicion":{"type":"number","description":"Total amount paid in a single installment."},"total_parcialidad":{"type":"number","description":"Total amount paid in separate installments."},"monto_diario":{"type":"number","description":"Daily amount received by the worker when the payment is made in installments."},"ingreso_acumulable":{"type":"number","description":"Accumulable income received by the worker."},"ingreso_no_acumulable":{"type":"number","description":"Non-accumulable income received by the worker."}}},"NominaPercepcionProperties":{"title":"Percepcion","allOf":[{"$ref":"#/components/schemas/NominaPercepcionDirectProperties"},{"$ref":"#/components/schemas/NominaPercepcionNestedProperties"}]},"NominaPercepcionInput":{"title":"Percepcion","allOf":[{"type":"object","required":["tipo_percepcion","clave","importe_gravado","importe_exento"]},{"$ref":"#/components/schemas/NominaPercepcionDirectProperties"},{"$ref":"#/components/schemas/NominaPercepcionNestedInput"}]},"NominaPercepcionDirectProperties":{"type":"object","properties":{"tipo_percepcion":{"type":"string","description":"Key from the catalog [Type of earnings](#tipo-de-percepcion)."},"concepto":{"type":"string","description":"Earnings concept. If not sent, the description of the earnings type catalog will be used."},"clave":{"type":"string","minLength":3,"maxLength":15,"description":"Internal control key assigned by the employer to each payroll earning specific to its accounting."},"importe_gravado":{"type":"number","description":"Taxable amount for the concept indicated in the type of earnings."},"importe_exento":{"type":"number","description":"Exempt amount for the concept indicated in the type of earnings."}}},"NominaPercepcionNestedInput":{"type":"object","properties":{"acciones_o_titulos":{"$ref":"#/components/schemas/NominaAccionesInput"},"horas_extra":{"type":"array","description":"Array of objects to express applicable extra hours. Required when the type of earnings is \\"019\\" (Extra hours).","items":{"$ref":"#/components/schemas/NominaHorasExtraInput"}}}},"NominaPercepcionNestedProperties":{"type":"object","properties":{"acciones_o_titulos":{"$ref":"#/components/schemas/NominaAccionesProperties"},"horas_extra":{"type":"array","description":"Array of objects to express applicable extra hours. Required when the type of earnings is \\"019\\" (Extra hours).","items":{"$ref":"#/components/schemas/NominaHorasExtraProperties"}}}},"NominaHorasExtraInput":{"title":"HorasExtra","allOf":[{"type":"object","required":["dias","tipo_horas","horas_extra","importe_pagado"]},{"$ref":"#/components/schemas/NominaHorasExtraProperties"}]},"NominaHorasExtraProperties":{"type":"object","title":"HorasExtra","properties":{"dias":{"type":"integer","description":"Number of days the worker worked extra hours in addition to their normal working day."},"tipo_horas":{"type":"string","description":"Key from the catalog [Type of Hours](#tipo-de-Horas)."},"horas_extra":{"type":"integer","description":"Number of extra hours worked in the period."},"importe_pagado":{"type":"number","description":"Amount paid for extra hours."}}},"NominaAccionesInput":{"title":"Accion","allOf":[{"type":"object","required":["valor_mercado","precio_al_otorgarse"]},{"$ref":"#/components/schemas/NominaAccionesProperties"}]},"NominaAccionesProperties":{"type":"object","title":"Accion","description":"Object to express earnings from shares or securities representing goods. It is required when there are earnings from salaries derived from the acquisition of shares or securities.","properties":{"valor_mercado":{"type":"number","description":"Market value of the shares or securities when the option is exercised."},"precio_al_otorgarse":{"type":"number","description":"Price established when the option of income in shares or securities is granted."}}},"NominaReceptorProperties":{"type":"object","title":"Receptor","description":"Worker information.","allOf":[{"$ref":"#/components/schemas/NominaReceptorDirectProperties"},{"$ref":"#/components/schemas/NominaReceptorNestedProperties"}]},"NominaReceptorInput":{"type":"object","title":"Receptor","description":"Worker information.","allOf":[{"type":"object","required":["curp","tipo_contrato","tipo_regimen","num_empleado","periodicidad_pago","clave_ent_fed"]},{"$ref":"#/components/schemas/NominaReceptorDirectProperties"},{"$ref":"#/components/schemas/NominaReceptorNestedInput"}]},"NominaReceptorDirectProperties":{"type":"object","properties":{"curp":{"type":"string","description":"Worker\'s CURP (Clave \xdanica de Registro de Poblaci\xf3n) (Unique Population Registry Code)."},"num_seguridad_social":{"type":"string","description":"Social security number."},"fecha_inicio_rel_laboral":{"type":"string","format":"date","description":"Start date of the employment relationship between the employer and\\nthe employee.\\n"},"antiguedad":{"oneOf":[{"type":"string"},{"type":"boolean"}],"default":true,"description":"Employee\'s seniority in the format specified by the SAT. If a\\n`string` is sent, it is expected to contain the seniority in the\\nformat specified by the SAT. If the boolean value `false` is sent,\\nthis field will not be included in the invoice. If the boolean\\nvalue `true` and `fecha_inicio_rel_laboral` exist, this value will\\nbe calculated with the difference between the start date of the\\nemployment relationship and the payment date.\\n"},"tipo_contrato":{"type":"string","description":"Key from the catalog [Type of Contract](#tipo-de-contrato)."},"sindicalizado":{"type":"boolean","default":false,"description":"Indicates if the worker is associated with a union."},"tipo_jornada":{"type":"string","description":"Key from the catalog [Type of Workday](#tipo-de-jornada)."},"tipo_regimen":{"type":"string","description":"Key from the catalog [Type of Regime](#r\xe9gimen-fiscal)."},"num_empleado":{"type":"string","minLength":1,"maxLength":15,"description":"Internal employee number assigned by the employer."},"departamento":{"type":"string","description":"Name of the department or area to which the worker belongs."},"puesto":{"type":"string","description":"Name of the position assigned to the employee or the name of the activity they perform."},"riesgo_puesto":{"type":"string","description":"Key from the SAT catalog [Job Risk](#riesgo-del-puesto)."},"periodicidad_pago":{"type":"string","description":"Key from the SAT catalog [Payment Periodicity](#periodicidad-del-pago)."},"banco":{"type":"string","description":"Key from the SAT catalog \\"Bancos\\" that you can consult using our [search tool](https://dashboard.facturapi.io/catalogs/bank)."},"cuenta_bancaria":{"type":"string","description":"Bank account number (11 characters) or cell phone number (10 characters) or card number (15 or 16 characters) or CLABE (18 characters) or electronic wallet number where the payroll deposit is made.\\n"},"salario_base_cot_apor":{"type":"number","description":"Amount of the cash remuneration for daily quota, bonuses, perceptions, food, housing, premiums, commissions, benefits in kind, etc."},"salario_diario_integrado":{"type":"number","description":"Salary that is integrated with payments made in cash for daily quota, bonuses, perceptions, housing, premiums, commissions, benefits in kind, and any other amount or benefit that is delivered to the worker for their work."},"clave_ent_fed":{"type":"string","description":"Key of the federal entity (state) where the worker provided their services to the employer, which you can consult using our [search tool](https://dashboard.facturapi.io/catalogs/state)."}}},"NominaReceptorNestedProperties":{"type":"object","properties":{"sub_contratacion":{"type":"array","description":"Array of objects to express information about the company that benefits from the employee\'s work, in cases where the issuer provides subcontracting services.","items":{"$ref":"#/components/schemas/NominaSubContratacionProperties"}}}},"NominaReceptorNestedInput":{"type":"object","properties":{"sub_contratacion":{"type":"array","description":"Array of objects to express information about the company that benefits from the employee\'s work, in cases where the issuer provides subcontracting services.","items":{"allOf":[{"$ref":"#/components/schemas/NominaSubContratacionRequiredProperties"},{"$ref":"#/components/schemas/NominaSubContratacionProperties"}]}}}},"NominaSubContratacionRequiredProperties":{"type":"object","required":["rfc_labora","porcentaje_tiempo"]},"NominaSubContratacionProperties":{"type":"object","properties":{"rfc_labora":{"type":"string","description":"RFC of the person or company that subcontracted, that is, the person or company where the worker directly provided their services."},"porcentaje_tiempo":{"type":"number","minimum":0.001,"maximum":100,"description":"Percentage of time the worker provided their services to the person or company that subcontracted them."}}},"NominaEmisorProperties":{"type":"object","title":"Emisor","description":"Information of the issuer, if required.","properties":{"curp":{"type":"string","minLength":18,"maxLength":18,"description":"Required when the employer is a natural person. CURP of the employer."},"registro_patronal":{"type":"string","description":"Employer\'s registration key assigned by the social security institution to the employer."},"rfc_patron_origen":{"minLength":12,"maxLength":13,"type":"string","description":"RFC of the person who acted as the employer. It is used when the payment is made through a third party."},"entidad_sncf":{"type":"object","description":"Information for entities adhered to the National System of Fiscal Coordination to identify the origin of the resources.","properties":{"origen_recurso":{"type":"string","enum":["IP","IF","IM"],"description":"Key of the origin of the resource.\\n\\n- `\u201CIP\u201D`: Ingresos Propios (Own income)\\n- `\u201CIF\u201D`: Ingresos Federales (Federal income)\\n- `\u201CIM\u201D`: Ingresos mixtos (Mixed income)\\n"},"monto_recurso_propio":{"type":"number","description":"Amount of own resources. Required when the resource origin is mixed income.\\n"}}}}},"PagoOrCustomComplementProperties":{"title":"Complement","type":"object","discriminator":{"propertyName":"type","mapping":{"pago":"#/components/schemas/PagoComplementProperties","custom":"#/components/schemas/CustomComplementProperties"}},"properties":{"type":{"type":"string","enum":["pago","custom"],"description":"Type of complement"}}},"PagoOrCustomComplementInput":{"type":"object","title":"Complement","discriminator":{"propertyName":"type","mapping":{"pago":"#/components/schemas/PagoComplementInput","custom":"#/components/schemas/CustomComplementInput"}},"required":["type","data"],"properties":{"type":{"type":"string","enum":["nomina","custom"],"description":"Type of complement"}}},"PagoComplementProperties":{"allOf":[{"$ref":"#/components/schemas/NominaOrCustomComplementProperties"},{"type":"object","properties":{"data":{"$ref":"#/components/schemas/NominaComplementDataProperties"}}}]},"PagoComplementInput":{"allOf":[{"$ref":"#/components/schemas/PagoOrCustomComplementInput"},{"type":"object","properties":{"data":{"$ref":"#/components/schemas/PagoComplementDataInput"}}}]},"PagoComplementDataInput":{"type":"array","title":"PagoComplementData","description":"Payments to include in this document. The most common is to include only one payment. A case in which more than one must be added is when the payment is made with 2 different payment methods; for example, when one part is paid by card and the other in cash.","items":{"$ref":"#/components/schemas/PaymentInput"}},"NominaOrCustomComplementProperties":{"title":"Complement","type":"object","discriminator":{"propertyName":"type","mapping":{"nomina":"#/components/schemas/NominaComplementProperties","custom":"#/components/schemas/CustomComplementProperties"}},"properties":{"type":{"type":"string","enum":["nomina","custom"],"description":"Type of complement"}}},"NominaOrCustomComplementInput":{"type":"object","title":"Complement","discriminator":{"propertyName":"type","mapping":{"nomina":"#/components/schemas/NominaComplementInput","custom":"#/components/schemas/CustomComplementInput"}},"required":["type","data"],"properties":{"type":{"type":"string","enum":["nomina","custom"],"description":"Type of complement"}}},"NominaComplementProperties":{"allOf":[{"$ref":"#/components/schemas/NominaOrCustomComplementProperties"},{"type":"object","properties":{"data":{"$ref":"#/components/schemas/NominaComplementDataProperties"}}}]},"NominaComplementInput":{"allOf":[{"$ref":"#/components/schemas/NominaOrCustomComplementInput"},{"type":"object","properties":{"data":{"$ref":"#/components/schemas/NominaComplementDataInput"}}}]},"NamespaceRequiredProperties":{"type":"object","required":["prefix","uri","schema_location"]},"NamespaceProperties":{"type":"object","title":"Namespace","properties":{"prefix":{"type":"string","description":"Prefix or name of the namespace.","example":"iedu"},"uri":{"type":"string","format":"url","description":"URL associated with the namespace.","example":"http://www.sat.gob.mx/iedu"},"schema_location":{"type":"string","format":"url","example":"http://www.sat.gob.mx/sitio_interet/cfd/iedu/iedu.xsd","description":"URL of the XSD validation schema."}}},"CommonAddressProperties":{"type":"object","properties":{"street":{"type":"string","description":"Street name","example":"Blvd. Atardecer"},"exterior":{"type":"string","description":"Exterior number.","example":142},"interior":{"type":"string","description":"Interior number.","example":4},"neighborhood":{"type":"string","description":"Neighborhood","example":"Centro"},"city":{"type":"string","description":"City","example":"Huatabampo"},"municipality":{"type":"string","description":"Municipality or delegation","example":"Huatabampo"},"zip":{"type":"string","description":"Postal code","example":86500}}},"Webhook":{"title":"Webhook object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/WebhookProperties"}]},"WebhookSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Webhook"}}}}]},"WebhookProperties":{"properties":{"organization":{"type":"string","description":"ID of the organization for which the webhook is being created.\\n"},"livemode":{"type":"boolean","example":false,"description":"Environment in which the webhook is being created."},"enabled_events":{"type":"string","example":["receipt.cancellation_status"],"description":"Events enabled for the webhook to listen to."},"url":{"type":"string","format":"email","description":"Full URL of the webhook listener.","example":"http://my-website.com/my/webhook"},"status":{"type":"string","description":"Status of the webhook.","enum":["enabled","disabled"],"example":"enabled"}}},"WebhookCreateInput":{"title":"Webhook","allOf":[{"type":"object","required":["enabled_events","url"],"properties":{"url":{"type":"string","description":"Full URL of the webhook listener.","example":"http://webhook_api.com"},"enabled_events":{"type":"array","items":{"type":"string","enum":["invoice.global_invoice_created","invoice.status_updated","invoice.cancellation_status_updated","invoice.created_from_dashboard","receipt.self_invoice_complete","receipt.status_updated","receipt.cancellation_status_updated"]},"description":"Events enabled for the webhook to listen to.","example":["receipt.self_invoice_complete"]}}}]},"WebhookCreateEdit":{"title":"Webhook","allOf":[{"type":"object","required":["enabled_events"],"properties":{"status":{"type":"string","description":"Status of the webhook.","enum":["disabled","enabled"],"example":"disabled"},"enabled_events":{"type":"array","items":{"type":"string","enum":["invoice.global_invoice_created","invoice.status_updated","invoice.cancellation_status_updated","receipt.self_invoice_complete","receipt.status_updated","receipt.cancellation_status_updated"]},"description":"Events enabled for the webhook to listen to.","example":["receipt.self_invoice_complete"]}}}]},"Customer":{"title":"Customer object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/CustomerNonEditableProperties"},{"$ref":"#/components/schemas/CustomerProperties"}]},"CustomerNonEditableProperties":{"type":"object","properties":{"edit_link":{"type":"string","description":"Link to a hosted page where the customer can edit their information once.","example":"https://auto.facturapi.io/tax-info/abcdWXYZ1234"},"edit_link_expires_at":{"type":"string","format":"date-time","description":"Expiration date of the edit link.","example":"2022-12-31T23:59:59Z"},"sat_validated_at":{"type":"string","format":"date-time","description":"Date when the customer\'s tax information was validated by the SAT.","example":"2022-12-31T23:59:59Z"}}},"CustomerSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Customer"}}}}]},"CustomerProperties":{"allOf":[{"$ref":"#/components/schemas/CustomerCommonProperties"},{"type":"object","properties":{"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"Fiscal address.","properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), it contains the name of the State or Federative Entity. For foreigners, it contains the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"},"country":{"type":"string","description":"Country code according to the standard [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3), from the [Country Catalog](https://dashboard.facturapi.io/catalogs/country).","example":"MEX","default":"MEX"}}}]}}}]},"CustomerCommonProperties":{"type":"object","properties":{"legal_name":{"type":"string","description":"Legal name or business name of the customer. *without* the corporate regime (e.g.: S.A. de C.V.).\\n","example":"Dunder Mifflin"},"tax_id":{"type":"string","example":"ABC101010111","description":"In Mexican clients, it contains the customer\'s RFC. For foreigners, it is optional and represents the tax identification number, that is, the equivalent to the RFC in the customer\'s country.\\n"},"tax_system":{"type":"string","example":"601","maxLength":3,"minLength":3,"description":"Required for national clients. Key of the customer\'s tax regime, from the [Tax Regime Catalog](#tax-regime).\\n"},"email":{"type":"string","format":"email","description":"Email address to which to send the generated invoices.","example":"email@example.com"},"phone":{"type":"string","description":"Customer\'s phone number.","example":6474010101},"default_invoice_use":{"type":"string","description":"Default CFDI use for the customer.","example":"G01"}}},"CustomerCreateInput":{"title":"Customer","allOf":[{"$ref":"#/components/schemas/CustomerCommonProperties"},{"type":"object","required":["legal_name","tax_id","tax_system","address"],"properties":{"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"Fiscal address.","required":["zip"],"properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), it contains the name of the State or Federative Entity. For foreigners, it contains the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"},"country":{"type":"string","description":"Country code according to the standard [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3), from the [Country Catalog](https://dashboard.facturapi.io/catalogs/country).","example":"MEX","default":"MEX"}}}]}}}]},"LineItemProductInput":{"title":"Product","allOf":[{"$ref":"#/components/schemas/ProductProperties"}]},"LineItemProductEgresoInput":{"title":"Product","allOf":[{"$ref":"#/components/schemas/ProductEgresoProperties"}]},"LineItemTrasladoProductInput":{"title":"Product","required":["description"],"type":"object","properties":{"description":{"type":"string","description":"Description of the good or service as it will appear on the invoice.","example":"Ukelele"},"product_key":{"type":"string","description":"Key from the SAT catalog of products/services. We provide a more convenient way to find it using our [key search tool](https://dashboard.facturapi.io/catalogs/productKey).","example":60131324},"unit_key":{"type":"string","default":"H87","description":"Unit of measure key, from the SAT catalog. The default value `\\"H87\\"` (element) is the key to represent a piece or sales unit (pencil, notebook, television, etc).\\n\\nIf the unit of your product is kilograms, liters, hours, or any other unit, we provide a convenient way to find the key using our [key search tool](https://dashboard.facturapi.io/catalogs/unit).\\n"},"unit_name":{"type":"string","default":"Elemento","description":"Name of the unit of measure that expresses the quantity. It must be related to the unit key `unit_key`.\\n"},"sku":{"type":"string","description":"Internal identifier designated by the company. It can have any value."}}},"LineItemProduct":{"allOf":[{"type":"object","properties":{"id":{"type":"string","description":"ID of the base product. Only present if a previously saved `Product` object was used as a base.","example":"58e93bd8e86eb318b0197454"}}},{"$ref":"#/components/schemas/ProductProperties"}]},"Parts":{"type":"object","properties":{"description":{"type":"string","description":"Description of the product or service."},"product_key":{"type":"string","description":"Key from the SAT catalog of products/services. We provide a more convenient way to find it using our [key search tool](https://dashboard.facturapi.io/catalogs/productKey)."},"quantity":{"type":"number","description":"Quantity of the product or service. It must be greater than 0.","example":1},"sku":{"type":"string","description":"Internal identifier designated by the company. It can have any value."},"unit_price":{"type":"number","description":"Unit price. This value will represent the price with or without VAT, depending on the value of `tax_included`."},"unit_name":{"type":"string","description":"Name of the unit of measure used to express the quantity. It must be related to the unit key `unit_key`."},"customs_keys":{"type":"array","items":{"type":"string"},"description":"Customs entry number (pedimento aduanal) associated with this part."}}},"PartInput":{"allOf":[{"type":"object","required":["description","product_key"]},{"$ref":"#/components/schemas/Parts"}]},"Product":{"title":"Product object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/ProductProperties"}]},"ProductSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Product"}}}}]},"ProductProperties":{"type":"object","required":["description","product_key","unit_key","price"],"properties":{"description":{"type":"string","description":"Description of the good or service as it will appear on the invoice.","example":"Ukelele"},"product_key":{"type":"string","description":"Key from the SAT catalog of products/services. We provide a more convenient way to find it using our [key search tool](https://dashboard.facturapi.io/catalogs/productKey).","example":60131324},"price":{"type":"number","description":"Price per unit of the good or service. This value will represent the price with or without VAT, depending on the value of `tax_included`.\\n","example":345.6},"tax_included":{"type":"boolean","default":true,"description":"- `true`: Indicates that all applicable taxes are included in the price (price attribute) and will be automatically broken down when the invoice is issued.\\n- `false`: Indicates that the price attribute does not include taxes, so those taxes to be applied will be added to the final price.\\n"},"taxability":{"type":"string","default":"`\\"01\\"` if the `taxes` array is empty; `\\"02\\"` if the `taxes` array has at least one element.\\n","enum":["01","02","03","04","05","06","07","08"],"description":"Code that represents whether the good or service is subject to tax or not. This attribute corresponds to the \\"ObjetoImp\\" field in the CFDI.\\n\\n- `01`: Not subject to tax.\\n- `02`: Subject to tax.\\n- `03`: Subject to tax, but not required to break down.\\n- `04`: Subject to tax, but does not cause tax.\\n- `05`: Subject to tax, VAT credit PODEBI.\\n- `06`: Subect to tax IVA, but not IVA transferred.\\n- `07`: Not Subject to tax IVA, but required IEPS breakdown.\\n- `08`: Not Subject to tax IVA, and not required IEPS breakdown.\\n"},"taxes":{"type":"array","default":"IVA (VAT) transferred 16%","example":[{"type":"IVA","rate":0.16}],"description":"List of taxes that must be applied to this product. If the parameter is omitted or null, it will be saved with an element representing the transferred IVA (VAT) of 16%, which is the most common tax. If an empty array is explicitly sent, it is understood that the product is exempt from taxes.\\n","items":{"$ref":"#/components/schemas/BaseTax"}},"local_taxes":{"type":"array","description":"Array of local taxes (state or municipal), if any.","default":[],"items":{"$ref":"#/components/schemas/LocalTax"}},"unit_key":{"type":"string","default":"H87","description":"Key of the unit of measure, from the SAT catalog. The default value `\\"H87\\"` (element) is the key to represent a piece or sales unit (pencil, notebook, television, etc).\\n\\nIf the unit of your product is kilograms, liters, hours, or any other unit, we provide a convenient way to find the key using our [key search tool](https://dashboard.facturapi.io/catalogs/unit).\\n"},"unit_name":{"type":"string","default":"Elemento","description":"Name of the unit of measure used to express the quantity. It must be related to the unit key `unit_key`."},"sku":{"type":"string","description":"Internal identifier designated by the company. It can have any value."}}},"ProductEgresoProperties":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation in a single description. Each of the\\nproducts that contemplate the discount, return, or bonus applied\\nand that the related invoices contain must be mentioned. If the\\nexpense is based on a percentage (such as applying a 30% discount),\\nthat percentage must be included in the description along with the\\nname of the corresponding product.\\n","example":"Ukelele"},"product_key":{"type":"string","default":84111506,"description":"Key from the SAT catalog of products/services. We provide a more\\nconvenient way to find it using our [key search tool](https://dashboard.facturapi.io/catalogs/productKey).\\n","example":84111506},"price":{"type":"number","description":"Total amount of the quantity returned, discounted, or bonified.\\n","example":345.6},"tax_included":{"type":"boolean","default":true,"description":"- `true`: Indicates that all applicable taxes are included in the price (price attribute) and will be automatically broken down when the invoice is issued.\\n- `false`: Indicates that the price attribute does not include taxes, so those taxes to be applied will be added to the final price.\\n"},"taxability":{"type":"string","default":"02","enum":["01","02","03","04","05"],"description":"Code that represents whether the good or service is subject to tax or not. This attribute corresponds to the \\"ObjetoImp\\" field in the CFDI.\\n\\n- `01`: Not subject to tax.\\n- `02`: Subject to tax.\\n- `03`: Subject to tax, but not required to break down.\\n- `04`: Subject to tax, but does not cause tax.\\n- `05`: Subject to tax, VAT credit PODEBI.\\n"},"taxes":{"type":"array","default":"IVA (VAT) transferred 16%","description":"List of taxes that must be applied to this product. If the parameter is omitted or null, it will be saved with an element representing the transferred IVA (VAT) of 16%, which is the most common tax. If an empty array is explicitly sent, it is understood that the product is exempt from taxes.\\n","items":{"$ref":"#/components/schemas/BaseTax"}},"local_taxes":{"type":"array","description":"Array of local taxes (state or municipal), if any.","default":[],"items":{"$ref":"#/components/schemas/LocalTax"}},"unit_key":{"type":"string","default":"ACT","description":"Key of the unit of measure, from the SAT catalog. The default value `\\"ACT\\"` (activity) is the key to represent a generic activity.\\nCheck out all the available keys in our [unit search tool](https://dashboard.facturapi.io/catalogs/unit).\\n"},"unit_name":{"type":"string","default":"Actividad","description":"Name of the unit of measure used to express the quantity. It must be related to the unit key `unit_key`."}},"required":["description","price"]},"PaymentInput":{"title":"Payment","required":["payment_form","related_documents"],"type":"object","properties":{"payment_form":{"type":"string","example":"03","description":"Payment method code according to the [SAT catalog](#payment-method). You can also use the `PaymentForm` constant included in our libraries."},"related_documents":{"type":"array","description":"Array that includes an element for each related income document to this payment. The most common is that the payment is related to only one income document. A case in which more than one element is added is when a single deposit is received that covers the payment of 2 related invoices. Instead of issuing a payment receipt for each invoice, you must issue only one relating the 2 documents.\\n","items":{"type":"object","required":["uuid","amount","taxes","installment","last_balance"],"properties":{"uuid":{"type":"string","format":"uuid","description":"Fiscal folio or UUID of the related income document.\\n"},"amount":{"type":"number","description":"Amount of the payment corresponding to the related document,\\nusing the payment method indicated in this element of the\\npayment array. This value must be expressed in the currency\\ndefined in `related_documents[].currency`.\\n"},"taxes":{"type":"array","description":"Array with taxes of the related document that apply to the\\npayment made.\\n","items":{"type":"object","required":["base","type","rate"],"properties":{"base":{"type":"number","description":"Base amount used for the tax calculation.\\n"},"type":{"type":"string","enum":["IVA","ISR","IEPS"],"description":"Type of tax.\\n"},"rate":{"type":"number","example":0.16,"description":"Rate of the tax. If the tax is a rate, this value\\nmust be expressed as a decimal fraction percentage. If\\nthe tax is a fixed amount, this value represents the\\namount of the tax.\\n"},"factor":{"type":"string","default":"Tasa","enum":["Tasa","Cuota","Exento"],"description":"Factor type.\\n\\n- `Tasa`: Rate\\n- `Cuota`: Fixed amount\\n- `Exento`: Exempt\\n"},"withholding":{"type":"boolean","default":false,"description":"Indicates if the tax is a withholding (`true`) or a transfer (`false`)."}}}},"taxability":{"type":"string","default":"\\"01\\" if the `taxes` array is empty; \\"02\\" if the `taxes` array has at least one element.\\n","enum":["01","02","03","04","05"],"description":"Code representing whether the good or service is subject to tax or not. This attribute corresponds to the \\"ObjetoImp\\" field in the CFDI.\\n\\n- `01`: Not subject to tax.\\n- `02`: Subject to tax.\\n- `03`: Subject to tax, but not required to break down.\\n- `04`: Subject to tax, but does not cause tax.\\n- `05`: Subject to tax, VAT credit PODEBI.\\n"},"installment":{"type":"integer","description":"Installment number of the payment.\\n"},"last_balance":{"type":"number","description":"Amount that was pending before receiving this payment. This value must be expressed in the currency defined in `related_documents[].currency`.\\n"},"currency":{"type":"string","minLength":3,"maxLength":3,"default":"MXN","description":"Code of the currency used in the related document. If the currency used in the related document is not the national currency (MXN), its value must be specified according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\\n"},"exchange":{"type":"number","description":"Required when the currency of the related document is different\\nfrom the payment currency. Exchange rate between the two\\ncurrencies at the time of payment. Example: The related income\\ninvoice is registered in USD, while the current payment is made\\nin MXN, this attribute should be registered as `0.45` (USD/MXN).\\n"},"folio_number":{"type":"integer","description":"Optional. You can include the folio number of the related document.\\n"},"series":{"type":"string","description":"Optional. You can include the series of the related document.\\n"}}}},"currency":{"type":"string","minLength":3,"maxLength":3,"default":"MXN","description":"Code of the currency used in the payment. If the currency used in the payment is not the national currency (MXN), its value must be specified according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\\n"},"exchange":{"type":"number","default":1,"description":"Exchange rate of the currency used in the payment. It represents\\nthe number of Mexican pesos equivalent to one unit of the currency\\nindicated in the `currency` attribute.\\n"},"date":{"type":"string","format":"date-time","default":"now","description":"Date on which the payment was received. It is only necessary to include it if the payment was made on a date prior to the issuance of this document. Future dates are not allowed."},"numOperacion":{"type":"string","description":"Number of the check, authorization, reference, SPEI tracking key, capture line, or any reference number that allows identifying the operation corresponding to the payment made.\\n"},"rfcEmisorCtaOrd":{"type":"string","description":"RFC of the entity issuing the source account, that is, the operator, bank, financial institution, issuer of electronic wallet, etc."},"nomBancoOrdExt":{"type":"string","description":"Name of the ordering bank."},"ctaOrdenante":{"type":"string","description":"Bank account number used to make the payment."},"rfcEmisorCtaBen":{"type":"string","description":"RFC of the entity of the destination operating account, that is, the operator, bank, financial institution, issuer of electronic wallet, etc."},"ctaBeneficiario":{"type":"string","description":"Bank account number where the payment was received."},"tipoCadPago":{"type":"string","enum":[1],"description":"Key of the type of payment chain generated by the receiving entity of the payment.\\nIf this field exists, it is mandatory to register the `certPago`, `cadPago`, and `selloPago` fields.\\n"},"certPago":{"type":"string","format":"base64","description":"Certificate that corresponds to the payment, expressed as a text string in base 64 format.\\n"},"cadPago":{"type":"string","description":"Original string (cadena original) of the payment receipt generated by the entity issuing the beneficiary account.\\n"},"selloPago":{"type":"string","format":"base64","description":"Digital seal associated with the payment expressed as a text string in base 64 format.\\n"}}},"CuustomerInfo":{"type":"object","description":"Object with partial information of the customer receiving the document. To obtain the complete `Customer` object, you must consult it with the [Retrieve Customer](\'#/operation/getCustomer\') method.\\n","properties":{"id":{"type":"string","description":"ID of the `customer` object related to the invoice, in case it has not been deleted.","example":"58e93bd8e86eb318b0197456"},"legal_name":{"type":"string","description":"Legal name or business name of the customer. *without* the corporate regime (e.g.: S.A. de C.V.).\\n","example":"Dunder Mifflin"},"tax_id":{"type":"string","description":"In Mexican clients, it contains the customer\'s RFC. For foreigners, it is optional and represents the tax identification number, that is, the equivalent to the RFC in the customer\'s country.\\n","example":"ABC101010111"},"address":{"type":"object","properties":{"country":{"type":"string","format":"ISO 3166-1 alpha-3","description":"Country code according to the standard [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).","example":"MEX"}}}}},"RelatedDocumentInput":{"allOf":[{"type":"object","required":["relationship","related"]},{"$ref":"#/components/schemas/RelatedDocument"}]},"RelatedDocument":{"type":"object","properties":{"relationship":{"type":"string","description":"Relationship key from the SAT catalog (which you can consult in [this table](#relacion-entre-facturas)). It is required when the `related_documents` parameter is sent.\\n"},"documents":{"type":"array","default":[],"items":{"type":"string"},"description":"Fiscal folios (UUID) of related invoices."}}},"Invoice":{"title":"Invoice object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/InvoiceProperties"}]},"InvoiceDraft":{"title":"Invoice object with draft status","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/InvoiceDraftProperties"}]},"InvoiceSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Invoice"}}}}]},"InvoiceRequiredProperties":{"type":"object","required":["description","invoice_key","price"]},"InvoiceProperties":{"type":"object","properties":{"status":{"type":"string","enum":["pending","valid","canceled","draft"],"description":"Current status of the invoice.\\n","example":"valid"},"cancellation_status":{"type":"string","enum":["none","pending","accepted","rejected","expired"],"description":"Current status of the cancellation request, if it has been made. You can read more in the [Cancel Invoice](#tag/invoice/operation/deleteInvoice) section.\\n","example":"none"},"verification_url":{"type":"string","format":"uri","description":"URL to verify the status of the CFDI on the SAT portal. This link is the same as the one that appears in the QR code on the invoice PDF.","example":"https://verificacfdi.facturaelectronica.sat.gob.mx/default.aspx?id=45BEC0CA-5F1E-491E-9417-698EA48C382A&re=AAA010101AAA&rr=ABC101010111&tt=345.600000&fe=bWApPw=="},"date":{"type":"string","format":"date-time","default":"now","description":"Date of issuance of the invoice in ISO8601 format (UTC String).\\n"},"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"Address where the invoice was issued.","properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), it contains the name of the State or Federative Entity. For foreigners, it contains the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"}}}]},"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"customer":{"$ref":"#/components/schemas/CuustomerInfo"},"total":{"type":"number","description":"Total amount invoiced.","example":10944.82},"uuid":{"type":"string","format":"uuid","description":"Fiscal folio of the invoice, assigned by the SAT.","example":"39c85a3f-275b-4341-b259-e8971d9f8a94"},"folio_number":{"type":"integer","description":"Autoincremental folio number for internal control and without fiscal relevance.","example":914},"series":{"type":"string","description":"Series. Alphanumeric characters designated by the company for internal control and without fiscal relevance. In the PDF, it is printed next to the folio number.","example":"F"},"external_id":{"type":"string","description":"Identifier that you can use to relate this invoice to your records to later search by this number."},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document."},"payment_form":{"type":"string","description":"Payment form code according to the [Payment Form catalog](#payment-form).","example":6},"is_ready_to_stamp":{"type":"boolean","description":"This field is automatically assigned by Facturapi. It indicates if an invoice\\nwith status `draft` is complete and ready to be stamped. If the value is `true`, you can\\ntry to stamp the invoice with the [Stamp Invoice](\'#/operation/stampInvoice\') method.\\nIf the value is `false`, you must use the [Update Invoice](\'#/operation/updateDraftInvoice\')\\nmethod to complete the missing fields.\\n\\nIn an invoice with a status other than `draft`, this field will always be `false`.\\n"},"items":{"type":"array","description":"Concepts included in the document.","items":{"$ref":"#/components/schemas/LineItem"}},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocument"}},"received_payment_ids":{"type":"array","items":{"type":"string"},"description":"On invoices with type I (Income) and payment method PPD, this field lists the\\nobject IDs of the payment invoices whose related documents array includes the UUID\\nof this invoice. This field is filled in by Facturapi the moment the payment invoice\\n(type P) is created or imported, as long as it belongs to the same organization.\\n","default":[]},"target_invoice_ids":{"type":"array","items":{"type":"string"},"description":"On invoices with type P (Payment), this array lists the object IDs of the invoices listed in\\nthe related documents array. This field is filled in by Facturapi as long as the\\nrelated invoice is also registered in Facturapi and belongs to the same organization.\\n","default":[]},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","minimum":0,"example":1,"description":"Exchange rate for the currency used. It represents the number of Mexican pesos (MXN) equivalent to one unit of the currency indicated in the `currency` attribute."},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/NominaOrCustomComplementProperties"},"description":"Complements to include in the invoice."},"pdf_custom_section":{"type":"string","format":"html","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content."},"addenda":{"type":"string","format":"xml","description":"XML code with the Addenda that needs to be added to the invoice."},"namespaces":{"type":"array","description":"Namespaces to insert in the root node of the invoice. Required for `addenda`.","items":{"$ref":"#/components/schemas/NamespaceProperties"}},"stamp":{"$ref":"#/components/schemas/Stamp"}}},"InvoiceDraftProperties":{"type":"object","properties":{"status":{"type":"string","enum":["pending","valid","canceled","draft"],"description":"Current status of the invoice.\\n","example":"draft"},"cancellation_status":{"type":"string","enum":["none","pending","accepted","rejected","expired"],"description":"Current status of the cancellation request, if it has been made. You can read more in the [Cancel Invoice](#tag/invoice/operation/deleteInvoice) section.\\n","example":"none"},"verification_url":{"type":"string","format":"uri","description":"URL to verify the status of the CFDI on the SAT portal. This link is the same as the one that appears in the QR code on the invoice PDF.","example":null},"date":{"type":"string","format":"date-time","example":null,"description":"Date of issuance of the invoice in ISO8601 format (UTC String). If the status is `draft`, this field is null.\\n"},"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"Address where the invoice was issued.","properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), it contains the name of the State or Federative Entity. For foreigners, it contains the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"}}}]},"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"customer":{"$ref":"#/components/schemas/CuustomerInfo"},"total":{"type":"number","description":"Total amount invoiced.","example":0},"uuid":{"type":"string","format":"uuid","description":"Fiscal folio of the invoice, assigned by the SAT. If the invoice has not been stamped, this field is null.","example":0},"folio_number":{"type":"integer","description":"Autoincremental folio number for internal control and without fiscal relevance.","example":914},"series":{"type":"string","description":"Series. Alphanumeric characters designated by the company for internal control and without fiscal relevance. In the PDF, it is printed next to the folio number.","example":"F"},"external_id":{"type":"string","description":"Identifier that you can use to relate this invoice to your records to later search by this number."},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document."},"payment_form":{"type":"string","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago).","example":6},"items":{"type":"array","description":"Concepts included in the document.","items":{"$ref":"#/components/schemas/LineItem"}},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocument"}},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","minimum":0,"example":1,"description":"Exchange rate for the currency used. It represents the number of Mexican pesos (MXN) equivalent to one unit of the currency indicated in the `currency` attribute."},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/NominaOrCustomComplementProperties"},"description":"Complements to include in the invoice."},"pdf_custom_section":{"type":"string","format":"html","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content."},"addenda":{"type":"string","format":"xml","description":"XML code with the Addenda that needs to be added to the invoice."},"namespaces":{"type":"array","description":"Namespaces to insert in the root node of the invoice. Required for `addenda`.","items":{"$ref":"#/components/schemas/NamespaceProperties"}},"is_ready_to_stamp":{"type":"boolean","description":"This field is automatically assigned by Facturapi. It indicates if an invoice\\nwith status `draft` is complete and ready to be stamped. If the value is `true`, you can\\ntry to stamp the invoice with the [Stamp Invoice](\'#/operation/stampInvoice\') method.\\nIf the value is `false`, you must use the [Update Invoice](\'#/operation/updateDraftInvoice\')\\nmethod to complete the missing fields.\\n\\nIn an invoice with a status other than `draft`, this field will always be `false`.\\n"},"stamp":{"allOf":[{"$ref":"#/components/schemas/Stamp"},{"type":"object","example":null}]}}},"InvoiceableCommonInput":{"type":"object","properties":{"folio_number":{"type":"integer","default":"autoincremental","description":"Number of folio assigned by the company for internal control. If omitted, the autoincremental value of the organization will be assigned.\\n"},"series":{"type":"string","maxLength":25,"description":"Series. Aplanumeric characters designated by the company for internal control and without fiscal relevance."},"pdf_custom_section":{"type":"string","format":"xml","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content.\\n\\nFor security reasons, the code you can send is limited to the following tags: `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `div`, `p`, `span`, `small`, `br`, `b`, `i`, `ul`, `ol`, `li`, `strong`, `table`, `thead`, `tbody`, `tfoot`, `tr`, `th`, and `td`. Attributes and styles are not allowed.\\n"},"addenda":{"type":"string","format":"xml","description":"XML code with the Addenda that needs to be added to the invoice."},"namespaces":{"type":"array","default":[],"description":"If you included the `complements` parameter, this field is optional; however, if you included the `addenda` parameter, you must send the necessary information to include these namespaces in the XML document.\\n","items":{"allOf":[{"$ref":"#/components/schemas/NamespaceRequiredProperties"},{"$ref":"#/components/schemas/NamespaceProperties"}]}},"pdf_options":{"type":"object","description":"Configure which optional fields you want to show in the PDF. The SAT does not require showing these fields, but they can be activated according to the customer\'s preference for the current invoice. Use this field for invoice generation requests in which you need to use a different configuration than the pdf_extra field of the organization.\\n","properties":{"codes":{"type":"boolean","default":true,"description":"Show SAT catalog codes next to their descriptions. Example: \\"KGM Kilogramo\\".\\n"},"product_key":{"type":"boolean","default":true,"description":"Show the product/service key.\\n"},"round_unit_price":{"type":"boolean","default":false,"description":"Round the unit price in the PDF to 2 decimals, but keep the 6 decimals in the XML.\\n"},"tax_breakdown":{"type":"boolean","default":true,"description":"Show the tax breakdown in the PDF. If disabled, only the taxes will be shown in the totals, but not in the detail of each concept.\\n"},"ieps_breakdown":{"type":"boolean","default":true,"description":"Show the IEPS breakdown in the PDF. If disabled, only the taxes related to the IVA (VAT) will be shown in the subtotal.\\n"},"render_carta_porte":{"type":"boolean","default":false,"description":"Render the Carta Porte 3.1 Complement in the pdf.\\n"}}}}},"InvoiceableCommonEditInput":{"type":"object","properties":{"folio_number":{"type":"integer","description":"Folio number assigned by the company for internal control. If omitted, the autoincremental value of the organization will be assigned. This field does not have any fiscal relevance.\\n"},"series":{"type":"string","maxLength":25,"description":"Series. Alphanumeric characters designated by the company for internal control and without fiscal relevance."},"pdf_custom_section":{"type":"string","format":"xml","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content.\\n\\nFor security reasons, the code you can send is limited to the following tags: `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `div`, `p`, `span`, `small`, `br`, `b`, `i`, `ul`, `ol`, `li`, `strong`, `table`, `thead`, `tbody`, `tfoot`, `tr`, `th`, and `td`. Attributes and styles are not allowed.\\n"},"addenda":{"type":"string","format":"xml","description":"XML code with the Addendum to add to the invoice."},"namespaces":{"type":"array","description":"If you included the `complements` parameter, this field is optional; however, if you included the `addenda` parameter, you must send the necessary information to include these namespaces in the XML document.\\n","items":{"allOf":[{"$ref":"#/components/schemas/NamespaceRequiredProperties"},{"$ref":"#/components/schemas/NamespaceProperties"}]}},"pdf_options":{"type":"object","description":"Configure which optional fields you want to show in the PDF. The SAT does not require showing these fields, but they can be activated according to the customer\'s preference for the current invoice. Use this field for invoice generation requests in which you need to use a different configuration than the pdf_extra field of the organization.\\n","properties":{"codes":{"type":"boolean","default":true,"description":"Show SAT catalog codes next to their descriptions. Example: \\"KGM Kilogramo\\".\\n"},"product_key":{"type":"boolean","default":true,"description":"Show the product/service key.\\n"},"round_unit_price":{"type":"boolean","default":false,"description":"Round the unit price in the PDF to 2 decimals, but keep the 6 decimals in the XML.\\n"},"tax_breakdown":{"type":"boolean","default":true,"description":"Show the tax breakdown in the PDF. If disabled, only the taxes will be shown in the totals, but not in the detail of each concept.\\n"},"ieps_breakdown":{"type":"boolean","default":true,"description":"Show the IEPS breakdown in the PDF. If disabled, only the taxes related to the IVA (VAT) will be shown in the subtotal.\\n"},"render_carta_porte":{"type":"boolean","default":false,"description":"Render the Carta Porte 3.1 Complement in the pdf.\\n"}}}}},"InvoiceCommonInputProperties":{"allOf":[{"type":"object","properties":{"customer":{"description":"Customer receiving the invoice.","oneOf":[{"$ref":"#/components/schemas/CustomerCreateInput"},{"type":"string","title":"customer_id","description":"ID of the `customer` object previously registered in Facturapi.","example":"58e93bd8e86eb318b0197456"}]},"status":{"type":"string","enum":["pending","draft"],"default":"pending","description":"Initial status of the invoice.\\n\\nIf `draft` is sent, the invoice will\\nbe saved as a draft and will not be stamped or sent to the SAT.\\nAlso, when sending `draft`, all required fields become optional.\\n\\nIf omitted, the default status is `pending` and once stamped (in\\nthe response) this field will be updated to `valid`. For\\nasynchronous invoices, this field will remain `pending` until the\\ninvoice is stamped.\\n","example":"draft"},"date":{"type":"string","format":"date-time","default":"now","description":"Date of issuance of the invoice in ISO8601 format (UTC String). It cannot be earlier than 72 hours in the past, nor later than the present.\\n"},"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"You can use this parameter to specify the address where the invoice was issued.\\nThis field is optional and if not sent, the invoice will be issued with the address of the organization.\\n","required":["zip"],"properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), this field should contain the name of the State or Federative Entity. For foreigners, it should contain the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"}}}]},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this invoice to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n\\nIf left blank, it will not be taken into account.\\n"}}},{"$ref":"#/components/schemas/InvoiceableCommonInput"}]},"InvoiceCommonEditInputProperties":{"allOf":[{"type":"object","properties":{"customer":{"description":"Customer receiving the invoice.","oneOf":[{"$ref":"#/components/schemas/CustomerCreateInput"},{"type":"string","title":"customer_id","description":"ID of the `Customer` object previously registered in Facturapi.","example":"58e93bd8e86eb318b0197456"}]},"status":{"type":"string","enum":["draft"],"description":"Initial status of the invoice. It is only possible to edit an invoice with status `draft`,\\nand it is not possible to change the status when editing, so the only allowed value is `draft`.\\n","example":"draft"},"date":{"type":"string","format":"date-time","description":"Date of issuance of the invoice in ISO8601 format (UTC String). It cannot be earlier than 72 hours in the past, nor later than the present.\\n"},"address":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"You can use this parameter to specify the address where the invoice was issued.\\nThis field is optional and if not sent, the invoice will be issued with the address of the organization.\\n","required":["zip"],"properties":{"state":{"type":"string","description":"If the country is Mexico (\\"MEX\\"), this field should contain the name of the State or Federative Entity. For foreigners, it should contain the State code according to the standard [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), which you can consult in our [State Catalog](https://dashboard.facturapi.io/catalogs/state).","example":"Sonora"}}}]},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this invoice to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n\\nIf left blank, it will not be taken into account.\\n"}}},{"$ref":"#/components/schemas/InvoiceableCommonEditInput"}]},"InvoiceCreateInput":{"type":"object","oneOf":[{"title":"Income","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/InvoiceIngresoInput","draft":"#/components/schemas/InvoiceIngresoEditInput"}}},{"title":"Egress","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/InvoiceEgresoInput","draft":"#/components/schemas/InvoiceEgresoEditInput"}}},{"title":"Payment","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/InvoicePagoInput","draft":"#/components/schemas/InvoicePagoEditInput"}}},{"title":"Payroll","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/InvoiceNominaInput","draft":"#/components/schemas/InvoiceNominaEditInput"}}},{"title":"Transfer","discriminator":{"propertyName":"status","mapping":{"pending":"#/components/schemas/InvoiceTrasladoInput","draft":"#/components/schemas/InvoiceTrasladoEditInput"}}}]},"InvoiceIngresoInput":{"title":"Income","required":["customer","items","payment_form","use"],"allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I"],"default":"I","description":"Type of document. The default value is `\u201CI\u201D` (Income).\\n"},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the invoice.\\n\\nThe maximum number of elements that you can include in an invoice is 5,000. If you need\\nto issue an invoice with more than 5,000 concepts, you can divide the transaction into several invoices.\\n","items":{"$ref":"#/components/schemas/LineItemInput"}},"payment_form":{"type":"string","minLength":2,"maxLength":2,"example":"03","description":"C\xf3digo que representa la forma de pago, de acuerdo al [cat\xe1logo del SAT](#forma-de-pago)."},"payment_method":{"type":"string","default":"PUE","enum":["PUE","PPD"],"description":"Code of the payment method according to the SAT catalog.\\n\\n- `PUE`: Payment in One Installment (paid in full at the time of the transaction)\\n- `PPD`: Payment in Installments or Deferred (partial or deferred payment)\\n"},"use":{"type":"string","default":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n\\nFor global invoices you must use the code `S01`.\\n"},"currency":{"type":"string","default":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","default":1,"description":"Exchange rate according to the currency used. It represents the\\nnumber of Mexican pesos (MXN) equivalent to one unit of the\\ncurrency indicated in the `currency` attribute.\\n"},"conditions":{"type":"string","minLength":1,"maxLength":1000,"description":"Payment conditions. Free text field usually used to specify payment terms, such as the due date.","example":"Fecha l\xedmite de pago: 28/feb/2025"},"related_documents":{"type":"array","description":"Documents related to the invoice.","default":[],"items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"global":{"type":"object","required":["periodicity","months","year"],"description":"Required object when creating a global invoice.\\n","properties":{"periodicity":{"type":"string","description":"Periodicity the global invoice covers.\\n\\n- `day`: Daily\\n- `week`: Weekly\\n- `fortnight`: Every half month (quincena)\\n- `month`: Monthly\\n- `two_months`: Once every two months\\n","enum":["day","week","fortnight","month","two_months"]},"months":{"type":"string","description":"Key representing the month or bimester of the invoice. Consult\\nthe possible values in the [Months and Bimesters catalog](#meses-y-bimestres).\\n","example":"01"},"year":{"type":"integer","description":"Year of the invoice.","example":2022}}},"export":{"type":"string","default":"01","enum":["01","02","03","04"],"description":"Indicates if the invoice covers an export operation.\\n\\n- `01`: Not applicable\\n- `02`: Definitive with key A1\\n- `03`: Temporary\\n- `04`: Definitive with key different from A1 or when there is no sale in terms of the CFF\\n"},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the invoice. You can include any complement in the\\ninvoice if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoiceEgresoInput":{"title":"Egress","allOf":[{"type":"object","required":["type","customer","payment_form","items"],"properties":{"type":{"type":"string","enum":["E"]},"payment_form":{"type":"string","minLength":2,"maxLength":2,"example":"03","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago)."},"related_documents":{"type":"array","description":"Documents related to the credit note.\\n","default":[],"items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the credit note.\\n\\nThe maximum number of elements that you can include in a document is 5,000. If you need\\nto issue a document with more than 5,000 concepts, you can divide the transaction into several documents.\\n","items":{"$ref":"#/components/schemas/LineItemEgresoInput"}},"use":{"type":"string","default":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n"},"currency":{"type":"string","default":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","default":1,"description":"Exchange rate according to the currency used. It represents the\\nnumber of Mexican pesos (MXN) equivalent to one unit of the\\ncurrency indicated in the `currency` attribute.\\n"},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the credit note. You can include any complement in the\\ncredit note if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoicePagoInput":{"title":"Payment","allOf":[{"type":"object","required":["type","customer","complements"],"properties":{"type":{"type":"string","enum":["P"]},"related_documents":{"type":"array","description":"Documents related to the invoice.","default":[],"items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"third_party":{"allOf":[{"type":"object","required":["legal_name","tax_id","tax_system","zip"]},{"$ref":"#/components/schemas/ThirdParty"}]},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/PagoOrCustomComplementInput"},"description":"Complements to include in the invoice."}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoiceNominaInput":{"title":"Payroll","allOf":[{"type":"object","required":["type","customer","complements"],"properties":{"type":{"type":"string","enum":["N"]},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/NominaOrCustomComplementInput"},"description":"Complements to include in the invoice."},"related_documents":{"type":"array","description":"Documents related to the invoice.","default":[],"items":{"$ref":"#/components/schemas/RelatedDocumentInput"}}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoiceTrasladoInput":{"title":"Transfer","allOf":[{"type":"object","required":["type","items","customer"],"properties":{"type":{"type":"string","enum":["T"]},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the Transfer invoice.\\n\\nThe maximum number of elements that you can include in an invoice is 5,000. If you need\\nto issue an invoice with more than 5,000 concepts, you can divide the transaction into several invoices.\\n","items":{"$ref":"#/components/schemas/LineItemTrasladoInput"}},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the invoice. You can include any complement in the\\ninvoice if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"},"use":{"type":"string","default":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n"},"currency":{"type":"string","default":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","default":1,"description":"Exchange rate according to the currency used. It represents the\\nnumber of Mexican pesos (MXN) equivalent to one unit of the\\ncurrency indicated in the `currency` attribute.\\n"},"related_documents":{"type":"array","description":"Documents related to the invoice.","default":[],"items":{"$ref":"#/components/schemas/RelatedDocumentInput"}}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoiceIngresoEditInput":{"title":"Income","allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the invoice.\\n\\nThe maximum number of elements that you can include in an invoice is 5,000. If you need\\nto issue an invoice with more than 5,000 concepts, you can divide the transaction into several invoices.\\n","items":{"$ref":"#/components/schemas/LineItemInput"}},"payment_form":{"type":"string","minLength":2,"maxLength":2,"example":"03","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago)."},"payment_method":{"type":"string","enum":["PUE","PPD"],"description":"Code of the payment method according to the SAT catalog.\\n\\n- `PUE`: Payment in One Installment (paid in full at the time of the transaction)\\n- `PPD`: Payment in Installments or Deferred (partial or deferred payment)\\n"},"use":{"type":"string","example":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n\\nFor global invoices you must use the code `S01`.\\n"},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","description":"Echange rate for the currency used. It represents the number of pesos mexicanos (MXN) equivalent to one unit of the currency indicated in the `currency`.\\n"},"conditions":{"type":"string","minLength":1,"maxLength":1000,"description":"Payment conditions. Free text field usually used to specify payment terms, such as the due date.","example":"Fecha l\xedmite de pago: 28/feb/2025"},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"global":{"type":"object","required":["periodicity","months","year"],"description":"Object required when creating a global invoice.\\n","properties":{"periodicity":{"type":"string","description":"Periodicity the global invoice covers.\\n\\n- `day`: Daily\\n- `week`: Weekly\\n- `fortnight`: Every half month (quincena)\\n- `month`: Monthly\\n- `two_months`: Once every two months\\n","enum":["day","week","fortnight","month","two_months"]},"months":{"type":"string","description":"Key representing the month or bimester of the invoice. Consult\\nthe possible values in the [Months and Bimesters catalog](#meses-y-bimestres).\\n","example":"01"},"year":{"type":"integer","description":"Year of the invoice.","example":2022}}},"export":{"type":"string","enum":["01","02","03","04"],"description":"Indicates if the invoice covers an export operation.\\n\\n- `01`: Not applicable\\n- `02`: Definitive with key A1\\n- `03`: Temporary\\n- `04`: Definitive with key different from A1 or when there is no sale in terms of the CFF\\n"},"complements":{"type":"array","items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the invoice. You can include any complement in the\\ninvoice if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"}}},{"$ref":"#/components/schemas/InvoiceCommonEditInputProperties"}]},"InvoiceEgresoEditInput":{"title":"Egress","allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"payment_form":{"type":"string","minLength":2,"maxLength":2,"example":"03","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago)."},"related_documents":{"type":"array","description":"Documents related to the credit note.\\n","items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the credit note.\\n\\nThe maximum number of elements that you can include in a document is 5,000. If you need\\nto issue a document with more than 5,000 concepts, you can divide the transaction into several documents.\\n","items":{"$ref":"#/components/schemas/LineItemEgresoInput"}},"use":{"type":"string","example":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n"},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","description":"Exchange rate according to the currency used. It represents the number of pesos mexicanos (MXN) equivalent to one unit of the currency indicated in the `currency`.\\n"},"complements":{"type":"array","items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the credit note. You can include any complement in the\\ncredit note if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"}}},{"$ref":"#/components/schemas/InvoiceCommonInputProperties"}]},"InvoicePagoEditInput":{"title":"Payment","allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocumentInput"}},"third_party":{"allOf":[{"type":"object","required":["legal_name","tax_id","tax_system","zip"]},{"$ref":"#/components/schemas/ThirdParty"}]},"complements":{"type":"array","items":{"$ref":"#/components/schemas/PagoOrCustomComplementInput"},"description":"Complements to include in the invoice."}}},{"$ref":"#/components/schemas/InvoiceCommonEditInputProperties"}]},"InvoiceNominaEditInput":{"title":"Payroll","allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"complements":{"type":"array","items":{"$ref":"#/components/schemas/NominaOrCustomComplementInput"},"description":"Complements to include in the invoice."},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocumentInput"}}}},{"$ref":"#/components/schemas/InvoiceCommonEditInputProperties"}]},"InvoiceTrasladoEditInput":{"title":"Transfer","allOf":[{"type":"object","properties":{"type":{"type":"string","enum":["I","E","P","N","T"],"description":"Type of document. It can have the values `\\"I\\"`: Income, `\\"P\\"`: Payment, `\\"E\\"`: Egress, `\\"N\\"`: Payroll, `\\"T\\"`: Transfer.\\n"},"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the Transfer invoice.\\n\\nThe maximum number of elements that you can include in an invoice is 5,000. If you need\\nto issue an invoice with more than 5,000 concepts, you can divide the transaction into several invoices.\\n","items":{"$ref":"#/components/schemas/LineItemTrasladoInput"}},"complements":{"type":"array","items":{"$ref":"#/components/schemas/CustomComplementInput"},"description":"Complements to include in the invoice. You can include any complement in the\\ninvoice if you build the XML node of the complement yourself and use the `custom` type.\\nIt is necessary to add the complement information to the PDF separately using the\\n`pdf_custom_section` parameter.\\n"},"use":{"type":"string","example":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n"},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","description":"Exchange rate for the currency used. It represents the number of pesos mexicanos (MXN) equivalent to one unit of the currency indicated in the `currency` attribute.\\n"},"related_documents":{"type":"array","description":"Documents related to the invoice.","items":{"$ref":"#/components/schemas/RelatedDocumentInput"}}}},{"$ref":"#/components/schemas/InvoiceCommonEditInputProperties"}]},"Receipt":{"title":"Receipt object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/ReceiptProperties"}]},"ReceiptProperties":{"allOf":[{"type":"object","properties":{"date":{"type":"string","format":"date-time","example":"2021-09-10T15:21:23.456Z","description":"Date of issuance of the receipt in ISO8601 format (UTC String).\\n"},"expires_at":{"type":"string","format":"date-time","example":"2021-09-17T15:21:23.456Z","description":"Expiration date in ISO8601 format (UTC String).\\n\\nIt is the deadline for the customer to invoice their receipt on the autofactura portal.\\nIt is calculated automatically from the organization\'s receipt settings.\\n"},"status":{"type":"string","enum":["open","canceled","invoiced_to_customer","invoiced_globally"],"description":"Estado actual del recibo."},"self_invoice_url":{"type":"string","format":"url","example":"https://factura.space/empresa-demo/r9YqYarL","description":"URL to the self-invoice portal. It includes the `key` of the receipt.\\n\\nYou can use it to generate a button or a QR code for your customers to invoice their receipts.\\n"},"total":{"type":"number","example":356.78,"description":"Total amount of the operation"},"invoice":{"type":"string","example":"614496b471d422de4b6cfcc4","description":"ID of the associated invoice, if invoiced."},"key":{"type":"string","example":"r9YqYarL","description":"Auto-generated. Short alphanumeric unique identifier, useful for accessing the self-invoice from your microsite on factura.space.\\n"},"items":{"type":"array","description":"Sale items included in the receipt.\\n","items":{"$ref":"#/components/schemas/LineItem"}},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this receipt to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n\\nIf left blank, it will not be taken into account.\\n"}}},{"$ref":"#/components/schemas/ReceiptEditableProperties"}]},"ReceiptInput":{"allOf":[{"type":"object","required":["items","payment_form"],"properties":{"items":{"type":"array","maxItems":5000,"description":"Concepts to include in the receipt.\\n\\nThe maximum number of elements that you can include in a receipt is 5,000. If you need\\nto issue a receipt with more than 5,000 concepts, you can divide the transaction into several receipts.\\n","items":{"$ref":"#/components/schemas/LineItemInput"}}}},{"$ref":"#/components/schemas/ReceiptEditableProperties"},{"type":"object","properties":{"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n\\nIf left blank, it will not be taken into account.\\n"}}}]},"ReceiptEditableProperties":{"type":"object","properties":{"date":{"type":"string","format":"date-time","example":"2021-09-10T15:21:23.456Z","description":"Date of issuance of the receipt in ISO8601 format (UTC String).\\n"},"payment_form":{"type":"string","example":"03","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago)."},"folio_number":{"type":"integer","example":120,"description":"Autoincremental. Number of the receipt for internal control and without fiscal relevance.\\n"},"currency":{"type":"string","example":"MXN","description":"Currency code, according to the standard [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)."},"exchange":{"type":"number","minimum":0,"example":1,"description":"Exchange rate according to the currency used. It represents the number of Mexican pesos (MXN) equivalent to one unit of the currency indicated in the `currency` attribute.\\n"},"branch":{"type":"string","description":"Name of the branch where the receipt was issued."},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this receipt to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"}}},"ReceiptSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Receipt"}}}}]},"InvoiceReceiptInput":{"type":"object","required":["customer"],"allOf":[{"type":"object","properties":{"customer":{"description":"Customer receiving the invoice. You can send the customer object directly or the ID of a previously registered customer in Facturapi.\\n","oneOf":[{"$ref":"#/components/schemas/CustomerCreateInput"},{"type":"string","title":"customer_id","description":"ID of the \'customer\' object previously registered in Facturapi.","example":"58e93bd8e86eb318b0197456"}]},"use":{"type":"string","default":"G01","description":"Code of Use of CFDI according to the SAT catalog. You can see the codes in [this table](#uso-cfdi), or use the constants included in our libraries.\\n"},"conditions":{"type":"string","minLength":1,"maxLength":1000,"description":"Payment conditions. Free text field usually used to specify payment terms, such as the due date."}}},{"$ref":"#/components/schemas/InvoiceableCommonInput"}]},"GlobalInvoiceInput":{"type":"object","required":["periodicity"],"properties":{"from":{"type":"string","format":"date","default":"Start of the last period","example":"2022-01-01T00:00:00.000","description":"Initial date of the receipts that will be included in the global invoice.\\nBy default, this value is the start of the last period (day, week,\\nfortnight, or month), according to the value of \\"Periodicity\\" (`periodicity`)\\nin the receipts configuration of your organization. This value is required when the `receipts` field is sent.\\n"},"to":{"type":"string","format":"date","default":"End of the last period","example":"2022-31-01T23:59:59.999","description":"End date of the receipts that will be included in the global invoice.\\nBy default, this value is the end of the last period (day, week,\\nfortnight, or month), according to the value of \\"Periodicity\\" (`periodicity`)\\nin the receipts configuration of your organization. This value is required when the `receipts` field is sent.\\n"},"periodicity":{"type":"string","default":"`periodicity` property from the organization\'s receipt configuration.","enum":["day","week","fortnight","month","two_months"],"description":"Periodicity that corresponds to the range of dates used.\\nIf omitted, the organization\'s receipt configuration will be used.\\nIf you omit sending the `from` and `to` fields, the default dates will depend on the value of `periodicity`.\\n"},"months":{"type":"string","default":"Month contained in the range of dates used.","description":"Key representing the month or bimester of the invoice. Consult\\nthe possible values in the [Months and Bimesters catalog](#meses-y-bimestres).\\n","example":"01"},"folio_number":{"type":"integer","default":"autoincremental","description":"Number of the folio assigned by the company for internal control.\\nIf omitted, the incremental value of the organization will be assigned.\\n"},"series":{"type":"string","maxLength":25,"description":"Series. Alphanumeric characters designated by the company for internal control and without fiscal validity.","example":"F"},"date":{"type":"string","format":"date","default":"Value of the `to` field","example":"2022-01-01T00:00:00.000","description":"Date of issuance of the invoice. By default, it takes the value of the `to` field.\\n"},"payment_form":{"type":"string","minLength":2,"maxLength":2,"example":"02","description":"Payment form code according to the [Payment Form catalog](#forma-de-pago).\\n\\nIf included, the receipts will be grouped and the global invoice will be created by the payment form.\\n"},"receipts":{"type":"array","description":"Receipts to include in the global invoice. If this parameter is included, the `from` and `to` parameters will be required and must comply with the `periodicity` field.\\n","items":{"type":"string","format":"hex","minLength":24,"maxLength":24,"description":"ID of a receipt previously registered in Facturapi.","example":"614496b471d422de4b6cfcc4"}}}},"Retention":{"title":"Retention object","allOf":[{"$ref":"#/components/schemas/ResourceAutoGeneratedProps"},{"$ref":"#/components/schemas/RetentionReadOnlyProperties"},{"$ref":"#/components/schemas/RetentionProperties"}]},"RetentionReadOnlyProperties":{"type":"object","properties":{"status":{"type":"string","enum":["valid","canceled"],"description":"Current status of the document.\\n","example":"valid"},"verification_url":{"type":"string","format":"uri","description":"URL to verify the status of the retention on the SAT portal. This link is the same as the one that appears in the QR code on the retention PDF.","example":"https://verificacfdi.facturaelectronica.sat.gob.mx/default.aspx?id=45BEC0CA-5F1E-491E-9417-698EA48C382A&re=AAA010101AAA&rr=ABC101010111&tt=345.600000&fe=bWApPw=="},"type":{"type":"string","enum":["Retenci\xf3n"],"example":"Retenci\xf3n","description":"Type of document."},"uuid":{"type":"string","format":"uuid","description":"Fiscal folio of the retention, assigned by the SAT.\\n","example":"39c85a3f-275b-4341-b259-e8971d9f8a94"},"stamp":{"$ref":"#/components/schemas/Stamp"},"customer":{"$ref":"#/components/schemas/CuustomerInfo"}}},"RetentionProperties":{"type":"object","properties":{"cve_retenc":{"type":"string","example":1,"description":"Key of the retention or payment information according to the SAT catalog.\\n"},"fecha_exp":{"type":"string","format":"date-time","example":"2021-09-15T06:03:23.000Z","description":"Date of issuance of the document in ISO8601 format (UTC String)."},"desc_retenc":{"type":"string","description":"If the retention key is \\"25\\" (Other types of retentions), this field is used to register the description of the retention.\\n"},"folio_int":{"type":"string","description":"Alphanumeric identifier for internal control of the company and without fiscal relevance."},"periodo":{"type":"object","description":"Information about the retention period.","properties":{"mes_ini":{"type":"integer","minimum":1,"maximum":12,"description":"Initial month of the retention period."},"mes_fin":{"type":"integer","minimum":1,"maximum":12,"description":"Final month of the retention period."},"ejerc":{"type":"integer","description":"Fiscal year in which the retention was made."}}},"totales":{"type":"object","description":"Information about the total of retentions made in the corresponding period.","properties":{"monto_tot_operacion":{"type":"number","minimum":0,"description":"Total amount of the operation, with precision of up to 6 decimals."},"monto_tot_grav":{"type":"number","minimum":0,"description":"Total amount taxed."},"monto_tot_exent":{"type":"number","minimum":0,"description":"Total amount exempt."},"monto_tot_ret":{"type":"number","minimum":0,"description":"Sum of the amounts of taxes withheld."},"imp_retenidos":{"type":"array","description":"Collection of withheld taxes.","items":{"type":"object","properties":{"base":{"type":"number","minimum":0,"description":"Base amount on which the tax was calculated."},"impuesto":{"type":"string","enum":["IVA","ISR"],"example":"IVA","description":"Key of the type of tax withheld, from the SAT catalog.\\n\\n- `IVA`: Value Added Tax\\n- `ISR`: Income Tax\\n"},"monto":{"type":"number","minimum":0,"description":"Amount of the tax withheld."},"tipo_pago_ret":{"type":"string","enum":[1,2,3,4],"description":"Key of the type of payment according to the SAT catalog.\\n\\n- `01`: Definitive IVA (VAT) payment\\n- `02`: Definitive IEPS payment\\n- `03`: Definitive ISR Platforms payment\\n- `04`: Provisional ISR payment\\n"}}}}}},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this retention to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n\\nIf left blank, it will not be taken into account.\\n"},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/CustomComplementData"},"description":"Array of complements to include in the retention. Each element contains a `string` with the XML code of the complement.\\n"},"pdf_custom_section":{"type":"string","format":"html","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content.\\n"},"addenda":{"type":"string","format":"xml","description":"XML code with the Addenda that needs to be added to the invoice."},"namespaces":{"type":"array","description":"Namespaces to insert in the root node of the invoice. Required for `addenda`.","items":{"$ref":"#/components/schemas/NamespaceProperties"}}}},"RetentionSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Retention"}}}}]},"RetentionInput":{"type":"object","required":["customer","cve_retenc","periodo","totales"],"properties":{"customer":{"description":"Customer receiving the invoice.","oneOf":[{"$ref":"#/components/schemas/CustomerCreateInput"},{"type":"string","title":"customer_id","description":"ID of the \'customer\' object previously registered in Facturapi.","example":"58e93bd8e86eb318b0197456"}]},"cve_retenc":{"type":"string","example":26,"description":"Key of the retention or payment information according to the [SAT catalog](#clave-de-retencion)."},"fecha_exp":{"type":"string","format":"date-time","example":"2021-09-15T06:03:23.000Z","description":"Date of issuance of the document in ISO8601 format (UTC String)."},"desc_retenc":{"type":"string","description":"If the retention key is \\"25\\" (Other types of retentions), this field is used to register the description of the retention.\\n"},"folio_int":{"type":"string","example":"R123","description":"Alphanumeric identifier for internal control of the company and without fiscal relevance."},"periodo":{"type":"object","description":"Information about the retention period.","required":["mes_ini","mes_fin","ejerc"],"properties":{"mes_ini":{"type":"integer","minimum":1,"maximum":12,"example":9,"description":"Initial month of the retention period."},"mes_fin":{"type":"integer","minimum":1,"maximum":12,"example":9,"description":"Final month of the retention period."},"ejerc":{"type":"integer","example":2021,"description":"Fiscal year in which the retention was made."}}},"totales":{"type":"object","description":"Information about the total of retentions made in the corresponding period.","required":["monto_tot_operacion","monto_tot_exent","imp_retenidos"],"properties":{"monto_tot_operacion":{"type":"number","minimum":0,"description":"Total amount of the operation, with precision of up to 6 decimals."},"monto_tot_grav":{"type":"number","minimum":0,"description":"Total amount taxed."},"monto_tot_exent":{"type":"number","minimum":0,"description":"Total amount exempt."},"monto_tot_ret":{"type":"number","minimum":0,"description":"Sum of the amounts of taxes withheld."},"imp_retenidos":{"type":"array","description":"Collection of withheld taxes.","required":["monto_ret"],"items":{"type":"object","required":["monto_ret","tipo_pago_ret"],"properties":{"base_ret":{"type":"number","minimum":0,"description":"Base amount on which the tax was calculated."},"impuesto":{"type":"string","enum":["IVA","ISR"],"example":"IVA","description":"Key of the type of tax withheld, from the SAT catalog.\\n\\n- `IVA`: Value Added Tax\\n- `ISR`: Income Tax\\n"},"monto_ret":{"type":"number","minimum":0,"description":"Amount of the tax withheld."},"tipo_pago_ret":{"type":"string","enum":[1,2,3,4],"description":"Key of the type of payment according to the SAT catalog.\\n\\n- `01`: Definitive IVA (VAT) payment\\n- `02`: Definitive IEPS payment\\n- `03`: Definitive ISR Platforms payment\\n- `04`: Provisional ISR payment\\n"}}}}}},"external_id":{"type":"string","description":"Optional identifier that you can use to relate this retention to your records and later search by this number. Facturapi does not validate that this field is unique.\\n"},"idempotency_key":{"type":"string","description":"Unique identifier that you can use to avoid duplicates when retrying a request. It can be any text string, as long as it is unique for each document.\\n"},"complements":{"type":"array","default":[],"items":{"$ref":"#/components/schemas/CustomComplementData"},"description":"Array of complements to include in the retention. Each element contains a `string` with the XML code of the complement, as you want it to be inserted in the XML of the CFDI. Only one root XML node is allowed per element.\\n"},"pdf_custom_section":{"type":"string","format":"html","description":"In case you need to include more information in the PDF, this field allows you to insert HTML code with your own content.\\n"},"addenda":{"type":"string","format":"xml","description":"XML code with the Addenda that needs to be added to the invoice."},"namespaces":{"type":"array","description":"Namespaces to insert in the root node of the invoice. Required for `addenda`.","items":{"allOf":[{"$ref":"#/components/schemas/NamespaceRequiredProperties"},{"$ref":"#/components/schemas/NamespaceProperties"}]}}}},"OrganizationAddress":{"allOf":[{"$ref":"#/components/schemas/CommonAddressProperties"},{"type":"object","description":"Fiscal address of the issuing organization.","properties":{"state":{"type":"string","description":"Name of the State or Federative Entity.","example":"Sonora"}}}]},"OrganizationSearchResult":{"allOf":[{"$ref":"#/components/schemas/SearchResult"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}}}]},"Organization":{"title":"Organization object","type":"object","properties":{"id":{"type":"string","description":"ID of the organization, assigned by Facturapi.","example":"5a2a307be93a2f00129ea035"},"created_at":{"type":"string","format":"date-time","description":"Date and time of creation of the organization.","example":"2017-05-05T20:55:33.468Z"},"is_production_ready":{"type":"boolean","description":"Indicates if the organization has the necessary information to issue invoices in the Live environment."},"pending_steps":{"type":"array","description":"List of steps that need to be completed for this organization to issue valid invoices in the Live environment.","items":{"type":"object","properties":{"type":{"type":"string","enum":["legal","logo","certificate"],"description":"Code that represents the type of step that needs to be completed.\\n"},"description":{"type":"string","description":"Text that describes the step that needs to be completed and that you can use to show it to the user."}}}},"legal":{"type":"object","description":"Fiscal information of the organization.","properties":{"name":{"type":"string","description":"Commercial name of the organization."},"legal_name":{"type":"string","description":"Fiscal or Legal Name of the organization, *without* the corporate regime (e.g.: S.A. de C.V.).\\n"},"tax_system":{"type":"string","example":"601","maxLength":3,"minLength":3,"description":"Fiscal Regime Code, from the [SAT catalog](#r\xe9gimen-fiscal)."},"website":{"type":"string","description":"Website of the organization, which will be referenced when sending the invoice by email."},"phone":{"type":"string","description":"Phone number of the organization, which will appear in the invoice PDF."},"address":{"allOf":[{"type":"object","description":"Fiscal address of the organization."},{"$ref":"#/components/schemas/OrganizationAddress"}]}}},"customization":{"type":"object","description":"Organization customization settings, which will be used to reflect the branding and PDF preferences of the organization. This data can be updated at any time.\\n","properties":{"has_logo":{"type":"boolean","description":"Indicates if the organization already has a logo uploaded."},"color":{"type":"string","format":"hex","example":"BADA55","description":"Distinctive color of the brand in Hexadecimal RGB representation of 6 characters.\\n"},"next_folio_number":{"type":"integer","example":123,"description":"Folio number that will be assigned to the next invoice in the Live environment (and that will be automatically incremented for each new invoice)."},"next_folio_number_test":{"type":"integer","example":123,"description":"Folio number that will be assigned to the next invoice in the Test environment (and that will be automatically incremented for each new invoice).\\n"},"pdf_extra":{"type":"object","description":"Configure which optional fields you want to show in the PDF. The SAT does not require these fields to be shown, but they can be activated according to the organization\'s preference.\\n","properties":{"codes":{"type":"boolean","default":true,"description":"Show SAT catalog codes next to their descriptions. Example: \\"KGM Kilogramo\\".\\n"},"product_key":{"type":"boolean","default":true,"description":"Show the product-service key.\\n"},"round_unit_price":{"type":"boolean","default":false,"description":"Round the unit price in the PDF to 2 decimals, but keep the 6 decimals in the XML.\\n"},"tax_breakdown":{"type":"boolean","default":true,"description":"Show the tax breakdown in the PDF. If disabled, only the taxes will be shown in the totals, but not in the detail of each concept.\\n"},"ieps_breakdown":{"type":"boolean","default":true,"description":"Show the breakdown of IEPS in the PDF. If disabled, only the taxes related to IVA (VAT) will be shown in the subtotal.\\n"},"render_carta_porte":{"type":"boolean","default":false,"description":"Render the Carta Porte 3.1 Complement in the pdf.\\n"}}}}},"certificate":{"type":"object","description":"Useful information about the organization\'s Digital Stamp Certificate (CSD), which will be used to sign the invoices.\\n","properties":{"has_certificates":{"type":"boolean","description":"Indicates if the organization already has the Digital Stamp Certificate (CSD) uploaded."},"updated_at":{"type":"string","format":"date-time","example":"2023-05-05T20:55:33.468Z","description":"Date of the last update of the certificate."},"expires_at":{"type":"string","format":"date-time","example":"2025-05-05T20:55:33.468Z","description":"Expiration date of the certificate."}}}}},"OrganizationDeleteCerts":{"type":"object","properties":{"updated_at":{"type":"string","format":"date-time","description":"Date of deletion of the CSD certificate."}}},"OrganizationCreateInput":{"type":"object","required":["name"],"properties":{"name":{"type":"string","maxLength":100,"description":"Commercial name of the organization."}}},"OrganizationLegalInput":{"type":"object","required":["name","legal_name","tax_system","address"],"properties":{"name":{"type":"string","maxLength":100,"description":"Commercial name of the organization."},"legal_name":{"type":"string","maxLength":100,"description":"Fiscal or Legal Name of the organization, *without* the corporate regime (e.g.: S.A. de C.V.).\\n"},"tax_system":{"type":"string","maxLength":3,"minLength":3,"example":"601","description":"Fiscal Regime Code, from the [SAT catalog](#r\xe9gimen-fiscal)."},"website":{"type":"string","description":"Website of the organization, which will be referenced when sending the invoice by email."},"support_email":{"type":"string","description":"Email address for clarifications. It will appear in the invoice PDF and emails.\\n"},"phone":{"type":"string","description":"Phone number of the organization, which will appear in the invoice PDF and emails."},"address":{"allOf":[{"type":"object","description":"Fiscal address of the issuing organization.","required":["zip","street","exterior"]},{"$ref":"#/components/schemas/OrganizationAddress"}]}}},"OrganizationCertsInput":{"type":"object","required":["cerFile","keyFile","password"],"properties":{"cerFile":{"type":"string","format":"binary","description":"Binary content of the file with extension `.cer` of the CSD certificate."},"keyFile":{"type":"string","format":"binary","description":"Binary content of the file with extension `.key` of the CSD certificate."},"password":{"type":"string","description":"Password of the certificate key."}}},"OrganizationLogoInput":{"type":"object","required":["file"],"properties":{"file":{"type":"string","format":"binary","description":"Binary content of the file with the image to be used as a logo.\\n\\nSupported formats:\\n\\n- jpg\\n- png\\n- svg\\n"}}},"OrganizationCustomizationInput":{"type":"object","properties":{"color":{"type":"string","format":"hex","example":"BADA55","description":"Distinctive color of the brand in Hexadecimal RGB representation of 6 characters.\\n"},"next_folio_number":{"type":"integer","example":123,"description":"Folio number that will be assigned to the next invoice created in this organization in the Live environment. It will be automatically incremented for each new invoice."},"next_folio_number_test":{"type":"integer","example":123,"description":"Folio number that will be assigned to the next invoice created in this organization in the Test environment. It will be automatically incremented for each new invoice.\\n"},"pdf_extra":{"type":"object","description":"Configure which optional fields you want to show in the PDF. The SAT does not require these fields to be shown, but they can be activated according to the organization\'s preference.\\n","properties":{"codes":{"type":"boolean","default":true,"description":"Show SAT catalog codes next to their descriptions. Example: \\"KGM Kilogramo\\".\\n"},"product_key":{"type":"boolean","default":true,"description":"Show the product-service key.\\n"},"round_unit_price":{"type":"boolean","default":false,"description":"Round the unit price in the PDF to 2 decimals, but keep the 6 decimals in the XML.\\n"},"tax_breakdown":{"type":"boolean","default":true,"description":"Show the tax breakdown in the PDF. If disabled, only the taxes will be shown in the totals, but not in the detail of each concept.\\n"},"ieps_breakdown":{"type":"boolean","default":true,"description":"Show the breakdown of IEPS in the PDF. If disabled, only the taxes related to IVA (VAT) will be shown in the subtotal.\\n"},"render_carta_porte":{"type":"boolean","default":false,"description":"Render the Carta Porte 3.1 Complement in the pdf.                \\n"}}}}},"OrganizationReceiptsInput":{"type":"object","properties":{"periodicity":{"type":"string","default":"month","enum":["day","week","fortnight","month","two_months"],"description":"Periodicity with which the company decides to issue a global invoice\\n(to the general public) for all the receipts not invoiced. This value is used as the default when creating a global invoice.\\n"},"duration_days":{"type":"integer","default":7,"description":"Maximum number of days to invoice through the self-invoicing portal\\nafter the receipt is issued and before the last day of the period\\ndefined by the `periodicity` attribute. The value `0` deactivates this\\noption, making the receipts always expire on the last day of the period.\\n"},"next_folio_number":{"type":"integer","description":"Folio number that will be assigned to the next receipt created in this organization in the Live environment."},"next_folio_number_test":{"type":"integer","description":"Folio number that will be assigned to the next receipt created in this organization in the Test environment.\\n"}}},"DomainField":{"type":"string","maxLength":50,"minLength":4,"pattern":"^[a-z][a-z0-9-_]{2,48}[a-z0-9]$","description":"Domain name. Alphanumeric characters are allowed, only lowercase,\\nhyphen (-) and underscore (_). It must start with a letter and\\nend in a letter or number.\\n"},"OrganizationDomainInput":{"type":"object","required":["domain"],"properties":{"domain":{"$ref":"#/components/schemas/DomainField"}}},"OrganizationSeriesCreateInput":{"type":"object","required":["series","next_folio","next_folio_test"],"properties":{"series":{"type":"string","maxLength":55,"description":"Series name"},"next_folio":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Live environment (and will automatically increase with each new invoice)."},"next_folio_test":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Test environment (and will automatically increase with each new invoice)."}}},"OrganizationSeriesUpdateInput":{"type":"object","properties":{"next_folio":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Live environment (and will automatically increase with each new invoice)."},"next_folio_test":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Test environment (and will automatically increase with each new invoice)."}}},"OrganizationSeriesGroup":{"title":"Objeto Series","type":"object","properties":{"series":{"type":"string","description":"Series Name.","example":"New"},"next_folio":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Live environment (and will automatically increase with each new invoice).","example":123},"next_folio_test":{"type":"integer","description":"Folio number that will be assigned to the next invoice in the Test environment (and will automatically increase with each new invoice).","example":123}}}},"securitySchemes":{"SecretLiveKey":{"type":"http","scheme":"bearer","bearerFormat":"sk_live_XXXXXXXXXXXX","description":"Unique per organization. Allows you to create, retrieve, and manage resources in the Live environment for a specific organization.\\n"},"SecretTestKey":{"type":"http","scheme":"bearer","bearerFormat":"sk_test_XXXXXXXXXXXX","description":"Unique per organization. Allows you to create, retrieve, and manage resources in the Test environment for a specific organization.\\n"},"SecretUsertKey":{"type":"http","scheme":"bearer","bearerFormat":"sk_user_XXXXXXXXXXXX","description":"Unique per account. Allows you to create and configure organizations belonging to the user\'s account\\n"}}}}}')}}]);